{"version":3,"sources":["./src/app/api.interceptor.ts","./src/app/reducers.ts","./src/app/actions/config.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/reducers/reports.ts","./src/app/effects/config.ts","./src/app/main/tabs/filter-tab/filter-tab-row.component.ts","./src/app/main/tabs/filter-tab/filter-tab-row.component.html","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/main/tabs/display-tab/display-tab.component.ts","./src/app/main/tabs/display-tab/display-tab.component.html","./src/app/main/tabs/report-tab/report-tab.component.ts","./src/app/models/reports.ts","./src/app/selectors/config.ts","./src/app/main/tabs/report-tab/report-preview.component.ts","./src/app/generic.guard.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/main/tabs/display-tab/display-tab-row.component.ts","./src/app/main/tabs/display-tab/display-tab-row.component.html","./src/app/selectors.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/main/tabs/filter-tab/filter-tab.component.ts","./src/app/main/tabs/filter-tab/filter-tab.component.html","./src/app/new-report/new-report.component.ts","./src/app/new-report/new-report.component.html","./src/app/confirm/confirm-modal.component.ts","./src/app/confirm/confirm-modal.component.html","./src/app/main/tabs/filter-tab/filter-input.component.ts","./src/app/main/tabs/filter-tab/filter-input.component.html","./src/app/app.module.ts","./src/app/actions/display-field.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/main/tabs/report-tab/last-report.component.ts","./src/app/effects/reports.ts","./src/app/main/tabs/report-tab/saved-timestamp.component.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/actions/router.ts","./src/app/main/right-sidebar/right-sidebar.component.ts","./src/app/main/right-sidebar/right-sidebar.component.html","./src/app/selectors/reports.ts","./src/app/main/tabs/options-tab/options-tab.component.ts","./src/app/main/tabs/options-tab/options-tab.component.html","./src/app/main/right-sidebar/field.component.ts","./src/app/actions/filter.ts","./src/app/effects/router.ts","./src/app/main/tabs/tabs.component.ts","./src/app/main/tabs/tabs.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/api.service.ts","./src/app/actions/reports.ts","./src/app/reducers/config.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, throwError, EMPTY } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { State } from './reducers';\r\nimport { CancelGeneratePreview } from './actions/reports';\r\n\r\n@Injectable()\r\nexport class NetworkErrorInterceptor implements HttpInterceptor {\r\n  constructor(public snackBar: MatSnackBar, private store: Store<State>) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // Respect base URL tag\r\n    const baseUrl = document.getElementsByTagName('base')[0].href;\r\n    const apiReq = request.clone({ url: `${baseUrl}${request.url}` });\r\n\r\n    return next.handle(apiReq).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        if (err.status === 0 || err.status === 500) {\r\n          // An error we can't help with happened, one of:\r\n          // 1. Network error\r\n          // 2. Client side JS error\r\n          // 3. Server side 500 error\r\n          this.store.dispatch(new CancelGeneratePreview());\r\n          this.snackBar.open('Sorry, something went wrong!', '', {\r\n            duration: 5000,\r\n          });\r\n          return EMPTY;\r\n        }\r\n        return throwError(err.error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\r\nimport { Params, RouterStateSnapshot } from '@angular/router';\r\nimport {\r\n  routerReducer,\r\n  RouterReducerState,\r\n  RouterStateSerializer,\r\n} from '@ngrx/router-store';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { storeFreeze } from 'ngrx-store-freeze';\r\n\r\nimport { reducer as reportReducer } from './reducers/reports';\r\nimport { reducer as configReducer } from './reducers/config';\r\n\r\nimport { State as ReportsState } from './models/reports';\r\nimport { State as ConfigState } from './models/config';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\nexport interface State {\r\n  reports: ReportsState;\r\n  config: ConfigState;\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\n// https://github.com/ngrx/platform/blob/master/docs/router-store/api.md#custom-router-state-serializer\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const { url, root: { queryParams } } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  reports: reportReducer,\r\n  config: configReducer,\r\n  router: routerReducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production\r\n  ? [storeFreeze]\r\n  : [];\r\n","import { Action } from '@ngrx/store';\r\nimport { IConfig } from '../models/api';\r\n\r\nexport enum ConfigActionTypes {\r\n  GET_CONFIG = 'Get Config',\r\n  GET_CONFIG_SUCCESS = 'Get Config Success',\r\n}\r\n\r\nexport class GetConfig implements Action {\r\n  readonly type = ConfigActionTypes.GET_CONFIG;\r\n  constructor() {}\r\n}\r\n\r\nexport class GetConfigSuccess implements Action {\r\n  readonly type = ConfigActionTypes.GET_CONFIG_SUCCESS;\r\n  constructor(public payload: IConfig) {}\r\n}\r\nexport type ConfigActions = GetConfig | GetConfigSuccess;\r\n","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { IReport } from '../models/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../reducers';\r\nimport {\r\n  DeleteReport,\r\n  CopyReport,\r\n} from '../actions/reports';\r\nimport { getReports } from '../selectors';\r\nimport {\r\n  ConfirmModalComponent,\r\n  IConfirmModalData,\r\n} from '../confirm/confirm-modal.component';\r\nimport { Go } from '../actions/router';\r\n\r\ninterface IReportSortable extends IReport {\r\n  modifiedDate: Date;\r\n  sortName: string;\r\n}\r\n\r\nfunction modifiedStringToDate(report: IReport): IReportSortable {\r\n  return {\r\n    ...report,\r\n    modifiedDate: new Date(report.modified),\r\n    sortName: report.name.toLowerCase(),\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  displayedColumns = ['actions', 'name', 'user', 'date'];\r\n  dataSource = new MatTableDataSource<IReportSortable>();\r\n  listReports$ = this.store.select(getReports);\r\n  constructor(private store: Store<State>, public dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.listReports$.subscribe(\r\n      reports => (this.dataSource.data = reports.map(modifiedStringToDate))\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) => {\r\n      switch (sortHeaderId.toLowerCase()) {\r\n        case 'name':\r\n          return data.sortName;\r\n        case 'date':\r\n          return data.modified;\r\n        default:\r\n          return data[sortHeaderId];\r\n      }\r\n    };\r\n  }\r\n\r\n  deleteReport(report: IReport) {\r\n    const dialogRef = this.dialog.open(ConfirmModalComponent, {\r\n      data: {\r\n        title: `Are you sure you want to delete ${report.name}`,\r\n        subtitle: 'You will not be able to undo this action.',\r\n        confirmText: 'Delete',\r\n      } as IConfirmModalData,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.store.dispatch(new DeleteReport(report.id));\r\n      }\r\n    });\r\n  }\r\n\r\n  copyReport(reportId: number) {\r\n    this.store.dispatch(new CopyReport(reportId));\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  newReport(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.store.dispatch(new Go({ path: ['/report/add'] }));\r\n  }\r\n\r\n  openReport(event: MouseEvent, reportId: number) {\r\n    event.preventDefault();\r\n    this.store.dispatch(new Go({ path: ['/report/', reportId] }));\r\n  }\r\n}\r\n","<app-header [title]=\"'Welcome to Django Report Builder'\"></app-header>\r\n<mat-card>\r\n  <mat-card-title>Reports</mat-card-title>\r\n\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Search Reports\" (keyup)=\"applyFilter($event.currentTarget.value)\">\r\n  </mat-form-field>\r\n\r\n  <mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"name\" matSortDirection=\"asc\">\r\n    <ng-container matColumnDef=\"actions\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef>\r\n        <a href=\"/report/add\" (click)=\"newReport($event)\" mat-raised-button color=\"primary\" >\r\n          <mat-icon>add</mat-icon>\r\n          Add Report</a>\r\n      </mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\">\r\n        <a mat-icon-button (click)=\"copyReport(report.id)\" text-tr>\r\n          <mat-icon aria-label=\"Copy report\">content_copy</mat-icon>\r\n        </a>\r\n        <button mat-icon-button (click)=\"deleteReport(report)\">\r\n          <mat-icon aria-label=\"Delete report\">delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header>NAME</mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\">\r\n        <a href=\"/report/{{report.id}}\" (click)=\"openReport($event, report.id)\"> {{report.name}} </a>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"user\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header>USER</mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\"> {{report.user_created.first_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header>DATE</mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\"> {{report.modified | date:'yyyy-MM-dd'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n\r\n  <div class=\"example-no-results\" [style.display]=\"dataSource?.filteredData.length == 0 ? '' : 'none'\">\r\n    No matches found.\r\n  </div>\r\n</mat-card>\r\n","import { State, displayFieldAdapter, filterAdapter } from '../models/reports';\r\nimport { INestedRelatedField, IReportErrors } from '../models/api';\r\nimport { ReportActionTypes, ReportActions } from '../actions/reports';\r\nimport {\r\n  DisplayFieldActions,\r\n  DisplayFieldActionTypes,\r\n} from '../actions/display-field';\r\nimport { FilterActions, FilterActionTypes } from '../actions/filter';\r\nimport * as selectors from '../selectors/reports';\r\n\r\nexport const initialState: State = {\r\n  reports: [],\r\n  selectedReport: null,\r\n  relatedFields: [],\r\n  fields: [],\r\n  title: '',\r\n  titleInput: '',\r\n  descriptionInput: '',\r\n  isDistinct: false,\r\n  rightNavIsOpen: false,\r\n  activeTab: 0,\r\n  displayFields: displayFieldAdapter.getInitialState(),\r\n  filters: filterAdapter.getInitialState(),\r\n  nextRelatedFieldId: 0,\r\n  generatingReport: false,\r\n  editedSinceLastSave: false,\r\n};\r\n\r\nexport function reducer(\r\n  state = initialState,\r\n  action: ReportActions | DisplayFieldActions | FilterActions\r\n): State {\r\n  switch (action.type) {\r\n    case ReportActionTypes.SET_REPORT_LIST: {\r\n      return {\r\n        ...state,\r\n        reports: action.payload,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_REPORT: {\r\n      // Reset report state when we start making a new request\r\n      // so the user never sees stale data\r\n      const {selectedReport, activeTab, descriptionInput, reportPreview} = initialState\r\n      return {\r\n        ...state,\r\n        selectedReport,\r\n        activeTab,\r\n        descriptionInput,\r\n        reportPreview\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_TITLE: {\r\n      return {\r\n        ...state,\r\n        title: action.payload,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.TOGGLE_RIGHT_NAV: {\r\n      let navOpen = !state.rightNavIsOpen;\r\n      if (state.activeTab === 2 || state.activeTab === 3) {\r\n        navOpen = false;\r\n      } else if (action.payload !== undefined) {\r\n        navOpen = action.payload;\r\n      }\r\n      return {\r\n        ...state,\r\n        rightNavIsOpen: navOpen,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_REPORT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        selectedReport: action.payload,\r\n        relatedFields: selectors.getRelatedFields(initialState),\r\n        fields: selectors.getFields(initialState),\r\n        descriptionInput: action.payload.description,\r\n        titleInput: action.payload.name,\r\n        isDistinct: action.payload.distinct,\r\n        editedSinceLastSave: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_REPORT_FIELDS_SUCCESS: {\r\n      let { nextRelatedFieldId } = state;\r\n      const selectedReport = selectors.getSelectedReport(state);\r\n\r\n      const rootRelatedField: INestedRelatedField = {\r\n        id: nextRelatedFieldId++,\r\n        children: action.payload.relatedFields.map(relatedField => {\r\n          const id = nextRelatedFieldId++;\r\n          return { ...relatedField, children: [], id };\r\n        }),\r\n        field_name: '',\r\n        verbose_name: selectedReport.root_model_name,\r\n        path: '',\r\n        help_text:\r\n          'The root model for this report: ' + selectedReport.root_model_name,\r\n        model_id: selectedReport.root_model,\r\n        parent_model_name: '',\r\n        parent_model_app_label: false,\r\n        included_model: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        relatedFields: [rootRelatedField],\r\n        fields: action.payload.fields,\r\n        nextRelatedFieldId,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_FIELDS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        fields: action.payload,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_RELATED_FIELDS_SUCCESS: {\r\n      let { nextRelatedFieldId } = state;\r\n      const relatedFields: INestedRelatedField[] = action.payload.relatedFields.map(\r\n        relatedField => {\r\n          const id = nextRelatedFieldId++;\r\n          return { ...relatedField, children: [], id };\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        nextRelatedFieldId,\r\n        relatedFields: selectors\r\n          .getRelatedFields(state)\r\n          .map(populateChildren(action.payload.parentId, relatedFields)),\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CHANGE_REPORT_DESCRIPTION: {\r\n      return {\r\n        ...state,\r\n        descriptionInput: action.payload,\r\n        editedSinceLastSave: true,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CHANGE_REPORT_TITLE: {\r\n      return {\r\n        ...state,\r\n        titleInput: action.payload,\r\n        editedSinceLastSave: true,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.TOGGLE_REPORT_DISTINCT: {\r\n      return {\r\n        ...state,\r\n        isDistinct:\r\n          action.payload !== undefined ? action.payload : !state.isDistinct,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.EDIT_REPORT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        selectedReport: action.payload,\r\n        descriptionInput: action.payload.description,\r\n        isDistinct: action.payload.distinct,\r\n        reportSaved: new Date(),\r\n        editedSinceLastSave: false,\r\n        errors: undefined,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.EDIT_REPORT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        errors: flatten(\r\n          Object.entries(action.payload).map(([tab, items]) => {\r\n            if (typeof items[0] === 'string') {\r\n              return (items as string[]).map(\r\n                e => `Your ${tab} field has the error: ${e}`\r\n              );\r\n            } else {\r\n              return (items as IReportErrors[]).map((item, i) =>\r\n                Object.entries(item).map(([itemName, errors]) =>\r\n                  (errors as string[]).map(\r\n                    e =>\r\n                      `In ${tab}, your ${i} field's ${itemName} has the error: ${e}`\r\n                  )\r\n                )\r\n              );\r\n            }\r\n          })\r\n        ),\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.EXPORT_REPORT: {\r\n      return {\r\n        ...state,\r\n        generatingReport: true,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CANCEL_EXPORT_REPORT: {\r\n      return {\r\n        ...state,\r\n        generatingReport: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.DOWNLOAD_EXPORTED_REPORT: {\r\n      return {\r\n        ...state,\r\n        generatingReport: false,\r\n        errors: undefined,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GENERATE_PREVIEW: {\r\n      return { ...state, generatingReport: true };\r\n    }\r\n\r\n    case ReportActionTypes.GENERATE_PREVIEW_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        reportPreview: action.payload,\r\n        generatingReport: false,\r\n        errors: undefined,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CANCEL_GENERATE_PREVIEW: {\r\n      return {\r\n        ...state,\r\n        reportPreview: undefined,\r\n        generatingReport: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.DELETE_REPORT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        reports: state.reports.filter(r => r.id !== action.reportId),\r\n        selectedReport: selectors.getSelectedReport(initialState),\r\n        editedSinceLastSave: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.DOWNLOAD_EXPORTED_REPORT: {\r\n      return {\r\n        ...state,\r\n        selectedReport: {\r\n          ...selectors.getSelectedReport(state),\r\n          report_file: action.payload,\r\n          report_file_creation: new Date().toISOString(),\r\n        },\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CHANGE_TAB: {\r\n      return {\r\n        ...state,\r\n        activeTab: action.payload,\r\n      };\r\n    }\r\n\r\n    case DisplayFieldActionTypes.LOAD_ALL:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.addAll(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n      };\r\n\r\n    case DisplayFieldActionTypes.UPDATE_ONE:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.updateOne(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case DisplayFieldActionTypes.UPDATE_MANY:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.updateMany(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case DisplayFieldActionTypes.DELETE_ONE:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.removeOne(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case FilterActionTypes.LOAD_ALL:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.addAll(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n      };\r\n\r\n    case FilterActionTypes.UPDATE_ONE:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.updateOne(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case FilterActionTypes.UPDATE_MANY:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.updateMany(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case FilterActionTypes.DELETE_ONE:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.removeOne(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case ReportActionTypes.ADD_REPORT_FIELD: {\r\n      switch (selectors.getActiveTab(state)) {\r\n        case 0:\r\n          return {\r\n            ...state,\r\n            displayFields: displayFieldAdapter.addOne(\r\n              {\r\n                ...action.payload,\r\n                position: selectors.getDisplayFieldsCount(state),\r\n                report: selectors.getSelectedReportId(state),\r\n              },\r\n              selectors.getDisplayFieldsState(state)\r\n            ),\r\n            editedSinceLastSave: true,\r\n          };\r\n        case 1:\r\n          return {\r\n            ...state,\r\n            filters: filterAdapter.addOne(\r\n              {\r\n                ...action.payload,\r\n                position: selectors.getFiltersCount(state),\r\n                report: selectors.getSelectedReportId(state),\r\n                filter_type: 'exact',\r\n                filter_value: ''\r\n              },\r\n              selectors.getFiltersState(state)\r\n            ),\r\n            editedSinceLastSave: true,\r\n          };\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    }\r\n\r\n    case ReportActionTypes.SELECT_FIELD: {\r\n      return {\r\n        ...state,\r\n        selectedField: action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction populateChildren(parentId: number, children: INestedRelatedField[]) {\r\n  return function replaceField(\r\n    field: INestedRelatedField\r\n  ): INestedRelatedField {\r\n    const replacement = { ...field };\r\n    if (field.id === parentId) {\r\n      replacement.children = [...children].map(child => ({\r\n        ...child,\r\n        children: [],\r\n      }));\r\n    } else {\r\n      replacement.children = replacement.children.map(replaceField);\r\n    }\r\n    return replacement;\r\n  };\r\n}\r\n\r\nfunction flatten(items) {\r\n  const flat = [];\r\n\r\n  items.forEach(item => {\r\n    if (Array.isArray(item)) {\r\n      flat.push(...flatten(item));\r\n    } else {\r\n      flat.push(item);\r\n    }\r\n  });\r\n\r\n  return flat;\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { ConfigActionTypes, GetConfigSuccess } from '../actions/config';\r\nimport { ApiService } from '../api.service';\r\nimport { mergeMap, map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ConfigEffects {\r\n  constructor(private actions$: Actions, private api: ApiService) {}\r\n\r\n  @Effect()\r\n  getConfig$: Observable<Action> = this.actions$.pipe(\r\n    ofType(ConfigActionTypes.GET_CONFIG),\r\n    mergeMap(() =>\r\n      this.api.getConfig().pipe(map(response => new GetConfigSuccess(response)))\r\n    )\r\n  );\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IFilter } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\n\r\n@Component({\r\n  selector: 'app-filter-tab-row',\r\n  templateUrl: './filter-tab-row.component.html',\r\n  styles: [\r\n    `.mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `.mat-cell,\r\n.mat-header-cell {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  word-wrap: break-word;\r\n}`,\r\n  ],\r\n})\r\nexport class FilterTabRowComponent {\r\n  constructor() {}\r\n  @Input() filter: IFilter;\r\n  @Output() deleteFilter = new EventEmitter<number>();\r\n  @Output() updateFilter = new EventEmitter<Update<IFilter>>();\r\n\r\n  editFilter(changes) {\r\n    this.updateFilter.emit({ changes, id: this.filter.position });\r\n  }\r\n}\r\n","<div class=\"mat-row\">\r\n  <div class=\"mat-cell\">\r\n    <a mat-icon-button>\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </a>\r\n    <button mat-icon-button (click)=\"deleteFilter.emit(filter.position)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <span *ngIf=\"filter.path_verbose\">({{filter.path_verbose}})</span> {{filter.field_verbose}}\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <mat-select (selectionChange)=\"editFilter({filter_type: $event.value})\" [value]=\"filter.filter_type\">\r\n        <mat-option value=\"exact\">Equals</mat-option>\r\n        <mat-option value=\"iexact\">Equals (case-insensitive)</mat-option>\r\n        <mat-option value=\"contains\">Contains</mat-option>\r\n        <mat-option value=\"icontains\">Contains (case-insensitive)</mat-option>\r\n        <mat-option value=\"in\">in (comma seperated 1,2,3)</mat-option>\r\n        <mat-option value=\"gt\">Greater than</mat-option>\r\n        <mat-option value=\"gte\">Greater than equals</mat-option>\r\n        <mat-option value=\"lt\">Less than</mat-option>\r\n        <mat-option value=\"lte\">Less than equals</mat-option>\r\n        <mat-option value=\"startswith\">Starts with</mat-option>\r\n        <mat-option value=\"istartswith\">Starts with (case-insensitive)</mat-option>\r\n        <mat-option value=\"endswith\">Ends with</mat-option>\r\n        <mat-option value=\"iendswith\">Ends with (case-insensitive)</mat-option>\r\n        <mat-option value=\"range\">Range</mat-option>\r\n        <mat-option value=\"relative_range\" [disabled]=\"!(filter.field_type === 'DateField' || filter.field_type === 'DateTimeField')\">Relative Range</mat-option>\r\n        <mat-option value=\"week_day\">Week day</mat-option>\r\n        <mat-option value=\"isnull\">Is null</mat-option>\r\n        <mat-option value=\"regex\">Regular Expression</mat-option>\r\n        <mat-option value=\"iregex\">Reg. Exp. (case-insensitive)</mat-option>\r\n        <mat-option value=\"max\">Max (annotation-filter)</mat-option>\r\n        <mat-option value=\"min\">Min (annotation-filter)</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"mat-cell\">\r\n    <app-filter-input *ngIf=\"filter.filter_type!=='relative_range'\"\r\n                      [value]=\"filter.filter_value\"\r\n                      [fieldType]=\"filter.field_type\"\r\n                      [filterType]=\"filter.filter_type\"\r\n                      (valueChange)=\"editFilter({filter_value: $event})\"></app-filter-input>\r\n    <app-filter-input *ngIf=\"filter.filter_type==='relative_range'\"\r\n                      [value]=\"filter.filter_delta\"\r\n                      [unit]=\"filter.filter_value\"\r\n                      [filterType]=\"filter.filter_type\"\r\n                      (valueChange)=\"editFilter({filter_delta: $event})\"\r\n                      (unitChange)=\"editFilter({filter_value: $event})\"></app-filter-input>\r\n  </div>\r\n\r\n  <div class=\"mat-cell\">\r\n    <app-filter-input *ngIf=\"filter.filter_type==='range'\" [value]=\"filter.filter_value2\" [fieldType]=\"filter.field_type\" [filterType]=\"filter.filter_type\"\r\n      (valueChange)=\"editFilter({filter_value2: $event})\"></app-filter-input>\r\n  </div>\r\n\r\n  <div class=\"mat-cell\">\r\n    <mat-checkbox [checked]=\"filter.exclude\" (change)=\"editFilter({exclude: $event.checked })\" aria-label=\"Exclude?\"></mat-checkbox>\r\n  </div>\r\n\r\n</div>\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n})\r\nexport class ErrorComponent {\r\n  @Input() errors: string[];\r\n}\r\n","<mat-card *ngIf=\"errors\">\r\n  <mat-card-title>Error</mat-card-title>\r\n  <mat-card-content>\r\n    <p *ngFor=\"let error of errors\">{{error}}</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IDisplayField, IFormat } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\nimport { ITreeOptions, IActionMapping } from '@circlon/angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-display-tab',\r\n  templateUrl: './display-tab.component.html',\r\n  styles: [\r\n    `\r\n  .mat-table {\r\n    display: block;\r\n  }`,\r\n    `\r\n  .mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `\r\n  .mat-cell,\r\n  .mat-header-cell {\r\n    flex: 4;\r\n    overflow: hidden;\r\n    word-wrap: break-word;\r\n  }`,\r\n    `\r\n  .narrow {\r\n    flex: 1;\r\n  }`,\r\n  ],\r\n})\r\nexport class DisplayTabComponent {\r\n  constructor() {}\r\n  @Input() fields: IDisplayField[];\r\n  @Input() formatOptions: IFormat[];\r\n  @Input() hasChanged: boolean;\r\n  @Input() errors?: string[];\r\n  @Output() deleteField = new EventEmitter<number>();\r\n  @Output() updateField = new EventEmitter<Update<IDisplayField>>();\r\n  @Output() saveReport = new EventEmitter();\r\n  treeOptions: ITreeOptions = {\r\n    allowDrag: true,\r\n    allowDrop: (node, to) => !to.parent.parent,\r\n    idField: 'position',\r\n    actionMapping: {\r\n      mouse: {\r\n        drop: (tree, node, event, { from: { data }, to: { index } }) => {\r\n          const newPos = data.position > index ? index : index - 1\r\n          this.updateField.emit({\r\n            id: data.position,\r\n            changes: { position: newPos },\r\n          });\r\n        },\r\n      },\r\n    } as IActionMapping,\r\n  };\r\n}\r\n","<div class=\"mat-table tab-table-header\">\r\n  <div class=\"mat-header-row\">\r\n    <div class=\"mat-header-cell\">\r\n      <button [disabled]=\"!hasChanged\" mat-icon-button (click)=\"saveReport.emit()\">\r\n        <mat-icon>save</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"errors\" mat-icon-button [disabled]=\"true\" [matTooltipPosition]=\"'right'\" matTooltip=\"There were errors with your report! Check the report tab for more info\">\r\n        <mat-icon [color]=\"'warn'\">error</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"mat-header-cell\">Field</div>\r\n    <div class=\"mat-header-cell\">Name</div>\r\n    <div class=\"mat-header-cell narrow\">Sort</div>\r\n    <div class=\"mat-header-cell narrow\">Desc?</div>\r\n    <div class=\"mat-header-cell\">Aggregate</div>\r\n    <div class=\"mat-header-cell\">Format</div>\r\n    <div class=\"mat-header-cell narrow\">Total</div>\r\n    <div class=\"mat-header-cell narrow\">Group</div>\r\n  </div>\r\n  <tree-root [nodes]=\"fields\" [options]=\"treeOptions\">\r\n    <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\r\n      <div class=\"node-wrapper report-builder-display-grid\">\r\n        <app-display-tab-row [field]=\"node.data\" [formatOptions]=\"formatOptions\" (updateField)=\"updateField.emit($event)\" (deleteField)=\"deleteField.emit($event)\"\r\n          (click)=\"node.mouseAction('click', $event)\" (treeDrop)=\"node.onDrop($event)\" [treeAllowDrop]=\"node.allowDrop\" [treeDrag]=\"node\"\r\n          [treeDragEnabled]=\"node.allowDrag()\">\r\n        </app-display-tab-row>\r\n      </div>\r\n    </ng-template>\r\n  </tree-root>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../../../reducers';\r\nimport {\r\n  getPreview,\r\n  getLastSaved,\r\n  getLastGeneratedReport,\r\n  isGeneratingReport,\r\n  getErrors,\r\n  hasEditedSinceLastSave\r\n} from '../../../selectors';\r\nimport {\r\n  EditReport,\r\n  GeneratePreview,\r\n  ExportReport,\r\n} from '../../../actions/reports';\r\nimport { IExportType } from '../../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-report-tab',\r\n  template: `\r\n  <div class=\"app-report-tab\">\r\n    <div>\r\n      <button mat-button [disabled]=\"!(dirty$ | async)\" (click)=\"this.onSave()\">Save</button>\r\n      <button mat-button (click)=\"this.makePreview()\">Preview</button>\r\n      <button mat-button (click)=\"this.exportReport('xlsx')\">XLSX</button>\r\n      <button mat-button (click)=\"this.exportReport('csv')\">CSV</button>\r\n      <app-last-report *ngIf=\"lastGeneratedReport$ | async\" [report]=\"lastGeneratedReport$ | async\"></app-last-report>\r\n      <app-saved-timestamp [lastSaved]=\"this.lastSaved$ | async\" ></app-saved-timestamp>\r\n    </div>\r\n    <app-error [errors]=\"errors$ | async\"></app-error>\r\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isGeneratingReport$ | async\"></mat-progress-bar>\r\n    <div *ngIf=\"this.previewData$ | async\">\r\n      <app-report-preview [previewData]=\"this.previewData$ | async\" ></app-report-preview>\r\n    </div>\r\n  </div>\r\n  `,\r\n})\r\nexport class ReportTabComponent {\r\n  constructor(private store: Store<State>) {}\r\n  previewData$ = this.store.select(getPreview);\r\n  lastSaved$ = this.store.select(getLastSaved);\r\n  lastGeneratedReport$ = this.store.select(getLastGeneratedReport);\r\n  isGeneratingReport$ = this.store.select(isGeneratingReport);\r\n  errors$ = this.store.select(getErrors);\r\n  dirty$ = this.store.select(hasEditedSinceLastSave);\r\n\r\n  onSave() {\r\n    this.store.dispatch(new EditReport());\r\n  }\r\n\r\n  makePreview() {\r\n    this.store.dispatch(new GeneratePreview());\r\n  }\r\n\r\n  exportReport(type: IExportType) {\r\n    this.store.dispatch(new ExportReport(type));\r\n  }\r\n}\r\n","import {\r\n  IReport,\r\n  IReportDetailed,\r\n  INestedRelatedField,\r\n  IField,\r\n  IReportPreview,\r\n  IDisplayField,\r\n  IFilter,\r\n} from './api';\r\nimport {\r\n  createEntityAdapter,\r\n  EntityAdapter,\r\n  EntityState,\r\n  Update,\r\n} from '@ngrx/entity';\r\n\r\nexport interface State {\r\n  reports: IReport[];\r\n  selectedReport: IReportDetailed | null;\r\n  relatedFields: INestedRelatedField[];\r\n  fields: IField[];\r\n  title: string;\r\n  titleInput: string;\r\n  descriptionInput: string;\r\n  isDistinct: boolean;\r\n  reportPreview?: IReportPreview;\r\n  reportSaved?: Date;\r\n  rightNavIsOpen: boolean;\r\n  activeTab: number;\r\n  displayFields: EntityState<IDisplayField>;\r\n  filters: EntityState<IFilter>;\r\n  selectedField?: IField;\r\n  nextRelatedFieldId: number;\r\n  generatingReport: boolean;\r\n  editedSinceLastSave: boolean;\r\n  errors?: string[];\r\n}\r\n\r\ninterface IHasPosition {\r\n  position: number;\r\n}\r\n\r\nexport function createPositionEntityAdapter<\r\n  T extends IHasPosition\r\n>(): EntityAdapter<T> {\r\n  const adapter = createEntityAdapter<T>({\r\n    sortComparer: (x, y) => x.position - y.position,\r\n    selectId: x => x.position,\r\n  });\r\n\r\n  const selectors = adapter.getSelectors();\r\n\r\n  const result = {\r\n    ...adapter,\r\n  };\r\n\r\n  result.removeOne = (removedPos, state: EntityState<T>) => {\r\n    state = adapter.removeOne(removedPos, state);\r\n    return adapter.updateMany(\r\n      selectors.selectAll(state).reduce(\r\n        (updatelist, entity) => {\r\n          if (entity.position > removedPos) {\r\n            updatelist.push({\r\n              id: entity.position,\r\n              changes: {\r\n                position: entity.position - 1,\r\n              },\r\n            } as Update<T>);\r\n          }\r\n          return updatelist;\r\n        },\r\n        [] as Update<T>[]\r\n      ),\r\n      state\r\n    );\r\n  };\r\n\r\n  result.removeMany = (removedPositions, state) =>\r\n    removedPositions.reduce((s, pos) => result.removeOne(pos, s), state);\r\n\r\n  const getPositionUpdates = (\r\n    oldPosition: number,\r\n    newPosition: number,\r\n    state: EntityState<T>\r\n  ): Update<T>[] => {\r\n    const changedPositions = inclusiveRange(oldPosition, newPosition);\r\n    const isIncrease = oldPosition < newPosition;\r\n    return selectors.selectAll(state).reduce((col, entity) => {\r\n      if (changedPositions.includes(entity.position)) {\r\n        const update: Update<T> = {\r\n          id: entity.position,\r\n          changes: {},\r\n        };\r\n        if (entity.position === oldPosition) {\r\n          update.changes.position = newPosition;\r\n        } else if (isIncrease) {\r\n          update.changes.position = entity.position - 1;\r\n        } else {\r\n          update.changes.position = entity.position + 1;\r\n        }\r\n        return [...col, update];\r\n      } else {\r\n        return col;\r\n      }\r\n    }, []);\r\n  };\r\n\r\n  result.updateOne = (update, state) => {\r\n    if ('position' in update.changes) {\r\n      const updates = getPositionUpdates(\r\n        update.id as number,\r\n        update.changes.position,\r\n        state\r\n      );\r\n      if (Object.keys(update.changes).length === 1) {\r\n        return adapter.updateMany(updates, state);\r\n      }\r\n      update = {\r\n        ...update,\r\n        changes: Object.assign({}, update.changes),\r\n      };\r\n      delete update.changes.position;\r\n      return adapter.updateMany([update, ...updates], state);\r\n    } else {\r\n      return adapter.updateOne(update, state);\r\n    }\r\n  };\r\n\r\n  result.updateMany = (updates, state) =>\r\n    updates.reduce((s, update) => result.updateOne(update, s), state);\r\n\r\n  return result;\r\n}\r\n\r\nexport const displayFieldAdapter: EntityAdapter<\r\n  IDisplayField\r\n> = createPositionEntityAdapter<IDisplayField>();\r\n\r\nexport const filterAdapter: EntityAdapter<\r\n  IFilter\r\n> = createPositionEntityAdapter();\r\n\r\nfunction inclusiveRange(begin, end) {\r\n  const result = [];\r\n  for (let i = Math.min(begin, end); i <= Math.max(begin, end); i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n}\r\n","import { State } from '../models/config';\r\nexport const getIsAsyncReport = (state: State) => state.async_report;\r\nexport const getFormatOptions = (state: State) => state.formats;\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IReportPreview } from '../../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-report-preview',\r\n  template: `<table>\r\n    <thead><tr><td *ngFor=\"let header of previewData.meta.titles\">{{header}}</td></tr></thead>\r\n    <tbody><tr *ngFor=\"let row of previewData.data\"><td *ngFor=\"let cell of row\">{{cell}}</td></tr></tbody>\r\n  </table>`,\r\n})\r\nexport class ReportPreviewComponent {\r\n  constructor() {}\r\n  @Input() previewData?: IReportPreview;\r\n}\r\n","import { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nexport interface ComponentCanDeactivate {\r\n  canDeactivate: () => boolean | Observable<boolean>;\r\n}\r\n\r\n@Injectable()\r\nexport class PendingChangesGuard\r\n  implements CanDeactivate<ComponentCanDeactivate> {\r\n  canDeactivate(\r\n    component: ComponentCanDeactivate\r\n  ): boolean | Observable<boolean> {\r\n    return component.canDeactivate();\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-SG\": \"zavE\",\n\t\"./en-SG.js\": \"zavE\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IDisplayField, IFormat } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\n\r\n@Component({\r\n  selector: 'app-display-tab-row',\r\n  templateUrl: './display-tab-row.component.html',\r\n  styles: [\r\n    `\r\n  .mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `\r\n  .mat-cell,\r\n  .mat-header-cell {\r\n    flex: 4;\r\n    overflow: hidden;\r\n    word-wrap: break-word;\r\n  }`,\r\n    `\r\n  .narrow {\r\n    flex: 1;\r\n  }`,\r\n  ],\r\n})\r\nexport class DisplayTabRowComponent {\r\n  constructor() {}\r\n  @Input() field: IDisplayField;\r\n  @Input() formatOptions: IFormat[];\r\n  @Output() deleteField = new EventEmitter<number>();\r\n  @Output() updateField = new EventEmitter<Update<IDisplayField>>();\r\n\r\n  editField(changes) {\r\n    this.updateField.emit({ changes, id: this.field.position });\r\n  }\r\n}\r\n","<div class=\"mat-row\">\r\n  <div class=\"mat-cell\">\r\n    <a mat-icon-button disableRipple>\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </a>\r\n    <button mat-icon-button (click)=\"deleteField.emit(field.position)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"mat-cell\">{{field.field_verbose}} [{{field.field_type}}]</div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <input matInput value=\"{{field.name}}\" (keyup)=\"editField({name: $event.currentTarget.value})\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-form-field>\r\n      <input matInput value=\"{{field.sort}}\" (keyup)=\"editField({sort: $event.currentTarget.value})\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-checkbox [checked]=\"field.sort_reverse\" (change)=\"editField({sort_reverse: $event.checked })\"></mat-checkbox>\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <mat-select (selectionChange)=\"editField({aggregate: $event.value})\" [value]=\"field.aggregate || ''\">\r\n        <mat-option value=\"\">----------</mat-option>\r\n        <mat-option value=\"Sum\">Sum</mat-option>\r\n        <mat-option value=\"Count\">Count</mat-option>\r\n        <mat-option value=\"Avg\">Avg</mat-option>\r\n        <mat-option value=\"Max\">Max</mat-option>\r\n        <mat-option value=\"Min\">Min</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <mat-select (selectionChange)=\"editField({display_format: $event.value})\" [value]=\"field.display_format ? field.display_format.toString() : ''\">\r\n        <mat-option value=\"\">----------</mat-option>\r\n        <mat-option *ngFor=\"let format of formatOptions\" value=\"{{format.id}}\">{{format.name}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-checkbox [checked]=\"field.total\" (change)=\"editField({total: $event.checked })\"></mat-checkbox>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-checkbox [checked]=\"field.group\" (change)=\"editField({group: $event.checked })\"></mat-checkbox>\r\n  </div>\r\n</div>\r\n","import { State } from './reducers';\r\nimport { createSelector } from '@ngrx/store';\r\nimport * as reportSelectors from './selectors/reports';\r\nimport * as configSelectors from './selectors/config';\r\n\r\nconst getConfigState = (state: State) => state.config;\r\nexport const getIsAsyncReport = createSelector(\r\n  getConfigState,\r\n  configSelectors.getIsAsyncReport\r\n);\r\nexport const getFormatOptions = createSelector(\r\n  getConfigState,\r\n  configSelectors.getFormatOptions\r\n);\r\n\r\nconst getReportsState = (state: State) => state.reports;\r\nexport const getReports = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getReports\r\n);\r\nexport const getSelectedReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedReport\r\n);\r\nexport const getSelectedReportId = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedReportId\r\n);\r\nexport const getSelectedReportName = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedReportName\r\n);\r\nexport const getFields = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getFields\r\n);\r\nexport const getTitle = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getTitle\r\n);\r\nexport const getRightNavIsOpen = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getRightNavIsOpen\r\n);\r\nexport const getRelatedFields = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getRelatedFields\r\n);\r\nexport const getDescriptionInput = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getDescriptionInput\r\n);\r\nexport const getIsDistinct = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getIsDistinct\r\n);\r\nexport const getEditedReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getEditedReport\r\n);\r\nexport const getPreview = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getPreview\r\n);\r\nexport const getLastSaved = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getLastSaved\r\n);\r\nexport const getNewReportInfo = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getNewReportInfo\r\n);\r\nexport const getLastGeneratedReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getLastGeneratedReport\r\n);\r\nexport const getActiveTab = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getActiveTab\r\n);\r\nexport const getDisplayFields = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getDisplayFields\r\n);\r\nexport const getFilters = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getFilters\r\n);\r\nexport const getSelectedField = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedField\r\n);\r\nexport const isGeneratingReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.isGeneratingReport\r\n);\r\nexport const hasEditedSinceLastSave = createSelector(\r\n  getReportsState,\r\n  reportSelectors.hasEditedSinceLastSave\r\n);\r\nexport const getErrors = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getErrors\r\n);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from './reducers';\r\nimport { GetConfig } from './actions/config';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private store: Store<State>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new GetConfig());\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IFilter } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\nimport { ITreeOptions, IActionMapping } from '@circlon/angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-filter-tab',\r\n  templateUrl: './filter-tab.component.html',\r\n  styles: [\r\n    `.mat-table {\r\n    display: block;\r\n  }`,\r\n    `.mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `.mat-cell,\r\n.mat-header-cell {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  word-wrap: break-word;\r\n}`,\r\n  ],\r\n})\r\nexport class FilterTabComponent {\r\n  constructor() {}\r\n  @Input() filters: IFilter[];\r\n  @Input() hasChanged: boolean;\r\n  @Input() errors?: string[];\r\n  @Output() deleteFilter = new EventEmitter<number>();\r\n  @Output() updateFilter = new EventEmitter<Update<IFilter>>();\r\n  @Output() saveReport = new EventEmitter();\r\n  @Output()\r\n  moveFilter = new EventEmitter<{\r\n    payload: IFilter;\r\n    newPosition: number;\r\n  }>();\r\n  treeOptions: ITreeOptions = {\r\n    allowDrag: true,\r\n    allowDrop: (node, to) => !to.parent.parent,\r\n    idField: 'position',\r\n    actionMapping: {\r\n      mouse: {\r\n        drop: (tree, node, event, { from: { data }, to: { index } }) => {\r\n          this.updateFilter.emit({\r\n            id: data.position,\r\n            changes: { position: index },\r\n          });\r\n        },\r\n      },\r\n    } as IActionMapping,\r\n  };\r\n}\r\n","<div class=\"mat-table tab-table-header \">\r\n  <div class=\"mat-header-row\">\r\n    <div class=\"mat-header-cell\">\r\n      <button mat-icon-button [disabled]=\"!hasChanged\" (click)=\"saveReport.emit()\">\r\n        <mat-icon>save</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"errors\" mat-icon-button [disabled]=\"true\" [matTooltipPosition]=\"'right'\" matTooltip=\"There were errors with your report! Check the report tab for more info\">\r\n        <mat-icon [color]=\"'warn'\">error</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"mat-header-cell\">Field</div>\r\n    <div class=\"mat-header-cell\">Filter Type</div>\r\n    <div class=\"mat-header-cell\">Values</div>\r\n    <div class=\"mat-header-cell\"></div>\r\n    <div class=\"mat-header-cell\">Exclude</div>\r\n  </div>\r\n  <tree-root [nodes]=\"filters\" [options]=\"treeOptions\">\r\n    <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\r\n      <div class=\"node-wrapper report-builder-display-grid\">\r\n        <app-filter-tab-row [filter]=\"node.data\" (updateFilter)=\"updateFilter.emit($event)\" (deleteFilter)=\"deleteFilter.emit($event)\"\r\n          (click)=\"node.mouseAction('click', $event)\" (treeDrop)=\"node.onDrop($event)\" [treeAllowDrop]=\"node.allowDrop\" [treeDrag]=\"node\"\r\n          [treeDragEnabled]=\"node.allowDrag()\"></app-filter-tab-row>\r\n      </div>\r\n    </ng-template>\r\n  </tree-root>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { ApiService } from '../api.service';\r\nimport { INewReport } from '../models/api';\r\nimport { State } from '../reducers';\r\nimport { CreateReport } from '../actions/reports';\r\n\r\n@Component({\r\n  selector: 'app-new-report',\r\n  templateUrl: './new-report.component.html',\r\n  styleUrls: ['./new-report.component.css'],\r\n})\r\nexport class NewReportComponent implements OnInit {\r\n  errors: string[] = [];\r\n\r\n  root_model_choices$ = this.api.getRootModels().pipe(\r\n    map(models => {\r\n      this.errors = [];\r\n      return models.sort((x, y) =>\r\n        x.name === y.name ? 0 : x.name > y.name ? 1 : -1\r\n      );\r\n    }),\r\n    catchError(err => {\r\n      if ('detail' in err) {\r\n        this.errors = [err.detail];\r\n      } else {\r\n        this.errors = ['Unable to fetch models from Django'];\r\n      }\r\n      return EMPTY;\r\n    })\r\n  );\r\n  form: INewReport;\r\n\r\n  constructor(private store: Store<State>, private api: ApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.form = {\r\n      name: '',\r\n      description: '',\r\n      root_model: null,\r\n    };\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.name.trim() && this.form.root_model) {\r\n      this.store.dispatch(new CreateReport(this.form));\r\n    }\r\n  }\r\n}\r\n","<div class=\"form-container\">\r\n  <mat-card class=\"report-form\">\r\n    <mat-card-title class=\"report-title\">Add New Report</mat-card-title>\r\n\r\n    <app-error *ngIf=\"errors.length\" [errors]=\"errors\"></app-error>\r\n\r\n    <form (ngSubmit)=\"submit()\" #reportForm=\"ngForm\" class=\"container\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          placeholder=\"Report Name\"\r\n          [(ngModel)]=\"form.name\"\r\n          name=\"name\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          placeholder=\"Description\"\r\n          [(ngModel)]=\"form.description\"\r\n          name=\"description\"\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-select\r\n          placeholder=\"Root Model\"\r\n          [(ngModel)]=\"form.root_model\"\r\n          name=\"root_model\"\r\n          required\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let model of root_model_choices$ | async\"\r\n            [value]=\"model.pk\"\r\n          >\r\n            {{ model.name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <br />\r\n      <br />\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        [disabled]=\"!form.name.trim() || !form.root_model\"\r\n      >\r\n        Create Report\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface IConfirmModalData {\r\n  title: string;\r\n  subtitle: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirm-modal',\r\n  templateUrl: './confirm-modal.component.html',\r\n})\r\nexport class ConfirmModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IConfirmModalData\r\n  ) {}\r\n}\r\n","<h1 mat-dialog-title>{{data.title}}</h1>\r\n<div mat-dialog-content>\r\n  <p>{{data.subtitle}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"dialogRef.close()\">{{data.cancelText || 'Cancel'}}</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>{{data.confirmText || 'Confirm'}}</button>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\n// Delete when you switch to a real datetime picker\r\ninterface IDateTimeOption {\r\n  display: string;\r\n  value: string;\r\n}\r\n\r\ninterface IRangeOption {\r\n  display: string;\r\n  value: string;\r\n  multiplier: number;\r\n}\r\n\r\n// this code is ugly and Dog willing can be deleted when Angular Material adds a datetime input\r\n// until that day I will describe what it does in comments because it's real imperative\r\nconst timeOpts: IDateTimeOption[] = [];\r\nfor (let x = 0; x < 24; x += 0.5) {\r\n  // go through numbers from 0.0 to 23.5\r\n  const hour = Math.floor(x); // ignore the decimal to get the hour\r\n  const displayHour = hour % 12 === 0 ? '12' : String(hour % 12); // display 12-hour clock times\r\n  const valueHour = hour < 10 ? '0' + hour : String(hour); // use two digit 24-hour clock times for the value\r\n  const ampm = hour < 12 ? 'AM' : 'PM'; // before noon display AM, after PM\r\n  const _minutes = x === Math.floor(x) ? '00' : '30'; // 0.0 = on the hour, 0.5 = on the half hour\r\n\r\n  timeOpts.push({\r\n    display: `${displayHour}:${_minutes} ${ampm}`,\r\n    value: `${valueHour}:${_minutes}`,\r\n  } as IDateTimeOption);\r\n}\r\n\r\nconst rangeUnitOpts: IRangeOption[] = [];\r\n\r\nconst days = 'days';\r\nconst hours = 'hours';\r\nconst minutes = 'minutes';\r\nconst seconds = 'seconds';\r\n\r\nconst options = [days, hours, minutes, seconds];\r\nconst multipliers = [24 * 60 * 60, 60 * 60, 60, 1];\r\nfor (let i = 0; i < options.length; i++) {\r\n  rangeUnitOpts.push({\r\n    display: `${options[i]} ago`,\r\n    value: `${options[i]}`,\r\n    multiplier: multipliers[i],\r\n  } as IRangeOption);\r\n}\r\n\r\n@Component({\r\n  selector: 'app-filter-input',\r\n  templateUrl: './filter-input.component.html',\r\n})\r\nexport class FilterInputComponent implements OnChanges {\r\n  @Input() value: string;\r\n  @Input() unit: string;\r\n  @Input() filterType: string;\r\n  @Input() fieldType: string;\r\n  @Output() valueChange = new EventEmitter<any>();\r\n  @Output() unitChange = new EventEmitter<string>();\r\n  date?: string;\r\n  time?: string;\r\n  timeOpts = timeOpts;\r\n  range?: string;\r\n  rangeUnit?: string;\r\n  rangeUnitOpts = rangeUnitOpts;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (/Date/.test(this.fieldType)) {\r\n      const [date, time] = this.value.split(' ');\r\n      this.date = date;\r\n      this.time = time;\r\n    }\r\n    if (changes.filterType && /^(?:isnull|max|min)$/.test(changes.filterType.currentValue) && this.value.length === 0 ) {\r\n      // settimeout is a hack because we probably shouldn't be emitting inside of ngOnChanges. Eventually this should be moved to some kind of serializer\r\n      setTimeout(() => this.emitBoolean(false), 0)\r\n    }\r\n    if (this.filterType === 'relative_range') {\r\n      this.rangeUnit = options.includes(this.unit) ? this.unit : seconds;\r\n      this.range = (this.getNumber(this.value) / this.getMultiplier()).toString();\r\n    }\r\n  }\r\n\r\n  getBoolean() {\r\n    return this.value === 'True';\r\n  }\r\n\r\n  emitBoolean(value: boolean) {\r\n    this.valueChange.emit(value ? 'True' : 'False');\r\n  }\r\n\r\n  onDateChange(date: string) {\r\n    this.date = date;\r\n    this.emitDateTime();\r\n  }\r\n\r\n  onTimeChange(time) {\r\n    this.time = time;\r\n    this.emitDateTime();\r\n  }\r\n\r\n  emitDateTime() {\r\n    let result = this.date;\r\n    if (this.fieldType === 'DateTimeField') {\r\n      result += ' ' + (this.time || '00:00');\r\n    }\r\n    this.valueChange.emit(result);\r\n  }\r\n\r\n  getNumber(s: string) {\r\n    const n = parseInt(s, 10);\r\n    return isNaN(n) ? 0 : Math.abs(n);\r\n  }\r\n\r\n  getMultiplier() {\r\n    const option = this.rangeUnitOpts.find(_option => _option.value === this.rangeUnit);\r\n    return option ? option.multiplier : 1;\r\n  }\r\n\r\n  onRangeChange(range: string) {\r\n    this.range = this.getNumber(range).toString();\r\n    this.emitRange();\r\n  }\r\n\r\n  onRangeUnitChange(unit: string) {\r\n    this.rangeUnit = unit;\r\n    this.unitChange.emit(unit);\r\n    this.emitRange();\r\n  }\r\n\r\n  emitRange() {\r\n    // we need to make seconds negative for the API\r\n    const _seconds = -this.getNumber(this.range) * this.getMultiplier();\r\n    this.valueChange.emit(_seconds);\r\n  }\r\n}\r\n","<div [ngSwitch]=\"filterType\">\r\n  <mat-form-field *ngSwitchCase=\"'week_day'\">\r\n    <mat-select (selectionChange)=\"valueChange.emit($event.value)\" [value]=\"value\">\r\n      <mat-option value=\"1\">Sunday</mat-option>\r\n      <mat-option value=\"2\">Monday</mat-option>\r\n      <mat-option value=\"3\">Tuesday</mat-option>\r\n      <mat-option value=\"4\">Wednesday</mat-option>\r\n      <mat-option value=\"5\">Thursday</mat-option>\r\n      <mat-option value=\"6\">Friday</mat-option>\r\n      <mat-option value=\"7\">Saturday</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div *ngSwitchCase=\"'isnull'\">\r\n    <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\" arial-label=\"Is Null\"></mat-checkbox>\r\n  </div>\r\n\r\n  <div *ngSwitchCase=\"'max'\">\r\n    <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\" arial-label=\"Max (annotation-filter)\"></mat-checkbox>\r\n  </div>\r\n\r\n  <div *ngSwitchCase=\"'min'\">\r\n    <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\" arial-label=\"Min (annotation-filter)\"></mat-checkbox>\r\n  </div>\r\n\r\n  <div *ngSwitchCase=\"'relative_range'\">\r\n    <mat-form-field>\r\n      <input matInput value=\"{{ range }}\" (keyup)=\"onRangeChange($event.currentTarget.value)\" type=\"number\"\r\n             oninput=\"if (isNaN(parseInt(this.value))) this.value = 0; else this.value = parseInt(this.value);\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-select [value]=\"rangeUnit\" (selectionChange)=\"onRangeUnitChange($event.value)\">\r\n        <mat-option *ngFor=\"let option of rangeUnitOpts\" [value]=\"option.value\">\r\n          {{ option.display }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div *ngSwitchDefault [ngSwitch]=\"fieldType\">\r\n\r\n    <mat-form-field *ngSwitchCase=\"'DateField'\">\r\n      <input matInput [matDatepicker]=\"picker\" [value]=\"date\" (dateChange)=\"onDateChange($event.value.format('YYYY-MM-DD'))\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <div *ngSwitchCase=\"'DateTimeField'\">\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"picker\" [value]=\"date\" (dateChange)=\"onDateChange($event.value.format('YYYY-MM-DD'))\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-select [value]=\"time\" (selectionChange)=\"onTimeChange($event.value)\">\r\n          <mat-option *ngFor=\"let option of timeOpts\" [value]=\"option.value\">\r\n            {{option.display}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'BooleanField'\">\r\n      <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\"></mat-checkbox>\r\n    </div>\r\n\r\n    <mat-form-field *ngSwitchDefault>\r\n      <input matInput value=\"{{value}}\" (keyup)=\"valueChange.emit($event.currentTarget.value)\">\r\n    </mat-form-field>\r\n\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  HttpClientModule,\r\n  HttpClientXsrfModule,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TreeModule } from '@circlon/angular-tree-component';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport {\r\n  StoreRouterConnectingModule,\r\n  RouterStateSerializer, DefaultRouterStateSerializer,\r\n} from '@ngrx/router-store';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NewReportComponent } from './new-report/new-report.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MainComponent } from './main/main.component';\r\n\r\nimport { ApiService } from './api.service';\r\n\r\nimport { reducers, metaReducers, CustomSerializer } from './reducers';\r\nimport { ReportEffects } from './effects/reports';\r\nimport { ConfigEffects } from './effects/config';\r\nimport { RouterEffects } from './effects/router';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ConfirmModalComponent } from './confirm/confirm-modal.component';\r\nimport { TabsComponent } from './main/tabs/tabs.component';\r\nimport { OptionsTabComponent } from './main/tabs/options-tab/options-tab.component';\r\nimport { ReportTabComponent } from './main/tabs/report-tab/report-tab.component';\r\nimport { ReportPreviewComponent } from './main/tabs/report-tab/report-preview.component';\r\nimport { SavedTimestampComponent } from './main/tabs/report-tab/saved-timestamp.component';\r\nimport { LastReportComponent } from './main/tabs/report-tab/last-report.component';\r\nimport { DisplayTabComponent } from './main/tabs/display-tab/display-tab.component';\r\nimport { DisplayTabRowComponent } from './main/tabs/display-tab/display-tab-row.component';\r\nimport { FilterTabComponent } from './main/tabs/filter-tab/filter-tab.component';\r\nimport { FilterTabRowComponent } from './main/tabs/filter-tab/filter-tab-row.component';\r\nimport { RightSidebarComponent } from './main/right-sidebar/right-sidebar.component';\r\nimport { FieldComponent } from './main/right-sidebar/field.component';\r\nimport { ClickOutsideModule } from 'ng4-click-outside';\r\nimport { PendingChangesGuard } from './generic.guard';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { NetworkErrorInterceptor } from './api.interceptor';\r\nimport { FilterInputComponent } from './main/tabs/filter-tab/filter-input.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent, data: { title: 'Reports' } },\r\n  {\r\n    path: 'report/add',\r\n    component: NewReportComponent,\r\n    data: { title: 'Add New Report' },\r\n  },\r\n  {\r\n    path: 'report/:id',\r\n    component: MainComponent,\r\n    data: { title: 'Report' },\r\n    canDeactivate: [PendingChangesGuard],\r\n  },\r\n];\r\n\r\nexport const MatModules = [\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMomentDateModule,\r\n  MatProgressBarModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTabsModule,\r\n  MatTableModule,\r\n  LayoutModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NewReportComponent,\r\n    HomeComponent,\r\n    MainComponent,\r\n    HeaderComponent,\r\n    ConfirmModalComponent,\r\n    TabsComponent,\r\n    OptionsTabComponent,\r\n    LastReportComponent,\r\n    ReportTabComponent,\r\n    ReportPreviewComponent,\r\n    SavedTimestampComponent,\r\n    DisplayTabComponent,\r\n    DisplayTabRowComponent,\r\n    FilterTabComponent,\r\n    FilterTabRowComponent,\r\n    FilterInputComponent,\r\n    RightSidebarComponent,\r\n    FieldComponent,\r\n    ErrorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    ClickOutsideModule,\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    RouterModule.forRoot(appRoutes),\r\n    StoreRouterConnectingModule.forRoot({ serializer: DefaultRouterStateSerializer,\r\n      stateKey: 'router',\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EffectsModule.forRoot([ReportEffects, ConfigEffects, RouterEffects]),\r\n    HttpClientModule,\r\n    TreeModule,\r\n    MatSortModule,\r\n    HttpClientXsrfModule.withOptions({\r\n      cookieName: 'csrftoken',\r\n      headerName: 'X-CSRFToken',\r\n    }),\r\n    FormsModule,\r\n    ...MatModules,\r\n  ],\r\n  providers: [\r\n    ApiService,\r\n    { provide: RouterStateSerializer, useClass: CustomSerializer },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NetworkErrorInterceptor,\r\n      multi: true,\r\n    },\r\n    PendingChangesGuard,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ConfirmModalComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Action } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { IDisplayField } from '../models/api';\r\n\r\nexport enum DisplayFieldActionTypes {\r\n  LOAD_ALL = '[Display Fields] Load All',\r\n  UPDATE_ONE = '[Display Fields] Update One',\r\n  UPDATE_MANY = '[Display Fields] Update Many',\r\n  DELETE_ONE = '[Display Fields] Delete One',\r\n}\r\n\r\nexport class LoadAll implements Action {\r\n  readonly type = DisplayFieldActionTypes.LOAD_ALL;\r\n  constructor(public payload: IDisplayField[]) {}\r\n}\r\n\r\nexport class UpdateOne implements Action {\r\n  readonly type = DisplayFieldActionTypes.UPDATE_ONE;\r\n  constructor(public payload: Update<IDisplayField>) {}\r\n}\r\n\r\nexport class UpdateMany implements Action {\r\n  readonly type = DisplayFieldActionTypes.UPDATE_MANY;\r\n  constructor(public payload: Update<IDisplayField>[]) {}\r\n}\r\n\r\nexport class DeleteOne implements Action {\r\n  readonly type = DisplayFieldActionTypes.DELETE_ONE;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport type DisplayFieldActions = LoadAll | UpdateOne | UpdateMany | DeleteOne;\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, Input } from '@angular/core';\r\n\r\ninterface ReportInput {\r\n  report_file: string;\r\n  report_file_creation: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-last-report',\r\n  template: `\r\n  <a mat-button href=\"{{ report.report_file }}\" matTooltip=\"Download report generated at {{ report.report_file_creation }}\">\r\n    <mat-icon>file_download</mat-icon>Download\r\n  </a>`,\r\n})\r\nexport class LastReportComponent {\r\n  @Input() report: ReportInput;\r\n\r\n  constructor() {}\r\n}\r\n","import { Observable, forkJoin, of, asyncScheduler } from 'rxjs';\r\nimport {\r\n  map,\r\n  mergeMap,\r\n  tap,\r\n  withLatestFrom,\r\n  catchError,\r\n  delay,\r\n} from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\n\r\nimport { ApiService } from '../api.service';\r\nimport * as fromReports from '../actions/reports';\r\nimport * as fromDisplay from '../actions/display-field';\r\nimport * as fromFilter from '../actions/filter';\r\nimport { IGetRelatedFieldRequest } from '../models/api';\r\nimport { State } from '../reducers';\r\nimport {\r\n  getEditedReport,\r\n  getSelectedReportId,\r\n  getIsAsyncReport,\r\n} from '../selectors';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nconst { ReportActionTypes } = fromReports;\r\n\r\n@Injectable()\r\nexport class ReportEffects {\r\n  @Effect()\r\n  getReports$: Observable<Action> = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_REPORT_LIST),\r\n    mergeMap(() =>\r\n      this.api\r\n        .getReports()\r\n        .pipe(map(reports => new fromReports.SetReportList(reports)))\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store$: Store<State>,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    public snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  @Effect()\r\n  getReport$: Observable<Action> = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_REPORT),\r\n    map((action: fromReports.GetReport) => action.payload),\r\n    mergeMap(reportId =>\r\n      this.api\r\n        .getReport(reportId)\r\n        .pipe(map(report => new fromReports.GetReportSuccess(report)))\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadDisplayFields$ = this.actions$.pipe(\r\n    ofType(\r\n      ReportActionTypes.GET_REPORT_SUCCESS,\r\n      ReportActionTypes.EDIT_REPORT_SUCCESS\r\n    ),\r\n    map(\r\n      (action: fromReports.GetReportSuccess | fromReports.EditReportSuccess) =>\r\n        new fromDisplay.LoadAll(action.payload.displayfield_set)\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadFilterFields$ = this.actions$.pipe(\r\n    ofType(\r\n      ReportActionTypes.GET_REPORT_SUCCESS,\r\n      ReportActionTypes.EDIT_REPORT_SUCCESS\r\n    ),\r\n    map(\r\n      (action: fromReports.GetReportSuccess | fromReports.EditReportSuccess) =>\r\n        new fromFilter.LoadAll(action.payload.filterfield_set)\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  getReportSuccess$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_REPORT_SUCCESS),\r\n    map((action: fromReports.GetReportSuccess) => action.payload),\r\n    mergeMap(report => {\r\n      const request: IGetRelatedFieldRequest = {\r\n        model: report.root_model,\r\n        path: '',\r\n        field: '',\r\n      };\r\n      return forkJoin(\r\n        this.api.getRelatedFields(request),\r\n        this.api.getFields(request)\r\n      ).pipe(\r\n        map(\r\n          ([relatedFields, fields]) =>\r\n            new fromReports.GetReportFieldsSuccess({ relatedFields, fields })\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  getFields$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_FIELDS),\r\n    map((action: fromReports.GetFields) => action.payload),\r\n    mergeMap(relatedField => {\r\n      const fieldReq: IGetRelatedFieldRequest = {\r\n        model: relatedField.model_id,\r\n        path: relatedField.path,\r\n        field: relatedField.field_name,\r\n      };\r\n      return this.api\r\n        .getFields(fieldReq)\r\n        .pipe(map(fields => new fromReports.GetFieldsSuccess(fields)));\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  getRelatedFields$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_RELATED_FIELDS),\r\n    map((action: fromReports.GetRelatedFields) => action.payload),\r\n    mergeMap(relatedField => {\r\n      const fieldReq: IGetRelatedFieldRequest = {\r\n        model: relatedField.model_id,\r\n        path: relatedField.path,\r\n        field: relatedField.field_name,\r\n      };\r\n      return this.api.getRelatedFields(fieldReq).pipe(\r\n        map(\r\n          fields =>\r\n            new fromReports.GetRelatedFieldsSuccess({\r\n              parentId: relatedField.id,\r\n              relatedFields: fields,\r\n            })\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  deleteReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.DELETE_REPORT),\r\n    map((action: fromReports.DeleteReport) => action.payload),\r\n    mergeMap(reportId => {\r\n      return this.api\r\n        .deleteReport(reportId)\r\n        .pipe(map(() => new fromReports.DeleteReportSuccess(reportId)));\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  deleteReportSuccess$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.DELETE_REPORT_SUCCESS),\r\n    tap(_ => this.router.navigate(['']))\r\n  );\r\n\r\n  @Effect()\r\n  editReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.EDIT_REPORT),\r\n    withLatestFrom(this.store$),\r\n    mergeMap(([_, storeState]) => {\r\n      const editedReport = getEditedReport(storeState);\r\n      return this.api.editReport(editedReport).pipe(\r\n        map(response => new fromReports.EditReportSuccess(response)),\r\n        catchError(error => of(new fromReports.EditReportFailure(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  generatePreview$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GENERATE_PREVIEW),\r\n    withLatestFrom(this.store$),\r\n    mergeMap(([_, storeState]) => {\r\n      const reportId = getSelectedReportId(storeState);\r\n      return this.api\r\n        .generatePreview(reportId)\r\n        .pipe(\r\n          map(response => new fromReports.GeneratePreviewSuccess(response))\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  exportReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.EXPORT_REPORT),\r\n    withLatestFrom(this.store$),\r\n    mergeMap(([action, storeState]: [fromReports.ExportReport, State]) => {\r\n      const reportId = getSelectedReportId(storeState);\r\n      const async = getIsAsyncReport(storeState);\r\n      const type = action.payload;\r\n\r\n      if (!async) {\r\n        return Observable.create(observer => {\r\n          observer.next(\r\n            new fromReports.DownloadExportedReport(\r\n              `api/report/${reportId}/download_file/${type}/`\r\n            )\r\n          );\r\n          observer.complete();\r\n        });\r\n      }\r\n\r\n      return this.api\r\n        .exportReport({ reportId, type })\r\n        .pipe(\r\n          map(\r\n            ({ task_id }) =>\r\n              new fromReports.CheckExportStatus({ reportId, taskId: task_id })\r\n          )\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  downloadExportedReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.DOWNLOAD_EXPORTED_REPORT),\r\n    mergeMap(\r\n      (action: fromReports.DownloadExportedReport) =>\r\n        (window.location.href = action.payload)\r\n    )\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  cancelExportReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CANCEL_EXPORT_REPORT),\r\n    tap(() =>\r\n      this.snackBar.open('Sorry, something went wrong!', '', { duration: 5000 })\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CREATE_REPORT),\r\n    map((action: fromReports.CreateReport) => action.payload),\r\n    mergeMap(newReport =>\r\n      this.api.submitNewReport(newReport).pipe(\r\n        map(\r\n          createdReport => new fromReports.CreateReportSuccess(createdReport)\r\n        ),\r\n        catchError(error => of(new fromReports.CreateReportError(error)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createReportSuccess$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CREATE_REPORT_SUCCESS),\r\n    map((action: fromReports.CreateReportSuccess) => action.payload.id),\r\n    tap(reportId => this.router.navigate([`/report/${reportId}/`])),\r\n    map(() => new fromReports.ChangeTab(0))\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  createReportError$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CREATE_REPORT_ERROR),\r\n    tap(error =>\r\n      this.snackBar.open('Invalid report: please reload the page', '', {\r\n        duration: 5000,\r\n      })\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  copyReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.COPY_REPORT),\r\n    map((action: fromReports.CopyReport) => action.payload),\r\n    mergeMap(reportId => this.api.copyReport(reportId)),\r\n    map(createdReport => new fromReports.CreateReportSuccess(createdReport))\r\n  );\r\n\r\n  @Effect()\r\n  checkExportStatus$ = ({\r\n    delayTime = 500,\r\n    scheduler = asyncScheduler\r\n  } = {}) => this.actions$.pipe(\r\n    ofType(ReportActionTypes.CHECK_EXPORT_STATUS),\r\n    delay(delayTime, scheduler),\r\n    mergeMap(\r\n      ({ payload: { reportId, taskId } }: fromReports.CheckExportStatus) =>\r\n        this.api.checkStatus({ reportId, taskId }).pipe(\r\n          map(({ state, link }) => {\r\n            if (state === 'SUCCESS') {\r\n              return new fromReports.DownloadExportedReport(link);\r\n            } else if (state === 'FAILURE') {\r\n              return new fromReports.CancelExportReport();\r\n            } else {\r\n              return new fromReports.CheckExportStatus({ reportId, taskId });\r\n            }\r\n          })\r\n        )\r\n    )\r\n  );\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-saved-timestamp',\r\n  template: `<span class=\"saved-timestamp\">{{this.lastSaved ? 'Last saved: ' + this.lastSaved : this.notSaved}}</span>`,\r\n})\r\nexport class SavedTimestampComponent {\r\n  constructor() {}\r\n  @Input() lastSaved?: Date;\r\n  notSaved = 'Report has not been saved';\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input() title: string;\r\n  @Input() reportName: string;\r\n  @Input() showRightNavButton: boolean;\r\n  @Output() onToggleRightNav = new EventEmitter();\r\n  @Output() changeTitleInput = new EventEmitter();\r\n  @Output() goHome = new EventEmitter();\r\n\r\n  clickGoHome(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.goHome.emit();\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <div class=\"left-navbar-container\">\r\n    <a mat-icon-button (click)=\"clickGoHome($event)\" href=\"/\">\r\n      <mat-icon>home</mat-icon>\r\n    </a>\r\n  </div>\r\n  <span>{{ title }}&nbsp;\r\n    <mat-form-field *ngIf=\"reportName\">\r\n      <input matInput id=\"title-input\" value=\"{{reportName}}\" (keyup)=\"changeTitleInput.emit($event.currentTarget.value)\">\r\n    </mat-form-field>\r\n  </span>\r\n  <div class=\"right-navbar-container\">\r\n    <div [hidden]=\"!showRightNavButton\">\r\n      <button class=\"button\" (click)=\"this.onToggleRightNav.emit();\" id=\"toggleRight\" type=\"button\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Action } from '@ngrx/store';\r\nimport { NavigationExtras } from '@angular/router';\r\n\r\nexport enum RouterActionTypes {\r\n  GO = '[Router] Go',\r\n  BACK = '[Router] Back',\r\n  FORWARD = '[Router] Forward',\r\n}\r\n\r\nexport class Go implements Action {\r\n  readonly type = RouterActionTypes.GO;\r\n\r\n  constructor(\r\n    public payload: {\r\n      path: any[];\r\n      query?: object;\r\n      extras?: NavigationExtras;\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class Back implements Action {\r\n  readonly type = RouterActionTypes.BACK;\r\n}\r\n\r\nexport class Forward implements Action {\r\n  readonly type = RouterActionTypes.FORWARD;\r\n}\r\n\r\nexport type RouterActions = Go | Back | Forward;\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  EventEmitter,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { IField, IRelatedField } from '../../models/api';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TreeNode } from '@circlon/angular-tree-component';\r\nimport { ITreeNode } from '@circlon/angular-tree-component/lib/defs/api';\r\n\r\n@Component({\r\n  selector: 'app-right-sidebar',\r\n  templateUrl: './right-sidebar.component.html',\r\n  styleUrls: ['./right-sidebar.component.scss'],\r\n})\r\nexport class RightSidebarComponent implements OnChanges {\r\n  @Input() modelName: string;\r\n  @Input() selectedField: IField;\r\n  @Input() lockOpen: boolean;\r\n  @Output() close = new EventEmitter();\r\n\r\n  @Output() selectRelatedField = new EventEmitter<IRelatedField>();\r\n  @Output() expandRelatedField = new EventEmitter<IRelatedField>();\r\n  @Output() searchFields = new EventEmitter<string>();\r\n  @Output() searchRelations = new EventEmitter<string>();\r\n\r\n  @Output() addReportField = new EventEmitter<IField>();\r\n  @Output() selectField = new EventEmitter<IField>();\r\n  @Input() relatedFields: IRelatedField[];\r\n\r\n  @Input()\r\n  set fields(value: IField[]) {\r\n    this.fieldDataSource = new MatTableDataSource(value);\r\n  }\r\n\r\n  @ViewChild('searchFields', { static: true }) searchInput\r\n\r\n  fieldDataSource: MatTableDataSource<IField>;\r\n  displayedColumnsField = ['name', 'button'];\r\n  nodes: TreeNode[];\r\n\r\n  ngOnChanges() {\r\n    this.nodes = this.getRelatedFields();\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  onExpand({ node, isExpanded }: { node: ITreeNode; isExpanded: boolean }) {\r\n    if (isExpanded) {\r\n      this.expandRelatedField.emit(node.data);\r\n    }\r\n  }\r\n\r\n  onActivate({ node }: { node: ITreeNode }) {\r\n    this.selectRelatedField.emit(node.data);\r\n    this.searchInput.nativeElement.value = ''\r\n  }\r\n\r\n  filterTree(text, tree) {\r\n    tree.treeModel.filterNodes(node => {\r\n      return node.data.verbose_name.startsWith(text);\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n    this.fieldDataSource.filter = filterValue;\r\n  }\r\n\r\n  getRelatedFields() {\r\n    return this.relatedFields.map(deepCopy);\r\n  }\r\n}\r\n\r\nfunction deepCopy(obj) {\r\n  const copy = { ...obj };\r\n  copy.name = copy.verbose_name;\r\n  copy.children = copy.children.map(deepCopy);\r\n  copy.hasChildren = true;\r\n  return copy;\r\n}\r\n","<div class=\"header\">\r\n  <h3>{{ modelName }} relations\r\n    <mat-icon *ngIf=\"!lockOpen\" (click)=\"close.emit()\" class=\"close-icon\">close</mat-icon>\r\n  </h3>\r\n</div>\r\n\r\n<div class=\"example-header\">\r\n  <mat-form-field>\r\n    <input id=\"filter\" #filter matInput (keyup)=\"tree.treeModel.filterNodes(filter.value)\" placeholder=\"Search Related Fields\">\r\n  </mat-form-field>\r\n</div>\r\n\r\n<tree-root #tree [nodes]=\"nodes\" (toggleExpanded)=\"onExpand($event)\" (activate)=\"onActivate($event)\"></tree-root>\r\n\r\n<div class=\"header\">\r\n  <h3>Fields</h3>\r\n</div>\r\n\r\n<div class=\"example-header\">\r\n  <mat-form-field>\r\n    <input #searchFields matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search Fields\">\r\n  </mat-form-field>\r\n</div>\r\n\r\n<mat-table [dataSource]=\"fieldDataSource\" matSort #table matSortDisableClear=\"true\">\r\n\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Field Name</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let field\" (click)=\"selectField.emit(field)\">{{field.name}}\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"button\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\r\n    <mat-cell *matCellDef=\"let field\">\r\n      <button class=\"add-button\" (click)=\"addReportField.emit(field)\">\r\n        <span class=\"add-button-content\">\r\n          <mat-icon class=\"add-icon\">add</mat-icon>\r\n          <span class=\"content\">Add</span>\r\n        </span>\r\n      </button>\r\n\r\n    </mat-cell>å\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumnsField\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumnsField;\"></mat-row>\r\n\r\n</mat-table>\r\n\r\n<div *ngIf=\"selectedField\" class=\"selected-field\">\r\n  [{{selectedField.field_type}}] {{selectedField.help_text}}\r\n</div>\r\n","import { State, displayFieldAdapter, filterAdapter } from '../models/reports';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getReports = (state: State) => state.reports;\r\nexport const getTitle = (state: State) => state.title;\r\nexport const getSelectedReport = (state: State) => state.selectedReport;\r\nexport const getSelectedReportId = createSelector(\r\n  getSelectedReport,\r\n  report => report && report.id\r\n);\r\nexport const getSelectedReportName = createSelector(\r\n  getSelectedReport,\r\n  report => report && report.name\r\n);\r\nexport const getFields = (state: State) => state.fields;\r\nexport const getRelatedFields = (state: State) => state.relatedFields;\r\nexport const getDescriptionInput = (state: State) => state.descriptionInput;\r\nexport const getTitleInput = (state: State) => state.titleInput;\r\nexport const getIsDistinct = (state: State) => state.isDistinct;\r\nexport const getPreview = (state: State) => state.reportPreview;\r\nexport const getLastSaved = (state: State) => state.reportSaved;\r\nexport const getNewReportInfo = (state: State) => {\r\n  const report = getSelectedReport(state);\r\n  if (report) {\r\n    const { name, description, root_model } = report;\r\n    return { name, description, root_model };\r\n  }\r\n};\r\nexport const getLastGeneratedReport = createSelector(\r\n  getSelectedReport,\r\n  selectedReport => {\r\n    if (selectedReport && selectedReport.report_file) {\r\n      const { report_file, report_file_creation } = selectedReport;\r\n      return { report_file, report_file_creation };\r\n    }\r\n  }\r\n);\r\nexport const getRightNavIsOpen = (state: State) => state.rightNavIsOpen;\r\n\r\nexport const getDisplayFieldsState = (state: State) => state.displayFields;\r\nconst {\r\n  selectAll: selectAllDisplayFields,\r\n  selectTotal: selectDisplayFieldsCount,\r\n} = displayFieldAdapter.getSelectors();\r\nexport const getDisplayFields = createSelector(\r\n  getDisplayFieldsState,\r\n  selectAllDisplayFields\r\n);\r\nexport const getDisplayFieldsCount = createSelector(\r\n  getDisplayFieldsState,\r\n  selectDisplayFieldsCount\r\n);\r\nexport const getFiltersState = (state: State) => state.filters;\r\nconst {\r\n  selectAll: selectAllFilters,\r\n  selectTotal: selectFiltersCount,\r\n} = filterAdapter.getSelectors();\r\nexport const getFilters = createSelector(getFiltersState, selectAllFilters);\r\nexport const getFiltersCount = createSelector(\r\n  getFiltersState,\r\n  selectFiltersCount\r\n);\r\nexport const getActiveTab = (state: State) => state.activeTab;\r\n\r\nexport const getEditedReport = (state: State) => ({\r\n  ...state.selectedReport,\r\n  description: getDescriptionInput(state),\r\n  distinct: getIsDistinct(state),\r\n  displayfield_set: getDisplayFields(state),\r\n  filterfield_set: getFilters(state),\r\n  name: getTitleInput(state),\r\n});\r\nexport const getSelectedField = (state: State) => state.selectedField;\r\nexport const isGeneratingReport = (state: State) => state.generatingReport;\r\nexport const hasEditedSinceLastSave = (state: State) =>\r\n  state.editedSinceLastSave;\r\nexport const getErrors = (state: State) => state.errors;\r\n","import { Component, Input } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../../../reducers';\r\nimport { getDescriptionInput, getIsDistinct } from '../../../selectors';\r\nimport {\r\n  ChangeReportDescription,\r\n  ToggleReportDistinct,\r\n  DeleteReport,\r\n  CopyReport,\r\n} from '../../../actions/reports';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IReportDetailed } from '../../../models/api';\r\nimport {\r\n  ConfirmModalComponent,\r\n  IConfirmModalData,\r\n} from '../../../confirm/confirm-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-options-tab',\r\n  templateUrl: './options-tab.component.html',\r\n})\r\nexport class OptionsTabComponent {\r\n  constructor(private store: Store<State>, public dialog: MatDialog) {}\r\n\r\n  descriptionInput$ = this.store.select(getDescriptionInput);\r\n  isChecked$ = this.store.select(getIsDistinct);\r\n  @Input() report: IReportDetailed;\r\n\r\n  onChange(value: string) {\r\n    this.store.dispatch(new ChangeReportDescription(value));\r\n  }\r\n\r\n  onClick(value: boolean) {\r\n    this.store.dispatch(new ToggleReportDistinct(value));\r\n  }\r\n\r\n  onDelete(e: MouseEvent) {\r\n    e.preventDefault();\r\n\r\n    const dialogRef = this.dialog.open(ConfirmModalComponent, {\r\n      data: {\r\n        title: `Are you sure you want to delete ${this.report.name}`,\r\n        subtitle: 'You will not be able to undo this action.',\r\n        confirmText: 'Delete',\r\n      } as IConfirmModalData,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.store.dispatch(new DeleteReport(this.report.id));\r\n      }\r\n    });\r\n  }\r\n\r\n  copyReport(e: MouseEvent) {\r\n    e.preventDefault();\r\n    this.store.dispatch(new CopyReport(this.report.id));\r\n  }\r\n}\r\n","<div class=\"options-tab\">\r\n  <mat-list class=\"options-content\">\r\n    <form>\r\n\r\n      <mat-list-item>\r\n        <mat-form-field>\r\n          <textarea matInput placeholder=\"Description\" matTextareaAutosize [value]=\"descriptionInput$ | async\" (keyup)=\"onChange($event.currentTarget.value)\"></textarea>\r\n        </mat-form-field>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item>\r\n        <mat-checkbox matListIcon [checked]=\"isChecked$ | async\" (change)=\"onClick($event.checked)\"></mat-checkbox>\r\n        <span matLine>Is Distinct (maybe help reduce duplicate rows). Read\r\n          <a href=\"https://docs.djangoproject.com/en/2.0/ref/models/querysets/#django.db.models.query.QuerySet.distinct\" target=\"_blank\">more\r\n          </a>.\r\n        </span>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item>\r\n        <mat-icon matListIcon (click)=\"onDelete($event)\">delete</mat-icon>\r\n        <a matLine href=\"#\" alt=\"Delete this report\" (click)=\"onDelete($event)\">Delete this report</a>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item *ngIf=\"report\" (click)=\"this.copyReport($event)\">\r\n        <mat-icon matListIcon>content_copy</mat-icon>\r\n        <a matLine href=\"/report_builder/report/{{report.id}}/create_copy/\">Copy this report</a>\r\n      </mat-list-item>\r\n    </form>\r\n  </mat-list>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IField } from '../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-field-component',\r\n  template: `<div>\r\n    <span (click)=\"selectField.emit(field)\">{{field.name}}</span><mat-icon (click)=\"addReportField.emit(field)\">add</mat-icon>\r\n  </div>`,\r\n})\r\nexport class FieldComponent {\r\n  constructor() {}\r\n\r\n  @Input() field: IField;\r\n  @Output() addReportField = new EventEmitter<IField>();\r\n  @Output() selectField = new EventEmitter<IField>();\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { IFilter } from '../models/api';\r\n\r\nexport enum FilterActionTypes {\r\n  LOAD_ALL = '[Filters] Load All',\r\n  UPDATE_ONE = '[Filters] Update One',\r\n  UPDATE_MANY = '[Filters] Update Many',\r\n  DELETE_ONE = '[Filters] Delete One',\r\n}\r\n\r\nexport class LoadAll implements Action {\r\n  readonly type = FilterActionTypes.LOAD_ALL;\r\n  constructor(public payload: IFilter[]) {}\r\n}\r\n\r\nexport class UpdateOne implements Action {\r\n  readonly type = FilterActionTypes.UPDATE_ONE;\r\n  constructor(public payload: Update<IFilter>) {}\r\n}\r\n\r\nexport class UpdateMany implements Action {\r\n  readonly type = FilterActionTypes.UPDATE_MANY;\r\n  constructor(public payload: Update<IFilter>[]) {}\r\n}\r\n\r\nexport class DeleteOne implements Action {\r\n  readonly type = FilterActionTypes.DELETE_ONE;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport type FilterActions = LoadAll | UpdateOne | UpdateMany | DeleteOne;\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { RouterNavigationAction, ROUTER_NAVIGATION } from '@ngrx/router-store';\r\nimport { tap, map, filter } from 'rxjs/operators';\r\n\r\nimport * as fromReports from '../actions/reports';\r\nimport { RouterActionTypes, Go } from '../actions/router';\r\nimport { RouterStateUrl } from '../reducers';\r\n\r\n@Injectable()\r\nexport class RouterEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private location: Location\r\n  ) {}\r\n\r\n  @Effect({ dispatch: false })\r\n  navigate$ = this.actions$.pipe(\r\n    ofType(RouterActionTypes.GO),\r\n    map((action: Go) => action.payload),\r\n    tap(({ path, query: queryParams, extras }) =>\r\n      this.router.navigate(path, { queryParams, ...extras })\r\n    )\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  navigateBack$ = this.actions$.pipe(\r\n    ofType(RouterActionTypes.BACK),\r\n    tap(() => this.location.back())\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  navigateForward$ = this.actions$.pipe(\r\n    ofType(RouterActionTypes.FORWARD),\r\n    tap(() => this.location.forward())\r\n  );\r\n\r\n  @Effect()\r\n  routeChange$ = this.actions$.pipe(\r\n    ofType(ROUTER_NAVIGATION),\r\n    map((action: RouterNavigationAction<RouterStateUrl>) => {\r\n      const route = action.payload.routerState;\r\n      if (route.url === '/') {\r\n        return new fromReports.GetReportList();\r\n      }\r\n      if (route.params.id) {\r\n        return new fromReports.GetReport(route.params.id);\r\n      }\r\n      return null;\r\n    }),\r\n    filter(Boolean)\r\n  );\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { ChangeTab, EditReport } from '../../actions/reports';\r\nimport * as DisplayFieldActions from '../../actions/display-field';\r\nimport * as FilterActions from '../../actions/filter';\r\nimport { State } from '../../reducers';\r\nimport {\r\n  getActiveTab,\r\n  getDisplayFields,\r\n  getFilters,\r\n  getFormatOptions,\r\n  getSelectedReport,\r\n  hasEditedSinceLastSave,\r\n  getErrors,\r\n} from '../../selectors';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\nimport { Update } from '@ngrx/entity';\r\nimport { IDisplayField, IFilter } from '../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TabsComponent implements OnInit {\r\n  constructor(private store: Store<State>) {}\r\n  displayFields$ = this.store.select(getDisplayFields);\r\n  filters$ = this.store.select(getFilters);\r\n  activeTab$ = this.store.select(getActiveTab);\r\n  formatOptions$ = this.store.select(getFormatOptions);\r\n  report$ = this.store.select(getSelectedReport);\r\n  hasChanged$ = this.store.select(hasEditedSinceLastSave);\r\n  errors$ = this.store.select(getErrors);\r\n  @ViewChild('tabs', { static: true }) tabs: MatTabGroup;\r\n\r\n  ngOnInit() {\r\n    this.activeTab$.subscribe(number => (this.tabs.selectedIndex = number));\r\n  }\r\n\r\n  tabChange(index: number) {\r\n    this.store.dispatch(new ChangeTab(index));\r\n  }\r\n\r\n  updateDisplayField(update: Update<IDisplayField>) {\r\n    this.store.dispatch(new DisplayFieldActions.UpdateOne(update));\r\n  }\r\n\r\n  deleteDisplayField(id: number) {\r\n    this.store.dispatch(new DisplayFieldActions.DeleteOne(id));\r\n  }\r\n\r\n  updateFilter(update: Update<IFilter>) {\r\n    this.store.dispatch(new FilterActions.UpdateOne(update));\r\n  }\r\n\r\n  deleteFilter(id: number) {\r\n    this.store.dispatch(new FilterActions.DeleteOne(id));\r\n  }\r\n\r\n  saveReport() {\r\n    this.store.dispatch(new EditReport());\r\n  }\r\n}\r\n","<mat-tab-group #tabs class=\"tab-group\" (selectedTabChange)=\"tabChange($event.index)\">\r\n  <mat-tab label=\"Display\">\r\n    <app-display-tab *ngIf=\"displayFields$ | async\" [fields]=\"displayFields$ | async\" [formatOptions]=\"formatOptions$ | async\"\r\n      (updateField)=\"updateDisplayField($event)\" (deleteField)=\"deleteDisplayField($event)\" (saveReport)=\"saveReport()\" [hasChanged]=\"hasChanged$ | async\"\r\n      [errors]=\"errors$ | async\"></app-display-tab>\r\n  </mat-tab>\r\n  <mat-tab label=\"Filter\">\r\n    <app-filter-tab *ngIf=\"filters$ | async\" [filters]=\"filters$ | async\" (updateFilter)=\"updateFilter($event)\" (deleteFilter)=\"deleteFilter($event)\"\r\n      (saveReport)=\"saveReport()\" [hasChanged]=\"hasChanged$ | async\" [errors]=\"errors$ | async\"></app-filter-tab>\r\n  </mat-tab>\r\n  <mat-tab label=\"Report\">\r\n    <app-report-tab></app-report-tab>\r\n  </mat-tab>\r\n  <mat-tab label=\"Options\">\r\n    <app-options-tab [report]=\"report$ | async\"></app-options-tab>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, HostListener, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../reducers';\r\nimport {\r\n  getReports,\r\n  getRelatedFields,\r\n  getFields,\r\n  getTitle,\r\n  getRightNavIsOpen,\r\n  getActiveTab,\r\n  getSelectedReport,\r\n  getSelectedField,\r\n  hasEditedSinceLastSave,\r\n  getSelectedReportName,\r\n} from '../selectors';\r\nimport { INestedRelatedField, IField } from '../models/api';\r\nimport {\r\n  GetReport,\r\n  GetFields,\r\n  GetRelatedFields,\r\n  ToggleRightNav,\r\n  AddReportField,\r\n  SelectField,\r\n  ChangeReportTitle,\r\n} from '../actions/reports';\r\nimport { Go } from '../actions/router';\r\nimport { ComponentCanDeactivate } from '../generic.guard';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport {\r\n  ConfirmModalComponent,\r\n  IConfirmModalData,\r\n} from '../confirm/confirm-modal.component';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements ComponentCanDeactivate {\r\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\r\n  title$ = this.store.select(getTitle);\r\n  activeTab$ = this.store.select(getActiveTab);\r\n\r\n  listReports$ = this.store.select(getReports);\r\n\r\n  fields$ = this.store.select(getFields);\r\n\r\n  relatedFields$ = this.store.select(getRelatedFields);\r\n\r\n  selectedReport$ = this.store.select(getSelectedReport);\r\n  selectedReportName$ = this.store.select(getSelectedReportName);\r\n  rightNavIsOpen$ = this.store.select(getRightNavIsOpen);\r\n  getFields$ = this.store.select(getFields);\r\n  selectedField$ = this.store.select(getSelectedField);\r\n  edited = false;\r\n\r\n  mode: 'over' | 'side' = 'over';\r\n  lockOpen = false;\r\n\r\n  constructor(\r\n    private store: Store<State>,\r\n    public dialog: MatDialog,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {\r\n    store\r\n      .select(hasEditedSinceLastSave)\r\n      .subscribe(edited => (this.edited = edited));\r\n\r\n    breakpointObserver\r\n      .observe([Breakpoints.Handset, Breakpoints.TabletPortrait])\r\n      .subscribe(result => {\r\n        this.mode = result.matches ? 'over' : 'side';\r\n      });\r\n\r\n    breakpointObserver.observe(['(min-width: 2000px)']).subscribe(result => {\r\n      this.lockOpen = result.matches;\r\n    });\r\n  }\r\n\r\n  canDeactivate() {\r\n    if (this.edited) {\r\n      const dialogRef = this.dialog.open(ConfirmModalComponent, {\r\n        data: {\r\n          title: 'Are you sure you want to navigate away from this report?',\r\n          subtitle: 'All of your changes will be lost.',\r\n        } as IConfirmModalData,\r\n      });\r\n      return dialogRef.afterClosed();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @HostListener('window:beforeunload')\r\n  beforeUnload() {\r\n    if (this.edited) {\r\n      return confirm();\r\n    }\r\n  }\r\n\r\n  openNav(bool?: boolean) {\r\n    if (!this.lockOpen) {\r\n      if (bool === undefined) {\r\n        this.sidenav.toggle();\r\n      } else if (bool) {\r\n        this.sidenav.open();\r\n      } else {\r\n        this.sidenav.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  onClickReport(reportId: number) {\r\n    this.store.dispatch(new GetReport(reportId));\r\n  }\r\n\r\n  selectRelatedField(relatedField: INestedRelatedField) {\r\n    this.store.dispatch(new GetFields(relatedField));\r\n  }\r\n\r\n  expandRelatedField(relatedField: INestedRelatedField) {\r\n    this.store.dispatch(new GetRelatedFields(relatedField));\r\n  }\r\n\r\n  toggleRightNav(open: boolean) {\r\n    this.store.dispatch(new ToggleRightNav(open));\r\n  }\r\n\r\n  addReportField(field: IField) {\r\n    this.store.dispatch(new AddReportField(field));\r\n  }\r\n\r\n  selectField(field: IField) {\r\n    this.store.dispatch(new SelectField(field));\r\n  }\r\n\r\n  editTitle(title: string) {\r\n    this.store.dispatch(new ChangeReportTitle(title));\r\n  }\r\n\r\n  goHome() {\r\n    this.store.dispatch(new Go({ path: ['/'] }));\r\n  }\r\n}\r\n","<app-header (onToggleRightNav)=\"openNav()\" (changeTitleInput)=\"editTitle($event)\" [title]=\"title$ | async\" [showRightNavButton]=\"(activeTab$ | async) <= 1\"\r\n  [reportName]=\"(selectedReportName$ | async)\" (goHome)=\"goHome()\">\r\n</app-header>\r\n<mat-sidenav-container class=\"left-sidenav-container\">\r\n  <mat-sidenav-content>\r\n    <app-tabs>\r\n    </app-tabs>\r\n  </mat-sidenav-content>\r\n  <mat-sidenav #sidenav [mode]=\"(mode)\" [opened]=\"lockOpen\" [disableClose]=\"lockOpen\" position=\"end\" (openedChange)=\"toggleRightNav($event)\">\r\n    <app-right-sidebar #rightMenu [modelName]=\"(selectedReportName$ | async)\" [relatedFields]=\"relatedFields$ | async\" [fields]=\"fields$ | async\"\r\n      [selectedField]=\"selectedField$ | async\" (selectRelatedField)=\"selectRelatedField($event)\" (close)=\"openNav(false)\" (addReportField)=\"addReportField($event)\"\r\n      (expandRelatedField)=\"expandRelatedField($event)\" (selectField)=\"selectField($event)\" [lockOpen]=\"lockOpen\"></app-right-sidebar>\r\n  </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\nimport {\r\n  ReportsResponse,\r\n  IReportDetailed,\r\n  ContentTypeResponse,\r\n  IGetRelatedFieldRequest,\r\n  IRelatedField,\r\n  IField,\r\n  IReportPreview,\r\n  IConfig,\r\n  INewReport,\r\n  IAsyncTaskId,\r\n  ITaskStatus,\r\n  IExportType,\r\n} from './models/api';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  apiUrl = 'api/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getConfig() {\r\n    return this.http.get<IConfig>(this.apiUrl + 'config/');\r\n  }\r\n\r\n  getRootModels() {\r\n    return this.http.get<ContentTypeResponse>(this.apiUrl + 'contenttypes/');\r\n  }\r\n\r\n  submitNewReport(form: INewReport) {\r\n    return this.http.post<IReportDetailed>(this.apiUrl + 'report/', form);\r\n  }\r\n\r\n  getReports() {\r\n    return this.http.get<ReportsResponse>(this.apiUrl + 'reports/');\r\n  }\r\n\r\n  getReport(reportId: number) {\r\n    return this.http.get<IReportDetailed>(this.apiUrl + `report/${reportId}/`);\r\n  }\r\n\r\n  getRelatedFields(request: IGetRelatedFieldRequest) {\r\n    return this.http.post<IRelatedField[]>(\r\n      this.apiUrl + 'related_fields/',\r\n      request\r\n    );\r\n  }\r\n\r\n  getFields(request: IGetRelatedFieldRequest) {\r\n    return this.http.post<IField[]>(this.apiUrl + 'fields/', request);\r\n  }\r\n\r\n  deleteReport(reportId: number) {\r\n    return this.http.delete(this.apiUrl + `report/${reportId}/`);\r\n  }\r\n\r\n  editReport(form: IReportDetailed) {\r\n    return this.http.put<IReportDetailed>(\r\n      this.apiUrl + `report/${form.id}/`,\r\n      form\r\n    );\r\n  }\r\n\r\n  generatePreview(reportId: number) {\r\n    return this.http.get<IReportPreview>(\r\n      this.apiUrl + `report/${reportId}/generate/`\r\n    );\r\n  }\r\n\r\n  exportReport({ reportId, type }: { reportId: number; type: IExportType }) {\r\n    return this.http.get<IAsyncTaskId>(\r\n      `api/report/${reportId}/download_file/${type}/`\r\n    );\r\n  }\r\n\r\n  checkStatus({\r\n    reportId,\r\n    taskId,\r\n  }: {\r\n    reportId: number | string;\r\n    taskId: string;\r\n  }) {\r\n    return this.http.get<ITaskStatus>(\r\n      `api/report/${reportId}/check_status/${taskId}/`\r\n    );\r\n  }\r\n\r\n  copyReport(reportId: number) {\r\n    return this.http.post<IReportDetailed>(\r\n      this.apiUrl + `report/${reportId}/copy_report/`,\r\n      null\r\n    );\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport {\r\n  IReport,\r\n  IReportDetailed,\r\n  IRelatedField,\r\n  IField,\r\n  IReportPreview,\r\n  INewReport,\r\n  IBase,\r\n  INestedRelatedField,\r\n  IExportType,\r\n  IReportErrors,\r\n} from '../models/api';\r\n\r\nexport enum ReportActionTypes {\r\n  GET_REPORT_LIST = 'Get Report List',\r\n  SET_REPORT_LIST = 'Set Report List',\r\n  GET_REPORT = 'Get Report',\r\n  GET_TITLE = 'Get Title',\r\n  GET_REPORT_SUCCESS = 'Get Report Success',\r\n  GET_REPORT_FIELDS_SUCCESS = 'Get Report Fields Success',\r\n  GET_FIELDS = 'Get Fields',\r\n  GET_FIELDS_SUCCESS = 'Get Fields Success',\r\n  GET_RELATED_FIELDS = 'Get Related Fields',\r\n  GET_RELATED_FIELDS_SUCCESS = 'Get Related Fields Success',\r\n  CHANGE_REPORT_DESCRIPTION = 'Change Report Description',\r\n  CHANGE_REPORT_TITLE = 'Change Report Title',\r\n  TOGGLE_REPORT_DISTINCT = 'Toggle Report Distinct',\r\n  DELETE_REPORT = 'Delete Report',\r\n  DELETE_REPORT_SUCCESS = 'Delete Report Success',\r\n  EDIT_REPORT = 'Edit Report',\r\n  EDIT_REPORT_SUCCESS = 'Edit Report Success',\r\n  EDIT_REPORT_FAILURE = 'Edit Report Failure',\r\n  GENERATE_PREVIEW = 'Generate Preview',\r\n  GENERATE_PREVIEW_SUCCESS = 'Generate Preview Success',\r\n  EXPORT_REPORT = 'Export Report',\r\n  CREATE_REPORT = 'Create Report',\r\n  CREATE_REPORT_SUCCESS = 'Create Report Success',\r\n  CREATE_REPORT_ERROR = 'Create Report Error',\r\n  CANCEL_GENERATE_PREVIEW = 'Cancel Generate Preview',\r\n  COPY_REPORT = 'Copy Report',\r\n  DOWNLOAD_EXPORTED_REPORT = 'Download Exported Report',\r\n  CHECK_EXPORT_STATUS = 'Check Export Status',\r\n  CANCEL_EXPORT_REPORT = 'Cancel Export Report',\r\n  TOGGLE_LEFT_NAV = 'Toggle Left Nav',\r\n  SORT_REPORTS = 'Sort Reports',\r\n  TOGGLE_RIGHT_NAV = 'Toggle Right Nav',\r\n  CHANGE_TAB = 'Change Tab',\r\n  ADD_REPORT_FIELD = 'Add Report Field',\r\n  SELECT_FIELD = 'Select Field',\r\n  CHANGE_DISPLAY_FIELD_POSITION = 'Change Display Field Position',\r\n  CHANGE_FILTER_POSITION = 'Change Filter Position',\r\n}\r\n\r\n/** Request an updated list of all reports from the api */\r\nexport class GetReportList implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT_LIST;\r\n}\r\n\r\nexport class SetReportList implements Action {\r\n  readonly type = ReportActionTypes.SET_REPORT_LIST;\r\n  constructor(public payload: IReport[]) {}\r\n}\r\n\r\n/** Get the report details for one report for active editing */\r\nexport class GetReport implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class GetTitle implements Action {\r\n  readonly type = ReportActionTypes.GET_TITLE;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class GetReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT_SUCCESS;\r\n  constructor(public payload: IReportDetailed) {}\r\n}\r\n\r\nexport class GetReportFieldsSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT_FIELDS_SUCCESS;\r\n  constructor(\r\n    public payload: { relatedFields: IRelatedField[]; fields: IField[] }\r\n  ) {}\r\n}\r\n\r\nexport class GetFields implements Action {\r\n  readonly type = ReportActionTypes.GET_FIELDS;\r\n  constructor(public payload: IRelatedField) {}\r\n}\r\n\r\nexport class GetFieldsSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_FIELDS_SUCCESS;\r\n  constructor(public payload: IField[]) {}\r\n}\r\n\r\nexport class GetRelatedFields implements Action {\r\n  readonly type = ReportActionTypes.GET_RELATED_FIELDS;\r\n  constructor(public payload: INestedRelatedField) {}\r\n}\r\n\r\nexport class GetRelatedFieldsSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_RELATED_FIELDS_SUCCESS;\r\n  constructor(\r\n    public payload: {\r\n      parentId: number;\r\n      relatedFields: IRelatedField[];\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class ChangeReportDescription implements Action {\r\n  readonly type = ReportActionTypes.CHANGE_REPORT_DESCRIPTION;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ChangeReportTitle implements Action {\r\n  readonly type = ReportActionTypes.CHANGE_REPORT_TITLE;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ToggleReportDistinct implements Action {\r\n  readonly type = ReportActionTypes.TOGGLE_REPORT_DISTINCT;\r\n  constructor(public payload?: boolean) {}\r\n}\r\n\r\nexport class DeleteReport implements Action {\r\n  readonly type = ReportActionTypes.DELETE_REPORT;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class DeleteReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.DELETE_REPORT_SUCCESS;\r\n  constructor(public reportId: number) {}\r\n}\r\n\r\nexport class EditReport implements Action {\r\n  readonly type = ReportActionTypes.EDIT_REPORT;\r\n  constructor() {}\r\n}\r\n\r\nexport class EditReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.EDIT_REPORT_SUCCESS;\r\n  constructor(public payload: IReportDetailed) {}\r\n}\r\n\r\nexport class EditReportFailure implements Action {\r\n  readonly type = ReportActionTypes.EDIT_REPORT_FAILURE;\r\n  constructor(public payload: IReportErrors) {}\r\n}\r\n\r\nexport class GeneratePreview implements Action {\r\n  readonly type = ReportActionTypes.GENERATE_PREVIEW;\r\n  constructor() {}\r\n}\r\n\r\nexport class GeneratePreviewSuccess implements Action {\r\n  readonly type = ReportActionTypes.GENERATE_PREVIEW_SUCCESS;\r\n  constructor(public payload: IReportPreview) {}\r\n}\r\n\r\nexport class CancelGeneratePreview implements Action {\r\n  readonly type = ReportActionTypes.CANCEL_GENERATE_PREVIEW;\r\n}\r\n\r\nexport class ExportReport implements Action {\r\n  readonly type = ReportActionTypes.EXPORT_REPORT;\r\n  constructor(public payload: IExportType) {}\r\n}\r\n\r\nexport class DownloadExportedReport implements Action {\r\n  readonly type = ReportActionTypes.DOWNLOAD_EXPORTED_REPORT;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CheckExportStatus implements Action {\r\n  readonly type = ReportActionTypes.CHECK_EXPORT_STATUS;\r\n  constructor(public payload: { reportId: string | number; taskId: string }) {}\r\n}\r\n\r\nexport class CancelExportReport implements Action {\r\n  readonly type = ReportActionTypes.CANCEL_EXPORT_REPORT;\r\n}\r\n\r\nexport class CreateReport implements Action {\r\n  readonly type = ReportActionTypes.CREATE_REPORT;\r\n  constructor(public payload: INewReport) {}\r\n}\r\n\r\nexport class CreateReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.CREATE_REPORT_SUCCESS;\r\n  constructor(public payload: IReportDetailed) {}\r\n}\r\n\r\nexport class CreateReportError implements Action {\r\n  readonly type = ReportActionTypes.CREATE_REPORT_ERROR\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class CopyReport implements Action {\r\n  readonly type = ReportActionTypes.COPY_REPORT;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class ToggleRightNav implements Action {\r\n  readonly type = ReportActionTypes.TOGGLE_RIGHT_NAV;\r\n  constructor(public payload?: boolean) {}\r\n}\r\n\r\nexport class SortReports implements Action {\r\n  readonly type = ReportActionTypes.SORT_REPORTS;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ChangeTab implements Action {\r\n  readonly type = ReportActionTypes.CHANGE_TAB;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class AddReportField implements Action {\r\n  readonly type = ReportActionTypes.ADD_REPORT_FIELD;\r\n  constructor(public payload: IBase) {}\r\n}\r\n\r\nexport class SelectField implements Action {\r\n  readonly type = ReportActionTypes.SELECT_FIELD;\r\n  constructor(public payload: IField) {}\r\n}\r\n\r\nexport type ReportActions =\r\n  | GetReportList\r\n  | GetReportFieldsSuccess\r\n  | SetReportList\r\n  | GetReport\r\n  | GetTitle\r\n  | GetReportSuccess\r\n  | GetFields\r\n  | GetFieldsSuccess\r\n  | GetRelatedFields\r\n  | GetRelatedFieldsSuccess\r\n  | ChangeReportDescription\r\n  | ChangeReportTitle\r\n  | ToggleReportDistinct\r\n  | DeleteReport\r\n  | DeleteReportSuccess\r\n  | EditReport\r\n  | EditReportSuccess\r\n  | EditReportFailure\r\n  | GeneratePreview\r\n  | GeneratePreviewSuccess\r\n  | ExportReport\r\n  | CancelExportReport\r\n  | CancelGeneratePreview\r\n  | CreateReport\r\n  | CreateReportSuccess\r\n  | CreateReportError\r\n  | CopyReport\r\n  | DownloadExportedReport\r\n  | CheckExportStatus\r\n  | SortReports\r\n  | ToggleRightNav\r\n  | SortReports\r\n  | ChangeTab\r\n  | AddReportField\r\n  | SelectField;\r\n","import { ConfigActions, ConfigActionTypes } from '../actions/config';\r\nimport { State } from '../models/config';\r\n\r\nexport function reducer(state = {}, action: ConfigActions): State {\r\n  switch (action.type) {\r\n    case ConfigActionTypes.GET_CONFIG_SUCCESS: {\r\n      return action.payload;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":"webpack:///"}