{"version":3,"sources":["webpack:///src/app/api.interceptor.ts","webpack:///src/app/reducers.ts","webpack:///src/app/actions/config.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/reducers/reports.ts","webpack:///src/app/effects/config.ts","webpack:///src/app/main/tabs/filter-tab/filter-tab-row.component.ts","webpack:///src/app/main/tabs/filter-tab/filter-tab-row.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/main/tabs/display-tab/display-tab.component.ts","webpack:///src/app/main/tabs/display-tab/display-tab.component.html","webpack:///src/app/main/tabs/report-tab/report-tab.component.ts","webpack:///src/app/models/reports.ts","webpack:///src/app/selectors/config.ts","webpack:///src/app/main/tabs/report-tab/report-preview.component.ts","webpack:///src/app/generic.guard.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/main/tabs/display-tab/display-tab-row.component.ts","webpack:///src/app/main/tabs/display-tab/display-tab-row.component.html","webpack:///src/app/selectors.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/main/tabs/filter-tab/filter-tab.component.ts","webpack:///src/app/main/tabs/filter-tab/filter-tab.component.html","webpack:///src/app/new-report/new-report.component.ts","webpack:///src/app/new-report/new-report.component.html","webpack:///src/app/confirm/confirm-modal.component.ts","webpack:///src/app/confirm/confirm-modal.component.html","webpack:///src/app/main/tabs/filter-tab/filter-input.component.ts","webpack:///src/app/main/tabs/filter-tab/filter-input.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/actions/display-field.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/main/tabs/report-tab/last-report.component.ts","webpack:///src/app/effects/reports.ts","webpack:///src/app/main/tabs/report-tab/saved-timestamp.component.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/actions/router.ts","webpack:///src/app/main/right-sidebar/right-sidebar.component.ts","webpack:///src/app/main/right-sidebar/right-sidebar.component.html","webpack:///src/app/selectors/reports.ts","webpack:///src/app/main/tabs/options-tab/options-tab.component.ts","webpack:///src/app/main/tabs/options-tab/options-tab.component.html","webpack:///src/app/main/right-sidebar/field.component.ts","webpack:///src/app/actions/filter.ts","webpack:///src/app/effects/router.ts","webpack:///src/app/main/tabs/tabs.component.ts","webpack:///src/app/main/tabs/tabs.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/api.service.ts","webpack:///src/app/actions/reports.ts","webpack:///src/app/reducers/config.ts","webpack:///src/main.ts"],"names":["NetworkErrorInterceptor","snackBar","store","request","next","baseUrl","document","getElementsByTagName","href","apiReq","clone","url","handle","pipe","err","status","dispatch","open","duration","error","CustomSerializer","routerState","route","root","firstChild","queryParams","params","reducers","reports","config","router","metaReducers","production","ConfigActionTypes","GetConfig","type","GET_CONFIG","GetConfigSuccess","payload","GET_CONFIG_SUCCESS","modifiedStringToDate","report","modifiedDate","Date","modified","sortName","name","toLowerCase","HomeComponent","dialog","displayedColumns","dataSource","listReports$","select","subscribe","data","map","sort","sortingDataAccessor","sortHeaderId","dialogRef","title","subtitle","confirmText","afterClosed","result","id","reportId","filterValue","filter","trim","event","preventDefault","path","applyFilter","selector","templateUrl","initialState","selectedReport","relatedFields","fields","titleInput","descriptionInput","isDistinct","rightNavIsOpen","activeTab","displayFields","getInitialState","filters","nextRelatedFieldId","generatingReport","editedSinceLastSave","reducer","state","action","SET_REPORT_LIST","GET_REPORT","reportPreview","GET_TITLE","TOGGLE_RIGHT_NAV","navOpen","undefined","GET_REPORT_SUCCESS","description","distinct","GET_REPORT_FIELDS_SUCCESS","rootRelatedField","children","relatedField","field_name","verbose_name","root_model_name","help_text","model_id","root_model","parent_model_name","parent_model_app_label","included_model","GET_FIELDS_SUCCESS","GET_RELATED_FIELDS_SUCCESS","populateChildren","parentId","CHANGE_REPORT_DESCRIPTION","CHANGE_REPORT_TITLE","TOGGLE_REPORT_DISTINCT","EDIT_REPORT_SUCCESS","reportSaved","errors","EDIT_REPORT_FAILURE","flatten","Object","entries","tab","items","e","item","i","itemName","EXPORT_REPORT","CANCEL_EXPORT_REPORT","DOWNLOAD_EXPORTED_REPORT","GENERATE_PREVIEW","GENERATE_PREVIEW_SUCCESS","CANCEL_GENERATE_PREVIEW","DELETE_REPORT_SUCCESS","r","report_file","report_file_creation","toISOString","CHANGE_TAB","LOAD_ALL","addAll","UPDATE_ONE","updateOne","UPDATE_MANY","updateMany","DELETE_ONE","removeOne","ADD_REPORT_FIELD","addOne","position","filter_type","filter_value","SELECT_FIELD","selectedField","replaceField","field","replacement","child","flat","forEach","Array","isArray","push","ConfigEffects","actions$","api","getConfig$","getConfig","response","FilterTabRowComponent","deleteFilter","updateFilter","changes","emit","editFilter","styles","environment","ErrorComponent","updateField","deleteField","$event","DisplayTabComponent","saveReport","treeOptions","allowDrag","allowDrop","node","to","parent","idField","actionMapping","mouse","drop","tree","from","index","newPos","formatOptions","hasChanged","ReportTabComponent","previewData$","lastSaved$","lastGeneratedReport$","isGeneratingReport$","errors$","dirty$","template","createPositionEntityAdapter","adapter","sortComparer","x","y","selectId","selectors","getSelectors","removedPos","selectAll","reduce","updatelist","entity","removeMany","removedPositions","s","pos","getPositionUpdates","oldPosition","newPosition","changedPositions","inclusiveRange","isIncrease","col","includes","update","updates","keys","length","assign","displayFieldAdapter","filterAdapter","begin","end","Math","min","max","getIsAsyncReport","async_report","getFormatOptions","formats","ReportPreviewComponent","previewData","PendingChangesGuard","component","canDeactivate","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","webpackContextKeys","resolve","module","exports","DisplayTabRowComponent","editField","getConfigState","getReportsState","getReports","getSelectedReport","getSelectedReportId","getSelectedReportName","getFields","getTitle","getRightNavIsOpen","getRelatedFields","getDescriptionInput","getIsDistinct","getEditedReport","getPreview","getLastSaved","getNewReportInfo","getLastGeneratedReport","getActiveTab","getDisplayFields","getFilters","getSelectedField","isGeneratingReport","hasEditedSinceLastSave","getErrors","AppComponent","styleUrls","FilterTabComponent","moveFilter","NewReportComponent","root_model_choices$","getRootModels","models","detail","form","submit","ConfirmModalComponent","valueChange","value","format","timeOpts","hour","floor","displayHour","String","valueHour","ampm","_minutes","display","rangeUnitOpts","days","hours","minutes","seconds","options","multipliers","multiplier","FilterInputComponent","unitChange","test","fieldType","split","date","time","filterType","currentValue","setTimeout","emitBoolean","rangeUnit","unit","range","getNumber","getMultiplier","toString","emitDateTime","n","parseInt","isNaN","abs","option","find","_option","emitRange","_seconds","appRoutes","MatModules","AppModule","provide","useClass","multi","forRoot","serializer","stateKey","instrument","maxAge","withOptions","cookieName","headerName","declarations","imports","providers","bootstrap","entryComponents","DisplayFieldActionTypes","LoadAll","UpdateOne","UpdateMany","DeleteOne","webpackEmptyAsyncContext","Promise","then","LastReportComponent","ReportActionTypes","ReportEffects","store$","getReports$","GET_REPORT_LIST","getReport$","getReport","loadDisplayFields$","displayfield_set","loadFilterFields$","filterfield_set","getReportSuccess$","model","getFields$","GET_FIELDS","fieldReq","getRelatedFields$","GET_RELATED_FIELDS","deleteReport$","DELETE_REPORT","deleteReport","deleteReportSuccess$","_","navigate","editReport$","EDIT_REPORT","storeState","editedReport","editReport","generatePreview$","generatePreview","exportReport$","async","create","observer","complete","exportReport","task_id","taskId","downloadExportedReport$","window","location","cancelExportReport$","createReport$","CREATE_REPORT","newReport","submitNewReport","createdReport","createReportSuccess$","CREATE_REPORT_SUCCESS","createReportError$","CREATE_REPORT_ERROR","copyReport$","COPY_REPORT","copyReport","checkExportStatus$","delayTime","scheduler","CHECK_EXPORT_STATUS","checkStatus","link","SavedTimestampComponent","notSaved","lastSaved","changeTitleInput","HeaderComponent","onToggleRightNav","goHome","clickGoHome","reportName","showRightNavButton","RouterActionTypes","Go","GO","Back","BACK","Forward","FORWARD","close","selectField","addReportField","RightSidebarComponent","selectRelatedField","expandRelatedField","searchFields","searchRelations","displayedColumnsField","nodes","isExpanded","searchInput","nativeElement","text","treeModel","filterNodes","startsWith","fieldDataSource","deepCopy","onExpand","onActivate","modelName","lockOpen","obj","copy","hasChildren","getTitleInput","getDisplayFieldsState","selectAllDisplayFields","selectDisplayFieldsCount","selectTotal","getDisplayFieldsCount","getFiltersState","selectAllFilters","selectFiltersCount","getFiltersCount","OptionsTabComponent","descriptionInput$","isChecked$","onChange","onClick","onDelete","FieldComponent","FilterActionTypes","RouterEffects","navigate$","query","extras","navigateBack$","back","navigateForward$","forward","routeChange$","Boolean","TabsComponent","displayFields$","filters$","activeTab$","formatOptions$","report$","hasChanged$","number","tabs","selectedIndex","tabChange","encapsulation","None","MainComponent","breakpointObserver","title$","fields$","relatedFields$","selectedReport$","selectedReportName$","rightNavIsOpen$","selectedField$","edited","mode","observe","Handset","TabletPortrait","matches","confirm","bool","sidenav","toggle","openNav","editTitle","toggleRightNav","beforeUnload","ApiService","http","apiUrl","get","post","put","GetReportList","SetReportList","GetReport","GetTitle","GetReportSuccess","GetReportFieldsSuccess","GetFields","GetFieldsSuccess","GetRelatedFields","GetRelatedFieldsSuccess","ChangeReportDescription","ChangeReportTitle","ToggleReportDistinct","DeleteReport","DeleteReportSuccess","EditReport","EditReportSuccess","EditReportFailure","GeneratePreview","GeneratePreviewSuccess","CancelGeneratePreview","ExportReport","DownloadExportedReport","CheckExportStatus","CancelExportReport","CreateReport","CreateReportSuccess","CreateReportError","CopyReport","ToggleRightNav","SortReports","SORT_REPORTS","ChangeTab","AddReportField","SelectField","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, throwError, EMPTY } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { State } from './reducers';\r\nimport { CancelGeneratePreview } from './actions/reports';\r\n\r\n@Injectable()\r\nexport class NetworkErrorInterceptor implements HttpInterceptor {\r\n  constructor(public snackBar: MatSnackBar, private store: Store<State>) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // Respect base URL tag\r\n    const baseUrl = document.getElementsByTagName('base')[0].href;\r\n    const apiReq = request.clone({ url: `${baseUrl}${request.url}` });\r\n\r\n    return next.handle(apiReq).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        if (err.status === 0 || err.status === 500) {\r\n          // An error we can't help with happened, one of:\r\n          // 1. Network error\r\n          // 2. Client side JS error\r\n          // 3. Server side 500 error\r\n          this.store.dispatch(new CancelGeneratePreview());\r\n          this.snackBar.open('Sorry, something went wrong!', '', {\r\n            duration: 5000,\r\n          });\r\n          return EMPTY;\r\n        }\r\n        return throwError(err.error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\r\nimport { Params, RouterStateSnapshot } from '@angular/router';\r\nimport {\r\n  routerReducer,\r\n  RouterReducerState,\r\n  RouterStateSerializer,\r\n} from '@ngrx/router-store';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { storeFreeze } from 'ngrx-store-freeze';\r\n\r\nimport { reducer as reportReducer } from './reducers/reports';\r\nimport { reducer as configReducer } from './reducers/config';\r\n\r\nimport { State as ReportsState } from './models/reports';\r\nimport { State as ConfigState } from './models/config';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\nexport interface State {\r\n  reports: ReportsState;\r\n  config: ConfigState;\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\n// https://github.com/ngrx/platform/blob/master/docs/router-store/api.md#custom-router-state-serializer\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const { url, root: { queryParams } } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  reports: reportReducer,\r\n  config: configReducer,\r\n  router: routerReducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production\r\n  ? [storeFreeze]\r\n  : [];\r\n","import { Action } from '@ngrx/store';\r\nimport { IConfig } from '../models/api';\r\n\r\nexport enum ConfigActionTypes {\r\n  GET_CONFIG = 'Get Config',\r\n  GET_CONFIG_SUCCESS = 'Get Config Success',\r\n}\r\n\r\nexport class GetConfig implements Action {\r\n  readonly type = ConfigActionTypes.GET_CONFIG;\r\n  constructor() {}\r\n}\r\n\r\nexport class GetConfigSuccess implements Action {\r\n  readonly type = ConfigActionTypes.GET_CONFIG_SUCCESS;\r\n  constructor(public payload: IConfig) {}\r\n}\r\nexport type ConfigActions = GetConfig | GetConfigSuccess;\r\n","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\r\nimport { IReport } from '../models/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../reducers';\r\nimport {\r\n  DeleteReport,\r\n  CopyReport,\r\n} from '../actions/reports';\r\nimport { getReports } from '../selectors';\r\nimport {\r\n  ConfirmModalComponent,\r\n  IConfirmModalData,\r\n} from '../confirm/confirm-modal.component';\r\nimport { Go } from '../actions/router';\r\n\r\ninterface IReportSortable extends IReport {\r\n  modifiedDate: Date;\r\n  sortName: string;\r\n}\r\n\r\nfunction modifiedStringToDate(report: IReport): IReportSortable {\r\n  return {\r\n    ...report,\r\n    modifiedDate: new Date(report.modified),\r\n    sortName: report.name.toLowerCase(),\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  displayedColumns = ['actions', 'name', 'user', 'date'];\r\n  dataSource = new MatTableDataSource<IReportSortable>();\r\n  listReports$ = this.store.select(getReports);\r\n  constructor(private store: Store<State>, public dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.listReports$.subscribe(\r\n      reports => (this.dataSource.data = reports.map(modifiedStringToDate))\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) => {\r\n      switch (sortHeaderId.toLowerCase()) {\r\n        case 'name':\r\n          return data.sortName;\r\n        case 'date':\r\n          return data.modified;\r\n        default:\r\n          return data[sortHeaderId];\r\n      }\r\n    };\r\n  }\r\n\r\n  deleteReport(report: IReport) {\r\n    const dialogRef = this.dialog.open(ConfirmModalComponent, {\r\n      data: {\r\n        title: `Are you sure you want to delete ${report.name}`,\r\n        subtitle: 'You will not be able to undo this action.',\r\n        confirmText: 'Delete',\r\n      } as IConfirmModalData,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.store.dispatch(new DeleteReport(report.id));\r\n      }\r\n    });\r\n  }\r\n\r\n  copyReport(reportId: number) {\r\n    this.store.dispatch(new CopyReport(reportId));\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  newReport(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.store.dispatch(new Go({ path: ['/report/add'] }));\r\n  }\r\n\r\n  openReport(event: MouseEvent, reportId: number) {\r\n    event.preventDefault();\r\n    this.store.dispatch(new Go({ path: ['/report/', reportId] }));\r\n  }\r\n}\r\n","<app-header [title]=\"'Welcome to Django Report Builder'\"></app-header>\r\n<mat-card>\r\n  <mat-card-title>Reports</mat-card-title>\r\n\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Search Reports\" (keyup)=\"applyFilter($event.currentTarget.value)\">\r\n  </mat-form-field>\r\n\r\n  <mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"name\" matSortDirection=\"asc\">\r\n    <ng-container matColumnDef=\"actions\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef>\r\n        <a href=\"/report/add\" (click)=\"newReport($event)\" mat-raised-button color=\"primary\" >\r\n          <mat-icon>add</mat-icon>\r\n          Add Report</a>\r\n      </mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\">\r\n        <a mat-icon-button (click)=\"copyReport(report.id)\" text-tr>\r\n          <mat-icon aria-label=\"Copy report\">content_copy</mat-icon>\r\n        </a>\r\n        <button mat-icon-button (click)=\"deleteReport(report)\">\r\n          <mat-icon aria-label=\"Delete report\">delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header>NAME</mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\">\r\n        <a href=\"/report/{{report.id}}\" (click)=\"openReport($event, report.id)\"> {{report.name}} </a>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"user\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header>USER</mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\"> {{report.user_created.first_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header>DATE</mat-header-cell>\r\n      <mat-cell class=\"reports-row\" *matCellDef=\"let report\"> {{report.modified | date:'yyyy-MM-dd'}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n\r\n  <div class=\"example-no-results\" [style.display]=\"dataSource?.filteredData.length == 0 ? '' : 'none'\">\r\n    No matches found.\r\n  </div>\r\n</mat-card>\r\n","import { State, displayFieldAdapter, filterAdapter } from '../models/reports';\r\nimport { INestedRelatedField, IReportErrors } from '../models/api';\r\nimport { ReportActionTypes, ReportActions } from '../actions/reports';\r\nimport {\r\n  DisplayFieldActions,\r\n  DisplayFieldActionTypes,\r\n} from '../actions/display-field';\r\nimport { FilterActions, FilterActionTypes } from '../actions/filter';\r\nimport * as selectors from '../selectors/reports';\r\n\r\nexport const initialState: State = {\r\n  reports: [],\r\n  selectedReport: null,\r\n  relatedFields: [],\r\n  fields: [],\r\n  title: '',\r\n  titleInput: '',\r\n  descriptionInput: '',\r\n  isDistinct: false,\r\n  rightNavIsOpen: false,\r\n  activeTab: 0,\r\n  displayFields: displayFieldAdapter.getInitialState(),\r\n  filters: filterAdapter.getInitialState(),\r\n  nextRelatedFieldId: 0,\r\n  generatingReport: false,\r\n  editedSinceLastSave: false,\r\n};\r\n\r\nexport function reducer(\r\n  state = initialState,\r\n  action: ReportActions | DisplayFieldActions | FilterActions\r\n): State {\r\n  switch (action.type) {\r\n    case ReportActionTypes.SET_REPORT_LIST: {\r\n      return {\r\n        ...state,\r\n        reports: action.payload,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_REPORT: {\r\n      // Reset report state when we start making a new request\r\n      // so the user never sees stale data\r\n      const {selectedReport, activeTab, descriptionInput, reportPreview} = initialState\r\n      return {\r\n        ...state,\r\n        selectedReport,\r\n        activeTab,\r\n        descriptionInput,\r\n        reportPreview\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_TITLE: {\r\n      return {\r\n        ...state,\r\n        title: action.payload,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.TOGGLE_RIGHT_NAV: {\r\n      let navOpen = !state.rightNavIsOpen;\r\n      if (state.activeTab === 2 || state.activeTab === 3) {\r\n        navOpen = false;\r\n      } else if (action.payload !== undefined) {\r\n        navOpen = action.payload;\r\n      }\r\n      return {\r\n        ...state,\r\n        rightNavIsOpen: navOpen,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_REPORT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        selectedReport: action.payload,\r\n        relatedFields: selectors.getRelatedFields(initialState),\r\n        fields: selectors.getFields(initialState),\r\n        descriptionInput: action.payload.description,\r\n        titleInput: action.payload.name,\r\n        isDistinct: action.payload.distinct,\r\n        editedSinceLastSave: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_REPORT_FIELDS_SUCCESS: {\r\n      let { nextRelatedFieldId } = state;\r\n      const selectedReport = selectors.getSelectedReport(state);\r\n\r\n      const rootRelatedField: INestedRelatedField = {\r\n        id: nextRelatedFieldId++,\r\n        children: action.payload.relatedFields.map(relatedField => {\r\n          const id = nextRelatedFieldId++;\r\n          return { ...relatedField, children: [], id };\r\n        }),\r\n        field_name: '',\r\n        verbose_name: selectedReport.root_model_name,\r\n        path: '',\r\n        help_text:\r\n          'The root model for this report: ' + selectedReport.root_model_name,\r\n        model_id: selectedReport.root_model,\r\n        parent_model_name: '',\r\n        parent_model_app_label: false,\r\n        included_model: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        relatedFields: [rootRelatedField],\r\n        fields: action.payload.fields,\r\n        nextRelatedFieldId,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_FIELDS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        fields: action.payload,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GET_RELATED_FIELDS_SUCCESS: {\r\n      let { nextRelatedFieldId } = state;\r\n      const relatedFields: INestedRelatedField[] = action.payload.relatedFields.map(\r\n        relatedField => {\r\n          const id = nextRelatedFieldId++;\r\n          return { ...relatedField, children: [], id };\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        nextRelatedFieldId,\r\n        relatedFields: selectors\r\n          .getRelatedFields(state)\r\n          .map(populateChildren(action.payload.parentId, relatedFields)),\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CHANGE_REPORT_DESCRIPTION: {\r\n      return {\r\n        ...state,\r\n        descriptionInput: action.payload,\r\n        editedSinceLastSave: true,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CHANGE_REPORT_TITLE: {\r\n      return {\r\n        ...state,\r\n        titleInput: action.payload,\r\n        editedSinceLastSave: true,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.TOGGLE_REPORT_DISTINCT: {\r\n      return {\r\n        ...state,\r\n        isDistinct:\r\n          action.payload !== undefined ? action.payload : !state.isDistinct,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.EDIT_REPORT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        selectedReport: action.payload,\r\n        descriptionInput: action.payload.description,\r\n        isDistinct: action.payload.distinct,\r\n        reportSaved: new Date(),\r\n        editedSinceLastSave: false,\r\n        errors: undefined,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.EDIT_REPORT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        errors: flatten(\r\n          Object.entries(action.payload).map(([tab, items]) => {\r\n            if (typeof items[0] === 'string') {\r\n              return (items as string[]).map(\r\n                e => `Your ${tab} field has the error: ${e}`\r\n              );\r\n            } else {\r\n              return (items as IReportErrors[]).map((item, i) =>\r\n                Object.entries(item).map(([itemName, errors]) =>\r\n                  (errors as string[]).map(\r\n                    e =>\r\n                      `In ${tab}, your ${i} field's ${itemName} has the error: ${e}`\r\n                  )\r\n                )\r\n              );\r\n            }\r\n          })\r\n        ),\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.EXPORT_REPORT: {\r\n      return {\r\n        ...state,\r\n        generatingReport: true,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CANCEL_EXPORT_REPORT: {\r\n      return {\r\n        ...state,\r\n        generatingReport: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.DOWNLOAD_EXPORTED_REPORT: {\r\n      return {\r\n        ...state,\r\n        generatingReport: false,\r\n        errors: undefined,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.GENERATE_PREVIEW: {\r\n      return { ...state, generatingReport: true };\r\n    }\r\n\r\n    case ReportActionTypes.GENERATE_PREVIEW_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        reportPreview: action.payload,\r\n        generatingReport: false,\r\n        errors: undefined,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CANCEL_GENERATE_PREVIEW: {\r\n      return {\r\n        ...state,\r\n        reportPreview: undefined,\r\n        generatingReport: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.DELETE_REPORT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        reports: state.reports.filter(r => r.id !== action.reportId),\r\n        selectedReport: selectors.getSelectedReport(initialState),\r\n        editedSinceLastSave: false,\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.DOWNLOAD_EXPORTED_REPORT: {\r\n      return {\r\n        ...state,\r\n        selectedReport: {\r\n          ...selectors.getSelectedReport(state),\r\n          report_file: action.payload,\r\n          report_file_creation: new Date().toISOString(),\r\n        },\r\n      };\r\n    }\r\n\r\n    case ReportActionTypes.CHANGE_TAB: {\r\n      return {\r\n        ...state,\r\n        activeTab: action.payload,\r\n      };\r\n    }\r\n\r\n    case DisplayFieldActionTypes.LOAD_ALL:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.addAll(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n      };\r\n\r\n    case DisplayFieldActionTypes.UPDATE_ONE:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.updateOne(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case DisplayFieldActionTypes.UPDATE_MANY:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.updateMany(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case DisplayFieldActionTypes.DELETE_ONE:\r\n      return {\r\n        ...state,\r\n        displayFields: displayFieldAdapter.removeOne(\r\n          action.payload,\r\n          selectors.getDisplayFieldsState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case FilterActionTypes.LOAD_ALL:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.addAll(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n      };\r\n\r\n    case FilterActionTypes.UPDATE_ONE:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.updateOne(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case FilterActionTypes.UPDATE_MANY:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.updateMany(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case FilterActionTypes.DELETE_ONE:\r\n      return {\r\n        ...state,\r\n        filters: filterAdapter.removeOne(\r\n          action.payload,\r\n          selectors.getFiltersState(state)\r\n        ),\r\n        editedSinceLastSave: true,\r\n      };\r\n\r\n    case ReportActionTypes.ADD_REPORT_FIELD: {\r\n      switch (selectors.getActiveTab(state)) {\r\n        case 0:\r\n          return {\r\n            ...state,\r\n            displayFields: displayFieldAdapter.addOne(\r\n              {\r\n                ...action.payload,\r\n                position: selectors.getDisplayFieldsCount(state),\r\n                report: selectors.getSelectedReportId(state),\r\n              },\r\n              selectors.getDisplayFieldsState(state)\r\n            ),\r\n            editedSinceLastSave: true,\r\n          };\r\n        case 1:\r\n          return {\r\n            ...state,\r\n            filters: filterAdapter.addOne(\r\n              {\r\n                ...action.payload,\r\n                position: selectors.getFiltersCount(state),\r\n                report: selectors.getSelectedReportId(state),\r\n                filter_type: 'exact',\r\n                filter_value: ''\r\n              },\r\n              selectors.getFiltersState(state)\r\n            ),\r\n            editedSinceLastSave: true,\r\n          };\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    }\r\n\r\n    case ReportActionTypes.SELECT_FIELD: {\r\n      return {\r\n        ...state,\r\n        selectedField: action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction populateChildren(parentId: number, children: INestedRelatedField[]) {\r\n  return function replaceField(\r\n    field: INestedRelatedField\r\n  ): INestedRelatedField {\r\n    const replacement = { ...field };\r\n    if (field.id === parentId) {\r\n      replacement.children = [...children].map(child => ({\r\n        ...child,\r\n        children: [],\r\n      }));\r\n    } else {\r\n      replacement.children = replacement.children.map(replaceField);\r\n    }\r\n    return replacement;\r\n  };\r\n}\r\n\r\nfunction flatten(items) {\r\n  const flat = [];\r\n\r\n  items.forEach(item => {\r\n    if (Array.isArray(item)) {\r\n      flat.push(...flatten(item));\r\n    } else {\r\n      flat.push(item);\r\n    }\r\n  });\r\n\r\n  return flat;\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { ConfigActionTypes, GetConfigSuccess } from '../actions/config';\r\nimport { ApiService } from '../api.service';\r\nimport { mergeMap, map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ConfigEffects {\r\n  constructor(private actions$: Actions, private api: ApiService) {}\r\n\r\n  @Effect()\r\n  getConfig$: Observable<Action> = this.actions$.pipe(\r\n    ofType(ConfigActionTypes.GET_CONFIG),\r\n    mergeMap(() =>\r\n      this.api.getConfig().pipe(map(response => new GetConfigSuccess(response)))\r\n    )\r\n  );\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IFilter } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\n\r\n@Component({\r\n  selector: 'app-filter-tab-row',\r\n  templateUrl: './filter-tab-row.component.html',\r\n  styles: [\r\n    `.mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `.mat-cell,\r\n.mat-header-cell {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  word-wrap: break-word;\r\n}`,\r\n  ],\r\n})\r\nexport class FilterTabRowComponent {\r\n  constructor() {}\r\n  @Input() filter: IFilter;\r\n  @Output() deleteFilter = new EventEmitter<number>();\r\n  @Output() updateFilter = new EventEmitter<Update<IFilter>>();\r\n\r\n  editFilter(changes) {\r\n    this.updateFilter.emit({ changes, id: this.filter.position });\r\n  }\r\n}\r\n","<div class=\"mat-row\">\r\n  <div class=\"mat-cell\">\r\n    <a mat-icon-button>\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </a>\r\n    <button mat-icon-button (click)=\"deleteFilter.emit(filter.position)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <span *ngIf=\"filter.path_verbose\">({{filter.path_verbose}})</span> {{filter.field_verbose}}\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <mat-select (selectionChange)=\"editFilter({filter_type: $event.value})\" [value]=\"filter.filter_type\">\r\n        <mat-option value=\"exact\">Equals</mat-option>\r\n        <mat-option value=\"iexact\">Equals (case-insensitive)</mat-option>\r\n        <mat-option value=\"contains\">Contains</mat-option>\r\n        <mat-option value=\"icontains\">Contains (case-insensitive)</mat-option>\r\n        <mat-option value=\"in\">in (comma seperated 1,2,3)</mat-option>\r\n        <mat-option value=\"gt\">Greater than</mat-option>\r\n        <mat-option value=\"gte\">Greater than equals</mat-option>\r\n        <mat-option value=\"lt\">Less than</mat-option>\r\n        <mat-option value=\"lte\">Less than equals</mat-option>\r\n        <mat-option value=\"startswith\">Starts with</mat-option>\r\n        <mat-option value=\"istartswith\">Starts with (case-insensitive)</mat-option>\r\n        <mat-option value=\"endswith\">Ends with</mat-option>\r\n        <mat-option value=\"iendswith\">Ends with (case-insensitive)</mat-option>\r\n        <mat-option value=\"range\">Range</mat-option>\r\n        <mat-option value=\"relative_range\" [disabled]=\"!(filter.field_type === 'DateField' || filter.field_type === 'DateTimeField')\">Relative Range</mat-option>\r\n        <mat-option value=\"week_day\">Week day</mat-option>\r\n        <mat-option value=\"isnull\">Is null</mat-option>\r\n        <mat-option value=\"regex\">Regular Expression</mat-option>\r\n        <mat-option value=\"iregex\">Reg. Exp. (case-insensitive)</mat-option>\r\n        <mat-option value=\"max\">Max (annotation-filter)</mat-option>\r\n        <mat-option value=\"min\">Min (annotation-filter)</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"mat-cell\">\r\n    <app-filter-input *ngIf=\"filter.filter_type!=='relative_range'\"\r\n                      [value]=\"filter.filter_value\"\r\n                      [fieldType]=\"filter.field_type\"\r\n                      [filterType]=\"filter.filter_type\"\r\n                      (valueChange)=\"editFilter({filter_value: $event})\"></app-filter-input>\r\n    <app-filter-input *ngIf=\"filter.filter_type==='relative_range'\"\r\n                      [value]=\"filter.filter_delta\"\r\n                      [unit]=\"filter.filter_value\"\r\n                      [filterType]=\"filter.filter_type\"\r\n                      (valueChange)=\"editFilter({filter_delta: $event})\"\r\n                      (unitChange)=\"editFilter({filter_value: $event})\"></app-filter-input>\r\n  </div>\r\n\r\n  <div class=\"mat-cell\">\r\n    <app-filter-input *ngIf=\"filter.filter_type==='range'\" [value]=\"filter.filter_value2\" [fieldType]=\"filter.field_type\" [filterType]=\"filter.filter_type\"\r\n      (valueChange)=\"editFilter({filter_value2: $event})\"></app-filter-input>\r\n  </div>\r\n\r\n  <div class=\"mat-cell\">\r\n    <mat-checkbox [checked]=\"filter.exclude\" (change)=\"editFilter({exclude: $event.checked })\" aria-label=\"Exclude?\"></mat-checkbox>\r\n  </div>\r\n\r\n</div>\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n})\r\nexport class ErrorComponent {\r\n  @Input() errors: string[];\r\n}\r\n","<mat-card *ngIf=\"errors\">\r\n  <mat-card-title>Error</mat-card-title>\r\n  <mat-card-content>\r\n    <p *ngFor=\"let error of errors\">{{error}}</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IDisplayField, IFormat } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\nimport { ITreeOptions, IActionMapping } from '@circlon/angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-display-tab',\r\n  templateUrl: './display-tab.component.html',\r\n  styles: [\r\n    `\r\n  .mat-table {\r\n    display: block;\r\n  }`,\r\n    `\r\n  .mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `\r\n  .mat-cell,\r\n  .mat-header-cell {\r\n    flex: 4;\r\n    overflow: hidden;\r\n    word-wrap: break-word;\r\n  }`,\r\n    `\r\n  .narrow {\r\n    flex: 1;\r\n  }`,\r\n  ],\r\n})\r\nexport class DisplayTabComponent {\r\n  constructor() {}\r\n  @Input() fields: IDisplayField[];\r\n  @Input() formatOptions: IFormat[];\r\n  @Input() hasChanged: boolean;\r\n  @Input() errors?: string[];\r\n  @Output() deleteField = new EventEmitter<number>();\r\n  @Output() updateField = new EventEmitter<Update<IDisplayField>>();\r\n  @Output() saveReport = new EventEmitter();\r\n  treeOptions: ITreeOptions = {\r\n    allowDrag: true,\r\n    allowDrop: (node, to) => !to.parent.parent,\r\n    idField: 'position',\r\n    actionMapping: {\r\n      mouse: {\r\n        drop: (tree, node, event, { from: { data }, to: { index } }) => {\r\n          const newPos = data.position > index ? index : index - 1\r\n          this.updateField.emit({\r\n            id: data.position,\r\n            changes: { position: newPos },\r\n          });\r\n        },\r\n      },\r\n    } as IActionMapping,\r\n  };\r\n}\r\n","<div class=\"mat-table tab-table-header\">\r\n  <div class=\"mat-header-row\">\r\n    <div class=\"mat-header-cell\">\r\n      <button [disabled]=\"!hasChanged\" mat-icon-button (click)=\"saveReport.emit()\">\r\n        <mat-icon>save</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"errors\" mat-icon-button [disabled]=\"true\" [matTooltipPosition]=\"'right'\" matTooltip=\"There were errors with your report! Check the report tab for more info\">\r\n        <mat-icon [color]=\"'warn'\">error</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"mat-header-cell\">Field</div>\r\n    <div class=\"mat-header-cell\">Name</div>\r\n    <div class=\"mat-header-cell narrow\">Sort</div>\r\n    <div class=\"mat-header-cell narrow\">Desc?</div>\r\n    <div class=\"mat-header-cell\">Aggregate</div>\r\n    <div class=\"mat-header-cell\">Format</div>\r\n    <div class=\"mat-header-cell narrow\">Total</div>\r\n    <div class=\"mat-header-cell narrow\">Group</div>\r\n  </div>\r\n  <tree-root [nodes]=\"fields\" [options]=\"treeOptions\">\r\n    <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\r\n      <div class=\"node-wrapper report-builder-display-grid\">\r\n        <app-display-tab-row [field]=\"node.data\" [formatOptions]=\"formatOptions\" (updateField)=\"updateField.emit($event)\" (deleteField)=\"deleteField.emit($event)\"\r\n          (click)=\"node.mouseAction('click', $event)\" (treeDrop)=\"node.onDrop($event)\" [treeAllowDrop]=\"node.allowDrop\" [treeDrag]=\"node\"\r\n          [treeDragEnabled]=\"node.allowDrag()\">\r\n        </app-display-tab-row>\r\n      </div>\r\n    </ng-template>\r\n  </tree-root>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../../../reducers';\r\nimport {\r\n  getPreview,\r\n  getLastSaved,\r\n  getLastGeneratedReport,\r\n  isGeneratingReport,\r\n  getErrors,\r\n  hasEditedSinceLastSave\r\n} from '../../../selectors';\r\nimport {\r\n  EditReport,\r\n  GeneratePreview,\r\n  ExportReport,\r\n} from '../../../actions/reports';\r\nimport { IExportType } from '../../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-report-tab',\r\n  template: `\r\n  <div class=\"app-report-tab\">\r\n    <div>\r\n      <button mat-button [disabled]=\"!(dirty$ | async)\" (click)=\"this.onSave()\">Save</button>\r\n      <button mat-button (click)=\"this.makePreview()\">Preview</button>\r\n      <button mat-button (click)=\"this.exportReport('xlsx')\">XLSX</button>\r\n      <button mat-button (click)=\"this.exportReport('csv')\">CSV</button>\r\n      <app-last-report *ngIf=\"lastGeneratedReport$ | async\" [report]=\"lastGeneratedReport$ | async\"></app-last-report>\r\n      <app-saved-timestamp [lastSaved]=\"this.lastSaved$ | async\" ></app-saved-timestamp>\r\n    </div>\r\n    <app-error [errors]=\"errors$ | async\"></app-error>\r\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isGeneratingReport$ | async\"></mat-progress-bar>\r\n    <div *ngIf=\"this.previewData$ | async\">\r\n      <app-report-preview [previewData]=\"this.previewData$ | async\" ></app-report-preview>\r\n    </div>\r\n  </div>\r\n  `,\r\n})\r\nexport class ReportTabComponent {\r\n  constructor(private store: Store<State>) {}\r\n  previewData$ = this.store.select(getPreview);\r\n  lastSaved$ = this.store.select(getLastSaved);\r\n  lastGeneratedReport$ = this.store.select(getLastGeneratedReport);\r\n  isGeneratingReport$ = this.store.select(isGeneratingReport);\r\n  errors$ = this.store.select(getErrors);\r\n  dirty$ = this.store.select(hasEditedSinceLastSave);\r\n\r\n  onSave() {\r\n    this.store.dispatch(new EditReport());\r\n  }\r\n\r\n  makePreview() {\r\n    this.store.dispatch(new GeneratePreview());\r\n  }\r\n\r\n  exportReport(type: IExportType) {\r\n    this.store.dispatch(new ExportReport(type));\r\n  }\r\n}\r\n","import {\r\n  IReport,\r\n  IReportDetailed,\r\n  INestedRelatedField,\r\n  IField,\r\n  IReportPreview,\r\n  IDisplayField,\r\n  IFilter,\r\n} from './api';\r\nimport {\r\n  createEntityAdapter,\r\n  EntityAdapter,\r\n  EntityState,\r\n  Update,\r\n} from '@ngrx/entity';\r\n\r\nexport interface State {\r\n  reports: IReport[];\r\n  selectedReport: IReportDetailed | null;\r\n  relatedFields: INestedRelatedField[];\r\n  fields: IField[];\r\n  title: string;\r\n  titleInput: string;\r\n  descriptionInput: string;\r\n  isDistinct: boolean;\r\n  reportPreview?: IReportPreview;\r\n  reportSaved?: Date;\r\n  rightNavIsOpen: boolean;\r\n  activeTab: number;\r\n  displayFields: EntityState<IDisplayField>;\r\n  filters: EntityState<IFilter>;\r\n  selectedField?: IField;\r\n  nextRelatedFieldId: number;\r\n  generatingReport: boolean;\r\n  editedSinceLastSave: boolean;\r\n  errors?: string[];\r\n}\r\n\r\ninterface IHasPosition {\r\n  position: number;\r\n}\r\n\r\nexport function createPositionEntityAdapter<\r\n  T extends IHasPosition\r\n>(): EntityAdapter<T> {\r\n  const adapter = createEntityAdapter<T>({\r\n    sortComparer: (x, y) => x.position - y.position,\r\n    selectId: x => x.position,\r\n  });\r\n\r\n  const selectors = adapter.getSelectors();\r\n\r\n  const result = {\r\n    ...adapter,\r\n  };\r\n\r\n  result.removeOne = (removedPos, state: EntityState<T>) => {\r\n    state = adapter.removeOne(removedPos, state);\r\n    return adapter.updateMany(\r\n      selectors.selectAll(state).reduce(\r\n        (updatelist, entity) => {\r\n          if (entity.position > removedPos) {\r\n            updatelist.push({\r\n              id: entity.position,\r\n              changes: {\r\n                position: entity.position - 1,\r\n              },\r\n            } as Update<T>);\r\n          }\r\n          return updatelist;\r\n        },\r\n        [] as Update<T>[]\r\n      ),\r\n      state\r\n    );\r\n  };\r\n\r\n  result.removeMany = (removedPositions, state) =>\r\n    removedPositions.reduce((s, pos) => result.removeOne(pos, s), state);\r\n\r\n  const getPositionUpdates = (\r\n    oldPosition: number,\r\n    newPosition: number,\r\n    state: EntityState<T>\r\n  ): Update<T>[] => {\r\n    const changedPositions = inclusiveRange(oldPosition, newPosition);\r\n    const isIncrease = oldPosition < newPosition;\r\n    return selectors.selectAll(state).reduce((col, entity) => {\r\n      if (changedPositions.includes(entity.position)) {\r\n        const update: Update<T> = {\r\n          id: entity.position,\r\n          changes: {},\r\n        };\r\n        if (entity.position === oldPosition) {\r\n          update.changes.position = newPosition;\r\n        } else if (isIncrease) {\r\n          update.changes.position = entity.position - 1;\r\n        } else {\r\n          update.changes.position = entity.position + 1;\r\n        }\r\n        return [...col, update];\r\n      } else {\r\n        return col;\r\n      }\r\n    }, []);\r\n  };\r\n\r\n  result.updateOne = (update, state) => {\r\n    if ('position' in update.changes) {\r\n      const updates = getPositionUpdates(\r\n        update.id as number,\r\n        update.changes.position,\r\n        state\r\n      );\r\n      if (Object.keys(update.changes).length === 1) {\r\n        return adapter.updateMany(updates, state);\r\n      }\r\n      update = {\r\n        ...update,\r\n        changes: Object.assign({}, update.changes),\r\n      };\r\n      delete update.changes.position;\r\n      return adapter.updateMany([update, ...updates], state);\r\n    } else {\r\n      return adapter.updateOne(update, state);\r\n    }\r\n  };\r\n\r\n  result.updateMany = (updates, state) =>\r\n    updates.reduce((s, update) => result.updateOne(update, s), state);\r\n\r\n  return result;\r\n}\r\n\r\nexport const displayFieldAdapter: EntityAdapter<\r\n  IDisplayField\r\n> = createPositionEntityAdapter<IDisplayField>();\r\n\r\nexport const filterAdapter: EntityAdapter<\r\n  IFilter\r\n> = createPositionEntityAdapter();\r\n\r\nfunction inclusiveRange(begin, end) {\r\n  const result = [];\r\n  for (let i = Math.min(begin, end); i <= Math.max(begin, end); i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n}\r\n","import { State } from '../models/config';\r\nexport const getIsAsyncReport = (state: State) => state.async_report;\r\nexport const getFormatOptions = (state: State) => state.formats;\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IReportPreview } from '../../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-report-preview',\r\n  template: `<table>\r\n    <thead><tr><td *ngFor=\"let header of previewData.meta.titles\">{{header}}</td></tr></thead>\r\n    <tbody><tr *ngFor=\"let row of previewData.data\"><td *ngFor=\"let cell of row\">{{cell}}</td></tr></tbody>\r\n  </table>`,\r\n})\r\nexport class ReportPreviewComponent {\r\n  constructor() {}\r\n  @Input() previewData?: IReportPreview;\r\n}\r\n","import { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nexport interface ComponentCanDeactivate {\r\n  canDeactivate: () => boolean | Observable<boolean>;\r\n}\r\n\r\n@Injectable()\r\nexport class PendingChangesGuard\r\n  implements CanDeactivate<ComponentCanDeactivate> {\r\n  canDeactivate(\r\n    component: ComponentCanDeactivate\r\n  ): boolean | Observable<boolean> {\r\n    return component.canDeactivate();\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-SG\": \"zavE\",\n\t\"./en-SG.js\": \"zavE\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IDisplayField, IFormat } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\n\r\n@Component({\r\n  selector: 'app-display-tab-row',\r\n  templateUrl: './display-tab-row.component.html',\r\n  styles: [\r\n    `\r\n  .mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `\r\n  .mat-cell,\r\n  .mat-header-cell {\r\n    flex: 4;\r\n    overflow: hidden;\r\n    word-wrap: break-word;\r\n  }`,\r\n    `\r\n  .narrow {\r\n    flex: 1;\r\n  }`,\r\n  ],\r\n})\r\nexport class DisplayTabRowComponent {\r\n  constructor() {}\r\n  @Input() field: IDisplayField;\r\n  @Input() formatOptions: IFormat[];\r\n  @Output() deleteField = new EventEmitter<number>();\r\n  @Output() updateField = new EventEmitter<Update<IDisplayField>>();\r\n\r\n  editField(changes) {\r\n    this.updateField.emit({ changes, id: this.field.position });\r\n  }\r\n}\r\n","<div class=\"mat-row\">\r\n  <div class=\"mat-cell\">\r\n    <a mat-icon-button disableRipple>\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </a>\r\n    <button mat-icon-button (click)=\"deleteField.emit(field.position)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"mat-cell\">{{field.field_verbose}} [{{field.field_type}}]</div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <input matInput value=\"{{field.name}}\" (keyup)=\"editField({name: $event.currentTarget.value})\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-form-field>\r\n      <input matInput value=\"{{field.sort}}\" (keyup)=\"editField({sort: $event.currentTarget.value})\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-checkbox [checked]=\"field.sort_reverse\" (change)=\"editField({sort_reverse: $event.checked })\"></mat-checkbox>\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <mat-select (selectionChange)=\"editField({aggregate: $event.value})\" [value]=\"field.aggregate || ''\">\r\n        <mat-option value=\"\">----------</mat-option>\r\n        <mat-option value=\"Sum\">Sum</mat-option>\r\n        <mat-option value=\"Count\">Count</mat-option>\r\n        <mat-option value=\"Avg\">Avg</mat-option>\r\n        <mat-option value=\"Max\">Max</mat-option>\r\n        <mat-option value=\"Min\">Min</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell\">\r\n    <mat-form-field>\r\n      <mat-select (selectionChange)=\"editField({display_format: $event.value})\" [value]=\"field.display_format ? field.display_format.toString() : ''\">\r\n        <mat-option value=\"\">----------</mat-option>\r\n        <mat-option *ngFor=\"let format of formatOptions\" value=\"{{format.id}}\">{{format.name}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-checkbox [checked]=\"field.total\" (change)=\"editField({total: $event.checked })\"></mat-checkbox>\r\n  </div>\r\n  <div class=\"mat-cell narrow\">\r\n    <mat-checkbox [checked]=\"field.group\" (change)=\"editField({group: $event.checked })\"></mat-checkbox>\r\n  </div>\r\n</div>\r\n","import { State } from './reducers';\r\nimport { createSelector } from '@ngrx/store';\r\nimport * as reportSelectors from './selectors/reports';\r\nimport * as configSelectors from './selectors/config';\r\n\r\nconst getConfigState = (state: State) => state.config;\r\nexport const getIsAsyncReport = createSelector(\r\n  getConfigState,\r\n  configSelectors.getIsAsyncReport\r\n);\r\nexport const getFormatOptions = createSelector(\r\n  getConfigState,\r\n  configSelectors.getFormatOptions\r\n);\r\n\r\nconst getReportsState = (state: State) => state.reports;\r\nexport const getReports = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getReports\r\n);\r\nexport const getSelectedReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedReport\r\n);\r\nexport const getSelectedReportId = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedReportId\r\n);\r\nexport const getSelectedReportName = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedReportName\r\n);\r\nexport const getFields = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getFields\r\n);\r\nexport const getTitle = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getTitle\r\n);\r\nexport const getRightNavIsOpen = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getRightNavIsOpen\r\n);\r\nexport const getRelatedFields = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getRelatedFields\r\n);\r\nexport const getDescriptionInput = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getDescriptionInput\r\n);\r\nexport const getIsDistinct = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getIsDistinct\r\n);\r\nexport const getEditedReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getEditedReport\r\n);\r\nexport const getPreview = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getPreview\r\n);\r\nexport const getLastSaved = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getLastSaved\r\n);\r\nexport const getNewReportInfo = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getNewReportInfo\r\n);\r\nexport const getLastGeneratedReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getLastGeneratedReport\r\n);\r\nexport const getActiveTab = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getActiveTab\r\n);\r\nexport const getDisplayFields = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getDisplayFields\r\n);\r\nexport const getFilters = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getFilters\r\n);\r\nexport const getSelectedField = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getSelectedField\r\n);\r\nexport const isGeneratingReport = createSelector(\r\n  getReportsState,\r\n  reportSelectors.isGeneratingReport\r\n);\r\nexport const hasEditedSinceLastSave = createSelector(\r\n  getReportsState,\r\n  reportSelectors.hasEditedSinceLastSave\r\n);\r\nexport const getErrors = createSelector(\r\n  getReportsState,\r\n  reportSelectors.getErrors\r\n);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from './reducers';\r\nimport { GetConfig } from './actions/config';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private store: Store<State>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new GetConfig());\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IFilter } from '../../../models/api';\r\nimport { Update } from '@ngrx/entity';\r\nimport { ITreeOptions, IActionMapping } from '@circlon/angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-filter-tab',\r\n  templateUrl: './filter-tab.component.html',\r\n  styles: [\r\n    `.mat-table {\r\n    display: block;\r\n  }`,\r\n    `.mat-row,\r\n  .mat-header-row {\r\n    display: flex;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    align-items: center;\r\n    min-height: 48px;\r\n    padding: 0 24px;\r\n  }`,\r\n    `.mat-cell,\r\n.mat-header-cell {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  word-wrap: break-word;\r\n}`,\r\n  ],\r\n})\r\nexport class FilterTabComponent {\r\n  constructor() {}\r\n  @Input() filters: IFilter[];\r\n  @Input() hasChanged: boolean;\r\n  @Input() errors?: string[];\r\n  @Output() deleteFilter = new EventEmitter<number>();\r\n  @Output() updateFilter = new EventEmitter<Update<IFilter>>();\r\n  @Output() saveReport = new EventEmitter();\r\n  @Output()\r\n  moveFilter = new EventEmitter<{\r\n    payload: IFilter;\r\n    newPosition: number;\r\n  }>();\r\n  treeOptions: ITreeOptions = {\r\n    allowDrag: true,\r\n    allowDrop: (node, to) => !to.parent.parent,\r\n    idField: 'position',\r\n    actionMapping: {\r\n      mouse: {\r\n        drop: (tree, node, event, { from: { data }, to: { index } }) => {\r\n          this.updateFilter.emit({\r\n            id: data.position,\r\n            changes: { position: index },\r\n          });\r\n        },\r\n      },\r\n    } as IActionMapping,\r\n  };\r\n}\r\n","<div class=\"mat-table tab-table-header \">\r\n  <div class=\"mat-header-row\">\r\n    <div class=\"mat-header-cell\">\r\n      <button mat-icon-button [disabled]=\"!hasChanged\" (click)=\"saveReport.emit()\">\r\n        <mat-icon>save</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"errors\" mat-icon-button [disabled]=\"true\" [matTooltipPosition]=\"'right'\" matTooltip=\"There were errors with your report! Check the report tab for more info\">\r\n        <mat-icon [color]=\"'warn'\">error</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"mat-header-cell\">Field</div>\r\n    <div class=\"mat-header-cell\">Filter Type</div>\r\n    <div class=\"mat-header-cell\">Values</div>\r\n    <div class=\"mat-header-cell\"></div>\r\n    <div class=\"mat-header-cell\">Exclude</div>\r\n  </div>\r\n  <tree-root [nodes]=\"filters\" [options]=\"treeOptions\">\r\n    <ng-template #treeNodeWrapperTemplate let-node let-index=\"index\">\r\n      <div class=\"node-wrapper report-builder-display-grid\">\r\n        <app-filter-tab-row [filter]=\"node.data\" (updateFilter)=\"updateFilter.emit($event)\" (deleteFilter)=\"deleteFilter.emit($event)\"\r\n          (click)=\"node.mouseAction('click', $event)\" (treeDrop)=\"node.onDrop($event)\" [treeAllowDrop]=\"node.allowDrop\" [treeDrag]=\"node\"\r\n          [treeDragEnabled]=\"node.allowDrag()\"></app-filter-tab-row>\r\n      </div>\r\n    </ng-template>\r\n  </tree-root>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { ApiService } from '../api.service';\r\nimport { INewReport } from '../models/api';\r\nimport { State } from '../reducers';\r\nimport { CreateReport } from '../actions/reports';\r\n\r\n@Component({\r\n  selector: 'app-new-report',\r\n  templateUrl: './new-report.component.html',\r\n  styleUrls: ['./new-report.component.css'],\r\n})\r\nexport class NewReportComponent implements OnInit {\r\n  errors: string[] = [];\r\n\r\n  root_model_choices$ = this.api.getRootModels().pipe(\r\n    map(models => {\r\n      this.errors = [];\r\n      return models.sort((x, y) =>\r\n        x.name === y.name ? 0 : x.name > y.name ? 1 : -1\r\n      );\r\n    }),\r\n    catchError(err => {\r\n      if ('detail' in err) {\r\n        this.errors = [err.detail];\r\n      } else {\r\n        this.errors = ['Unable to fetch models from Django'];\r\n      }\r\n      return EMPTY;\r\n    })\r\n  );\r\n  form: INewReport;\r\n\r\n  constructor(private store: Store<State>, private api: ApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.form = {\r\n      name: '',\r\n      description: '',\r\n      root_model: null,\r\n    };\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.name.trim() && this.form.root_model) {\r\n      this.store.dispatch(new CreateReport(this.form));\r\n    }\r\n  }\r\n}\r\n","<div class=\"form-container\">\r\n  <mat-card class=\"report-form\">\r\n    <mat-card-title class=\"report-title\">Add New Report</mat-card-title>\r\n\r\n    <app-error *ngIf=\"errors.length\" [errors]=\"errors\"></app-error>\r\n\r\n    <form (ngSubmit)=\"submit()\" #reportForm=\"ngForm\" class=\"container\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          placeholder=\"Report Name\"\r\n          [(ngModel)]=\"form.name\"\r\n          name=\"name\"\r\n          required\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          placeholder=\"Description\"\r\n          [(ngModel)]=\"form.description\"\r\n          name=\"description\"\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-select\r\n          placeholder=\"Root Model\"\r\n          [(ngModel)]=\"form.root_model\"\r\n          name=\"root_model\"\r\n          required\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let model of root_model_choices$ | async\"\r\n            [value]=\"model.pk\"\r\n          >\r\n            {{ model.name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <br />\r\n      <br />\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        [disabled]=\"!form.name.trim() || !form.root_model\"\r\n      >\r\n        Create Report\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface IConfirmModalData {\r\n  title: string;\r\n  subtitle: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirm-modal',\r\n  templateUrl: './confirm-modal.component.html',\r\n})\r\nexport class ConfirmModalComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IConfirmModalData\r\n  ) {}\r\n}\r\n","<h1 mat-dialog-title>{{data.title}}</h1>\r\n<div mat-dialog-content>\r\n  <p>{{data.subtitle}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"dialogRef.close()\">{{data.cancelText || 'Cancel'}}</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>{{data.confirmText || 'Confirm'}}</button>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\n// Delete when you switch to a real datetime picker\r\ninterface IDateTimeOption {\r\n  display: string;\r\n  value: string;\r\n}\r\n\r\ninterface IRangeOption {\r\n  display: string;\r\n  value: string;\r\n  multiplier: number;\r\n}\r\n\r\n// this code is ugly and Dog willing can be deleted when Angular Material adds a datetime input\r\n// until that day I will describe what it does in comments because it's real imperative\r\nconst timeOpts: IDateTimeOption[] = [];\r\nfor (let x = 0; x < 24; x += 0.5) {\r\n  // go through numbers from 0.0 to 23.5\r\n  const hour = Math.floor(x); // ignore the decimal to get the hour\r\n  const displayHour = hour % 12 === 0 ? '12' : String(hour % 12); // display 12-hour clock times\r\n  const valueHour = hour < 10 ? '0' + hour : String(hour); // use two digit 24-hour clock times for the value\r\n  const ampm = hour < 12 ? 'AM' : 'PM'; // before noon display AM, after PM\r\n  const _minutes = x === Math.floor(x) ? '00' : '30'; // 0.0 = on the hour, 0.5 = on the half hour\r\n\r\n  timeOpts.push({\r\n    display: `${displayHour}:${_minutes} ${ampm}`,\r\n    value: `${valueHour}:${_minutes}`,\r\n  } as IDateTimeOption);\r\n}\r\n\r\nconst rangeUnitOpts: IRangeOption[] = [];\r\n\r\nconst days = 'days';\r\nconst hours = 'hours';\r\nconst minutes = 'minutes';\r\nconst seconds = 'seconds';\r\n\r\nconst options = [days, hours, minutes, seconds];\r\nconst multipliers = [24 * 60 * 60, 60 * 60, 60, 1];\r\nfor (let i = 0; i < options.length; i++) {\r\n  rangeUnitOpts.push({\r\n    display: `${options[i]} ago`,\r\n    value: `${options[i]}`,\r\n    multiplier: multipliers[i],\r\n  } as IRangeOption);\r\n}\r\n\r\n@Component({\r\n  selector: 'app-filter-input',\r\n  templateUrl: './filter-input.component.html',\r\n})\r\nexport class FilterInputComponent implements OnChanges {\r\n  @Input() value: string;\r\n  @Input() unit: string;\r\n  @Input() filterType: string;\r\n  @Input() fieldType: string;\r\n  @Output() valueChange = new EventEmitter<any>();\r\n  @Output() unitChange = new EventEmitter<string>();\r\n  date?: string;\r\n  time?: string;\r\n  timeOpts = timeOpts;\r\n  range?: string;\r\n  rangeUnit?: string;\r\n  rangeUnitOpts = rangeUnitOpts;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (/Date/.test(this.fieldType)) {\r\n      const [date, time] = this.value.split(' ');\r\n      this.date = date;\r\n      this.time = time;\r\n    }\r\n    if (changes.filterType && /^(?:isnull|max|min)$/.test(changes.filterType.currentValue) && this.value.length === 0 ) {\r\n      // settimeout is a hack because we probably shouldn't be emitting inside of ngOnChanges. Eventually this should be moved to some kind of serializer\r\n      setTimeout(() => this.emitBoolean(false), 0)\r\n    }\r\n    if (this.filterType === 'relative_range') {\r\n      this.rangeUnit = options.includes(this.unit) ? this.unit : seconds;\r\n      this.range = (this.getNumber(this.value) / this.getMultiplier()).toString();\r\n    }\r\n  }\r\n\r\n  getBoolean() {\r\n    return this.value === 'True';\r\n  }\r\n\r\n  emitBoolean(value: boolean) {\r\n    this.valueChange.emit(value ? 'True' : 'False');\r\n  }\r\n\r\n  onDateChange(date: string) {\r\n    this.date = date;\r\n    this.emitDateTime();\r\n  }\r\n\r\n  onTimeChange(time) {\r\n    this.time = time;\r\n    this.emitDateTime();\r\n  }\r\n\r\n  emitDateTime() {\r\n    let result = this.date;\r\n    if (this.fieldType === 'DateTimeField') {\r\n      result += ' ' + (this.time || '00:00');\r\n    }\r\n    this.valueChange.emit(result);\r\n  }\r\n\r\n  getNumber(s: string) {\r\n    const n = parseInt(s, 10);\r\n    return isNaN(n) ? 0 : Math.abs(n);\r\n  }\r\n\r\n  getMultiplier() {\r\n    const option = this.rangeUnitOpts.find(_option => _option.value === this.rangeUnit);\r\n    return option ? option.multiplier : 1;\r\n  }\r\n\r\n  onRangeChange(range: string) {\r\n    this.range = this.getNumber(range).toString();\r\n    this.emitRange();\r\n  }\r\n\r\n  onRangeUnitChange(unit: string) {\r\n    this.rangeUnit = unit;\r\n    this.unitChange.emit(unit);\r\n    this.emitRange();\r\n  }\r\n\r\n  emitRange() {\r\n    // we need to make seconds negative for the API\r\n    const _seconds = -this.getNumber(this.range) * this.getMultiplier();\r\n    this.valueChange.emit(_seconds);\r\n  }\r\n}\r\n","<div [ngSwitch]=\"filterType\">\r\n  <mat-form-field *ngSwitchCase=\"'week_day'\">\r\n    <mat-select (selectionChange)=\"valueChange.emit($event.value)\" [value]=\"value\">\r\n      <mat-option value=\"1\">Sunday</mat-option>\r\n      <mat-option value=\"2\">Monday</mat-option>\r\n      <mat-option value=\"3\">Tuesday</mat-option>\r\n      <mat-option value=\"4\">Wednesday</mat-option>\r\n      <mat-option value=\"5\">Thursday</mat-option>\r\n      <mat-option value=\"6\">Friday</mat-option>\r\n      <mat-option value=\"7\">Saturday</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <div *ngSwitchCase=\"'isnull'\">\r\n    <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\" arial-label=\"Is Null\"></mat-checkbox>\r\n  </div>\r\n\r\n  <div *ngSwitchCase=\"'max'\">\r\n    <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\" arial-label=\"Max (annotation-filter)\"></mat-checkbox>\r\n  </div>\r\n\r\n  <div *ngSwitchCase=\"'min'\">\r\n    <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\" arial-label=\"Min (annotation-filter)\"></mat-checkbox>\r\n  </div>\r\n\r\n  <div *ngSwitchCase=\"'relative_range'\">\r\n    <mat-form-field>\r\n      <input matInput value=\"{{ range }}\" (keyup)=\"onRangeChange($event.currentTarget.value)\" type=\"number\"\r\n             oninput=\"if (isNaN(parseInt(this.value))) this.value = 0; else this.value = parseInt(this.value);\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-select [value]=\"rangeUnit\" (selectionChange)=\"onRangeUnitChange($event.value)\">\r\n        <mat-option *ngFor=\"let option of rangeUnitOpts\" [value]=\"option.value\">\r\n          {{ option.display }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div *ngSwitchDefault [ngSwitch]=\"fieldType\">\r\n\r\n    <mat-form-field *ngSwitchCase=\"'DateField'\">\r\n      <input matInput [matDatepicker]=\"picker\" [value]=\"date\" (dateChange)=\"onDateChange($event.value.format('YYYY-MM-DD'))\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <div *ngSwitchCase=\"'DateTimeField'\">\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"picker\" [value]=\"date\" (dateChange)=\"onDateChange($event.value.format('YYYY-MM-DD'))\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-select [value]=\"time\" (selectionChange)=\"onTimeChange($event.value)\">\r\n          <mat-option *ngFor=\"let option of timeOpts\" [value]=\"option.value\">\r\n            {{option.display}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'BooleanField'\">\r\n      <mat-checkbox [checked]=\"getBoolean()\" (change)=\"emitBoolean($event.checked)\"></mat-checkbox>\r\n    </div>\r\n\r\n    <mat-form-field *ngSwitchDefault>\r\n      <input matInput value=\"{{value}}\" (keyup)=\"valueChange.emit($event.currentTarget.value)\">\r\n    </mat-form-field>\r\n\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  HttpClientModule,\r\n  HttpClientXsrfModule,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TreeModule } from '@circlon/angular-tree-component';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport {\r\n  StoreRouterConnectingModule,\r\n  RouterStateSerializer, DefaultRouterStateSerializer,\r\n} from '@ngrx/router-store';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NewReportComponent } from './new-report/new-report.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MainComponent } from './main/main.component';\r\n\r\nimport { ApiService } from './api.service';\r\n\r\nimport { reducers, metaReducers, CustomSerializer } from './reducers';\r\nimport { ReportEffects } from './effects/reports';\r\nimport { ConfigEffects } from './effects/config';\r\nimport { RouterEffects } from './effects/router';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ConfirmModalComponent } from './confirm/confirm-modal.component';\r\nimport { TabsComponent } from './main/tabs/tabs.component';\r\nimport { OptionsTabComponent } from './main/tabs/options-tab/options-tab.component';\r\nimport { ReportTabComponent } from './main/tabs/report-tab/report-tab.component';\r\nimport { ReportPreviewComponent } from './main/tabs/report-tab/report-preview.component';\r\nimport { SavedTimestampComponent } from './main/tabs/report-tab/saved-timestamp.component';\r\nimport { LastReportComponent } from './main/tabs/report-tab/last-report.component';\r\nimport { DisplayTabComponent } from './main/tabs/display-tab/display-tab.component';\r\nimport { DisplayTabRowComponent } from './main/tabs/display-tab/display-tab-row.component';\r\nimport { FilterTabComponent } from './main/tabs/filter-tab/filter-tab.component';\r\nimport { FilterTabRowComponent } from './main/tabs/filter-tab/filter-tab-row.component';\r\nimport { RightSidebarComponent } from './main/right-sidebar/right-sidebar.component';\r\nimport { FieldComponent } from './main/right-sidebar/field.component';\r\nimport { ClickOutsideModule } from 'ng4-click-outside';\r\nimport { PendingChangesGuard } from './generic.guard';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { NetworkErrorInterceptor } from './api.interceptor';\r\nimport { FilterInputComponent } from './main/tabs/filter-tab/filter-input.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent, data: { title: 'Reports' } },\r\n  {\r\n    path: 'report/add',\r\n    component: NewReportComponent,\r\n    data: { title: 'Add New Report' },\r\n  },\r\n  {\r\n    path: 'report/:id',\r\n    component: MainComponent,\r\n    data: { title: 'Report' },\r\n    canDeactivate: [PendingChangesGuard],\r\n  },\r\n];\r\n\r\nexport const MatModules = [\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMomentDateModule,\r\n  MatProgressBarModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTabsModule,\r\n  MatTableModule,\r\n  LayoutModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NewReportComponent,\r\n    HomeComponent,\r\n    MainComponent,\r\n    HeaderComponent,\r\n    ConfirmModalComponent,\r\n    TabsComponent,\r\n    OptionsTabComponent,\r\n    LastReportComponent,\r\n    ReportTabComponent,\r\n    ReportPreviewComponent,\r\n    SavedTimestampComponent,\r\n    DisplayTabComponent,\r\n    DisplayTabRowComponent,\r\n    FilterTabComponent,\r\n    FilterTabRowComponent,\r\n    FilterInputComponent,\r\n    RightSidebarComponent,\r\n    FieldComponent,\r\n    ErrorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    ClickOutsideModule,\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    RouterModule.forRoot(appRoutes),\r\n    StoreRouterConnectingModule.forRoot({ serializer: DefaultRouterStateSerializer,\r\n      stateKey: 'router',\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    EffectsModule.forRoot([ReportEffects, ConfigEffects, RouterEffects]),\r\n    HttpClientModule,\r\n    TreeModule,\r\n    MatSortModule,\r\n    HttpClientXsrfModule.withOptions({\r\n      cookieName: 'csrftoken',\r\n      headerName: 'X-CSRFToken',\r\n    }),\r\n    FormsModule,\r\n    ...MatModules,\r\n  ],\r\n  providers: [\r\n    ApiService,\r\n    { provide: RouterStateSerializer, useClass: CustomSerializer },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NetworkErrorInterceptor,\r\n      multi: true,\r\n    },\r\n    PendingChangesGuard,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ConfirmModalComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Action } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { IDisplayField } from '../models/api';\r\n\r\nexport enum DisplayFieldActionTypes {\r\n  LOAD_ALL = '[Display Fields] Load All',\r\n  UPDATE_ONE = '[Display Fields] Update One',\r\n  UPDATE_MANY = '[Display Fields] Update Many',\r\n  DELETE_ONE = '[Display Fields] Delete One',\r\n}\r\n\r\nexport class LoadAll implements Action {\r\n  readonly type = DisplayFieldActionTypes.LOAD_ALL;\r\n  constructor(public payload: IDisplayField[]) {}\r\n}\r\n\r\nexport class UpdateOne implements Action {\r\n  readonly type = DisplayFieldActionTypes.UPDATE_ONE;\r\n  constructor(public payload: Update<IDisplayField>) {}\r\n}\r\n\r\nexport class UpdateMany implements Action {\r\n  readonly type = DisplayFieldActionTypes.UPDATE_MANY;\r\n  constructor(public payload: Update<IDisplayField>[]) {}\r\n}\r\n\r\nexport class DeleteOne implements Action {\r\n  readonly type = DisplayFieldActionTypes.DELETE_ONE;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport type DisplayFieldActions = LoadAll | UpdateOne | UpdateMany | DeleteOne;\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, Input } from '@angular/core';\r\n\r\ninterface ReportInput {\r\n  report_file: string;\r\n  report_file_creation: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-last-report',\r\n  template: `\r\n  <a mat-button href=\"{{ report.report_file }}\" matTooltip=\"Download report generated at {{ report.report_file_creation }}\">\r\n    <mat-icon>file_download</mat-icon>Download\r\n  </a>`,\r\n})\r\nexport class LastReportComponent {\r\n  @Input() report: ReportInput;\r\n\r\n  constructor() {}\r\n}\r\n","import { Observable, forkJoin, of, asyncScheduler } from 'rxjs';\r\nimport {\r\n  map,\r\n  mergeMap,\r\n  tap,\r\n  withLatestFrom,\r\n  catchError,\r\n  delay,\r\n} from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\n\r\nimport { ApiService } from '../api.service';\r\nimport * as fromReports from '../actions/reports';\r\nimport * as fromDisplay from '../actions/display-field';\r\nimport * as fromFilter from '../actions/filter';\r\nimport { IGetRelatedFieldRequest } from '../models/api';\r\nimport { State } from '../reducers';\r\nimport {\r\n  getEditedReport,\r\n  getSelectedReportId,\r\n  getIsAsyncReport,\r\n} from '../selectors';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nconst { ReportActionTypes } = fromReports;\r\n\r\n@Injectable()\r\nexport class ReportEffects {\r\n  @Effect()\r\n  getReports$: Observable<Action> = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_REPORT_LIST),\r\n    mergeMap(() =>\r\n      this.api\r\n        .getReports()\r\n        .pipe(map(reports => new fromReports.SetReportList(reports)))\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store$: Store<State>,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    public snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  @Effect()\r\n  getReport$: Observable<Action> = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_REPORT),\r\n    map((action: fromReports.GetReport) => action.payload),\r\n    mergeMap(reportId =>\r\n      this.api\r\n        .getReport(reportId)\r\n        .pipe(map(report => new fromReports.GetReportSuccess(report)))\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadDisplayFields$ = this.actions$.pipe(\r\n    ofType(\r\n      ReportActionTypes.GET_REPORT_SUCCESS,\r\n      ReportActionTypes.EDIT_REPORT_SUCCESS\r\n    ),\r\n    map(\r\n      (action: fromReports.GetReportSuccess | fromReports.EditReportSuccess) =>\r\n        new fromDisplay.LoadAll(action.payload.displayfield_set)\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadFilterFields$ = this.actions$.pipe(\r\n    ofType(\r\n      ReportActionTypes.GET_REPORT_SUCCESS,\r\n      ReportActionTypes.EDIT_REPORT_SUCCESS\r\n    ),\r\n    map(\r\n      (action: fromReports.GetReportSuccess | fromReports.EditReportSuccess) =>\r\n        new fromFilter.LoadAll(action.payload.filterfield_set)\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  getReportSuccess$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_REPORT_SUCCESS),\r\n    map((action: fromReports.GetReportSuccess) => action.payload),\r\n    mergeMap(report => {\r\n      const request: IGetRelatedFieldRequest = {\r\n        model: report.root_model,\r\n        path: '',\r\n        field: '',\r\n      };\r\n      return forkJoin(\r\n        this.api.getRelatedFields(request),\r\n        this.api.getFields(request)\r\n      ).pipe(\r\n        map(\r\n          ([relatedFields, fields]) =>\r\n            new fromReports.GetReportFieldsSuccess({ relatedFields, fields })\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  getFields$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_FIELDS),\r\n    map((action: fromReports.GetFields) => action.payload),\r\n    mergeMap(relatedField => {\r\n      const fieldReq: IGetRelatedFieldRequest = {\r\n        model: relatedField.model_id,\r\n        path: relatedField.path,\r\n        field: relatedField.field_name,\r\n      };\r\n      return this.api\r\n        .getFields(fieldReq)\r\n        .pipe(map(fields => new fromReports.GetFieldsSuccess(fields)));\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  getRelatedFields$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GET_RELATED_FIELDS),\r\n    map((action: fromReports.GetRelatedFields) => action.payload),\r\n    mergeMap(relatedField => {\r\n      const fieldReq: IGetRelatedFieldRequest = {\r\n        model: relatedField.model_id,\r\n        path: relatedField.path,\r\n        field: relatedField.field_name,\r\n      };\r\n      return this.api.getRelatedFields(fieldReq).pipe(\r\n        map(\r\n          fields =>\r\n            new fromReports.GetRelatedFieldsSuccess({\r\n              parentId: relatedField.id,\r\n              relatedFields: fields,\r\n            })\r\n        )\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  deleteReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.DELETE_REPORT),\r\n    map((action: fromReports.DeleteReport) => action.payload),\r\n    mergeMap(reportId => {\r\n      return this.api\r\n        .deleteReport(reportId)\r\n        .pipe(map(() => new fromReports.DeleteReportSuccess(reportId)));\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  deleteReportSuccess$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.DELETE_REPORT_SUCCESS),\r\n    tap(_ => this.router.navigate(['']))\r\n  );\r\n\r\n  @Effect()\r\n  editReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.EDIT_REPORT),\r\n    withLatestFrom(this.store$),\r\n    mergeMap(([_, storeState]) => {\r\n      const editedReport = getEditedReport(storeState);\r\n      return this.api.editReport(editedReport).pipe(\r\n        map(response => new fromReports.EditReportSuccess(response)),\r\n        catchError(error => of(new fromReports.EditReportFailure(error)))\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  generatePreview$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.GENERATE_PREVIEW),\r\n    withLatestFrom(this.store$),\r\n    mergeMap(([_, storeState]) => {\r\n      const reportId = getSelectedReportId(storeState);\r\n      return this.api\r\n        .generatePreview(reportId)\r\n        .pipe(\r\n          map(response => new fromReports.GeneratePreviewSuccess(response))\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  exportReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.EXPORT_REPORT),\r\n    withLatestFrom(this.store$),\r\n    mergeMap(([action, storeState]: [fromReports.ExportReport, State]) => {\r\n      const reportId = getSelectedReportId(storeState);\r\n      const async = getIsAsyncReport(storeState);\r\n      const type = action.payload;\r\n\r\n      if (!async) {\r\n        return Observable.create(observer => {\r\n          observer.next(\r\n            new fromReports.DownloadExportedReport(\r\n              `api/report/${reportId}/download_file/${type}/`\r\n            )\r\n          );\r\n          observer.complete();\r\n        });\r\n      }\r\n\r\n      return this.api\r\n        .exportReport({ reportId, type })\r\n        .pipe(\r\n          map(\r\n            ({ task_id }) =>\r\n              new fromReports.CheckExportStatus({ reportId, taskId: task_id })\r\n          )\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  downloadExportedReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.DOWNLOAD_EXPORTED_REPORT),\r\n    mergeMap(\r\n      (action: fromReports.DownloadExportedReport) =>\r\n        (window.location.href = action.payload)\r\n    )\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  cancelExportReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CANCEL_EXPORT_REPORT),\r\n    tap(() =>\r\n      this.snackBar.open('Sorry, something went wrong!', '', { duration: 5000 })\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CREATE_REPORT),\r\n    map((action: fromReports.CreateReport) => action.payload),\r\n    mergeMap(newReport =>\r\n      this.api.submitNewReport(newReport).pipe(\r\n        map(\r\n          createdReport => new fromReports.CreateReportSuccess(createdReport)\r\n        ),\r\n        catchError(error => of(new fromReports.CreateReportError(error)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createReportSuccess$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CREATE_REPORT_SUCCESS),\r\n    map((action: fromReports.CreateReportSuccess) => action.payload.id),\r\n    tap(reportId => this.router.navigate([`/report/${reportId}/`])),\r\n    map(() => new fromReports.ChangeTab(0))\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  createReportError$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.CREATE_REPORT_ERROR),\r\n    tap(error =>\r\n      this.snackBar.open('Invalid report: please reload the page', '', {\r\n        duration: 5000,\r\n      })\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  copyReport$ = this.actions$.pipe(\r\n    ofType(ReportActionTypes.COPY_REPORT),\r\n    map((action: fromReports.CopyReport) => action.payload),\r\n    mergeMap(reportId => this.api.copyReport(reportId)),\r\n    map(createdReport => new fromReports.CreateReportSuccess(createdReport))\r\n  );\r\n\r\n  @Effect()\r\n  checkExportStatus$ = ({\r\n    delayTime = 500,\r\n    scheduler = asyncScheduler\r\n  } = {}) => this.actions$.pipe(\r\n    ofType(ReportActionTypes.CHECK_EXPORT_STATUS),\r\n    delay(delayTime, scheduler),\r\n    mergeMap(\r\n      ({ payload: { reportId, taskId } }: fromReports.CheckExportStatus) =>\r\n        this.api.checkStatus({ reportId, taskId }).pipe(\r\n          map(({ state, link }) => {\r\n            if (state === 'SUCCESS') {\r\n              return new fromReports.DownloadExportedReport(link);\r\n            } else if (state === 'FAILURE') {\r\n              return new fromReports.CancelExportReport();\r\n            } else {\r\n              return new fromReports.CheckExportStatus({ reportId, taskId });\r\n            }\r\n          })\r\n        )\r\n    )\r\n  );\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-saved-timestamp',\r\n  template: `<span class=\"saved-timestamp\">{{this.lastSaved ? 'Last saved: ' + this.lastSaved : this.notSaved}}</span>`,\r\n})\r\nexport class SavedTimestampComponent {\r\n  constructor() {}\r\n  @Input() lastSaved?: Date;\r\n  notSaved = 'Report has not been saved';\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input() title: string;\r\n  @Input() reportName: string;\r\n  @Input() showRightNavButton: boolean;\r\n  @Output() onToggleRightNav = new EventEmitter();\r\n  @Output() changeTitleInput = new EventEmitter();\r\n  @Output() goHome = new EventEmitter();\r\n\r\n  clickGoHome(event: MouseEvent) {\r\n    event.preventDefault();\r\n    this.goHome.emit();\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <div class=\"left-navbar-container\">\r\n    <a mat-icon-button (click)=\"clickGoHome($event)\" href=\"/\">\r\n      <mat-icon>home</mat-icon>\r\n    </a>\r\n  </div>\r\n  <span>{{ title }}&nbsp;\r\n    <mat-form-field *ngIf=\"reportName\">\r\n      <input matInput id=\"title-input\" value=\"{{reportName}}\" (keyup)=\"changeTitleInput.emit($event.currentTarget.value)\">\r\n    </mat-form-field>\r\n  </span>\r\n  <div class=\"right-navbar-container\">\r\n    <div [hidden]=\"!showRightNavButton\">\r\n      <button class=\"button\" (click)=\"this.onToggleRightNav.emit();\" id=\"toggleRight\" type=\"button\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Action } from '@ngrx/store';\r\nimport { NavigationExtras } from '@angular/router';\r\n\r\nexport enum RouterActionTypes {\r\n  GO = '[Router] Go',\r\n  BACK = '[Router] Back',\r\n  FORWARD = '[Router] Forward',\r\n}\r\n\r\nexport class Go implements Action {\r\n  readonly type = RouterActionTypes.GO;\r\n\r\n  constructor(\r\n    public payload: {\r\n      path: any[];\r\n      query?: object;\r\n      extras?: NavigationExtras;\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class Back implements Action {\r\n  readonly type = RouterActionTypes.BACK;\r\n}\r\n\r\nexport class Forward implements Action {\r\n  readonly type = RouterActionTypes.FORWARD;\r\n}\r\n\r\nexport type RouterActions = Go | Back | Forward;\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  EventEmitter,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { IField, IRelatedField } from '../../models/api';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TreeNode } from '@circlon/angular-tree-component';\r\nimport { ITreeNode } from '@circlon/angular-tree-component/lib/defs/api';\r\n\r\n@Component({\r\n  selector: 'app-right-sidebar',\r\n  templateUrl: './right-sidebar.component.html',\r\n  styleUrls: ['./right-sidebar.component.scss'],\r\n})\r\nexport class RightSidebarComponent implements OnChanges {\r\n  @Input() modelName: string;\r\n  @Input() selectedField: IField;\r\n  @Input() lockOpen: boolean;\r\n  @Output() close = new EventEmitter();\r\n\r\n  @Output() selectRelatedField = new EventEmitter<IRelatedField>();\r\n  @Output() expandRelatedField = new EventEmitter<IRelatedField>();\r\n  @Output() searchFields = new EventEmitter<string>();\r\n  @Output() searchRelations = new EventEmitter<string>();\r\n\r\n  @Output() addReportField = new EventEmitter<IField>();\r\n  @Output() selectField = new EventEmitter<IField>();\r\n  @Input() relatedFields: IRelatedField[];\r\n\r\n  @Input()\r\n  set fields(value: IField[]) {\r\n    this.fieldDataSource = new MatTableDataSource(value);\r\n  }\r\n\r\n  @ViewChild('searchFields', { static: true }) searchInput\r\n\r\n  fieldDataSource: MatTableDataSource<IField>;\r\n  displayedColumnsField = ['name', 'button'];\r\n  nodes: TreeNode[];\r\n\r\n  ngOnChanges() {\r\n    this.nodes = this.getRelatedFields();\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  onExpand({ node, isExpanded }: { node: ITreeNode; isExpanded: boolean }) {\r\n    if (isExpanded) {\r\n      this.expandRelatedField.emit(node.data);\r\n    }\r\n  }\r\n\r\n  onActivate({ node }: { node: ITreeNode }) {\r\n    this.selectRelatedField.emit(node.data);\r\n    this.searchInput.nativeElement.value = ''\r\n  }\r\n\r\n  filterTree(text, tree) {\r\n    tree.treeModel.filterNodes(node => {\r\n      return node.data.verbose_name.startsWith(text);\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim();\r\n    filterValue = filterValue.toLowerCase();\r\n    this.fieldDataSource.filter = filterValue;\r\n  }\r\n\r\n  getRelatedFields() {\r\n    return this.relatedFields.map(deepCopy);\r\n  }\r\n}\r\n\r\nfunction deepCopy(obj) {\r\n  const copy = { ...obj };\r\n  copy.name = copy.verbose_name;\r\n  copy.children = copy.children.map(deepCopy);\r\n  copy.hasChildren = true;\r\n  return copy;\r\n}\r\n","<div class=\"header\">\r\n  <h3>{{ modelName }} relations\r\n    <mat-icon *ngIf=\"!lockOpen\" (click)=\"close.emit()\" class=\"close-icon\">close</mat-icon>\r\n  </h3>\r\n</div>\r\n\r\n<div class=\"example-header\">\r\n  <mat-form-field>\r\n    <input id=\"filter\" #filter matInput (keyup)=\"tree.treeModel.filterNodes(filter.value)\" placeholder=\"Search Related Fields\">\r\n  </mat-form-field>\r\n</div>\r\n\r\n<tree-root #tree [nodes]=\"nodes\" (toggleExpanded)=\"onExpand($event)\" (activate)=\"onActivate($event)\"></tree-root>\r\n\r\n<div class=\"header\">\r\n  <h3>Fields</h3>\r\n</div>\r\n\r\n<div class=\"example-header\">\r\n  <mat-form-field>\r\n    <input #searchFields matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search Fields\">\r\n  </mat-form-field>\r\n</div>\r\n\r\n<mat-table [dataSource]=\"fieldDataSource\" matSort #table matSortDisableClear=\"true\">\r\n\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Field Name</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let field\" (click)=\"selectField.emit(field)\">{{field.name}}\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"button\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\r\n    <mat-cell *matCellDef=\"let field\">\r\n      <button class=\"add-button\" (click)=\"addReportField.emit(field)\">\r\n        <span class=\"add-button-content\">\r\n          <mat-icon class=\"add-icon\">add</mat-icon>\r\n          <span class=\"content\">Add</span>\r\n        </span>\r\n      </button>\r\n\r\n    </mat-cell>å\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumnsField\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumnsField;\"></mat-row>\r\n\r\n</mat-table>\r\n\r\n<div *ngIf=\"selectedField\" class=\"selected-field\">\r\n  [{{selectedField.field_type}}] {{selectedField.help_text}}\r\n</div>\r\n","import { State, displayFieldAdapter, filterAdapter } from '../models/reports';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getReports = (state: State) => state.reports;\r\nexport const getTitle = (state: State) => state.title;\r\nexport const getSelectedReport = (state: State) => state.selectedReport;\r\nexport const getSelectedReportId = createSelector(\r\n  getSelectedReport,\r\n  report => report && report.id\r\n);\r\nexport const getSelectedReportName = createSelector(\r\n  getSelectedReport,\r\n  report => report && report.name\r\n);\r\nexport const getFields = (state: State) => state.fields;\r\nexport const getRelatedFields = (state: State) => state.relatedFields;\r\nexport const getDescriptionInput = (state: State) => state.descriptionInput;\r\nexport const getTitleInput = (state: State) => state.titleInput;\r\nexport const getIsDistinct = (state: State) => state.isDistinct;\r\nexport const getPreview = (state: State) => state.reportPreview;\r\nexport const getLastSaved = (state: State) => state.reportSaved;\r\nexport const getNewReportInfo = (state: State) => {\r\n  const report = getSelectedReport(state);\r\n  if (report) {\r\n    const { name, description, root_model } = report;\r\n    return { name, description, root_model };\r\n  }\r\n};\r\nexport const getLastGeneratedReport = createSelector(\r\n  getSelectedReport,\r\n  selectedReport => {\r\n    if (selectedReport && selectedReport.report_file) {\r\n      const { report_file, report_file_creation } = selectedReport;\r\n      return { report_file, report_file_creation };\r\n    }\r\n  }\r\n);\r\nexport const getRightNavIsOpen = (state: State) => state.rightNavIsOpen;\r\n\r\nexport const getDisplayFieldsState = (state: State) => state.displayFields;\r\nconst {\r\n  selectAll: selectAllDisplayFields,\r\n  selectTotal: selectDisplayFieldsCount,\r\n} = displayFieldAdapter.getSelectors();\r\nexport const getDisplayFields = createSelector(\r\n  getDisplayFieldsState,\r\n  selectAllDisplayFields\r\n);\r\nexport const getDisplayFieldsCount = createSelector(\r\n  getDisplayFieldsState,\r\n  selectDisplayFieldsCount\r\n);\r\nexport const getFiltersState = (state: State) => state.filters;\r\nconst {\r\n  selectAll: selectAllFilters,\r\n  selectTotal: selectFiltersCount,\r\n} = filterAdapter.getSelectors();\r\nexport const getFilters = createSelector(getFiltersState, selectAllFilters);\r\nexport const getFiltersCount = createSelector(\r\n  getFiltersState,\r\n  selectFiltersCount\r\n);\r\nexport const getActiveTab = (state: State) => state.activeTab;\r\n\r\nexport const getEditedReport = (state: State) => ({\r\n  ...state.selectedReport,\r\n  description: getDescriptionInput(state),\r\n  distinct: getIsDistinct(state),\r\n  displayfield_set: getDisplayFields(state),\r\n  filterfield_set: getFilters(state),\r\n  name: getTitleInput(state),\r\n});\r\nexport const getSelectedField = (state: State) => state.selectedField;\r\nexport const isGeneratingReport = (state: State) => state.generatingReport;\r\nexport const hasEditedSinceLastSave = (state: State) =>\r\n  state.editedSinceLastSave;\r\nexport const getErrors = (state: State) => state.errors;\r\n","import { Component, Input } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../../../reducers';\r\nimport { getDescriptionInput, getIsDistinct } from '../../../selectors';\r\nimport {\r\n  ChangeReportDescription,\r\n  ToggleReportDistinct,\r\n  DeleteReport,\r\n  CopyReport,\r\n} from '../../../actions/reports';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IReportDetailed } from '../../../models/api';\r\nimport {\r\n  ConfirmModalComponent,\r\n  IConfirmModalData,\r\n} from '../../../confirm/confirm-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-options-tab',\r\n  templateUrl: './options-tab.component.html',\r\n})\r\nexport class OptionsTabComponent {\r\n  constructor(private store: Store<State>, public dialog: MatDialog) {}\r\n\r\n  descriptionInput$ = this.store.select(getDescriptionInput);\r\n  isChecked$ = this.store.select(getIsDistinct);\r\n  @Input() report: IReportDetailed;\r\n\r\n  onChange(value: string) {\r\n    this.store.dispatch(new ChangeReportDescription(value));\r\n  }\r\n\r\n  onClick(value: boolean) {\r\n    this.store.dispatch(new ToggleReportDistinct(value));\r\n  }\r\n\r\n  onDelete(e: MouseEvent) {\r\n    e.preventDefault();\r\n\r\n    const dialogRef = this.dialog.open(ConfirmModalComponent, {\r\n      data: {\r\n        title: `Are you sure you want to delete ${this.report.name}`,\r\n        subtitle: 'You will not be able to undo this action.',\r\n        confirmText: 'Delete',\r\n      } as IConfirmModalData,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.store.dispatch(new DeleteReport(this.report.id));\r\n      }\r\n    });\r\n  }\r\n\r\n  copyReport(e: MouseEvent) {\r\n    e.preventDefault();\r\n    this.store.dispatch(new CopyReport(this.report.id));\r\n  }\r\n}\r\n","<div class=\"options-tab\">\r\n  <mat-list class=\"options-content\">\r\n    <form>\r\n\r\n      <mat-list-item>\r\n        <mat-form-field>\r\n          <textarea matInput placeholder=\"Description\" matTextareaAutosize [value]=\"descriptionInput$ | async\" (keyup)=\"onChange($event.currentTarget.value)\"></textarea>\r\n        </mat-form-field>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item>\r\n        <mat-checkbox matListIcon [checked]=\"isChecked$ | async\" (change)=\"onClick($event.checked)\"></mat-checkbox>\r\n        <span matLine>Is Distinct (maybe help reduce duplicate rows). Read\r\n          <a href=\"https://docs.djangoproject.com/en/2.0/ref/models/querysets/#django.db.models.query.QuerySet.distinct\" target=\"_blank\">more\r\n          </a>.\r\n        </span>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item>\r\n        <mat-icon matListIcon (click)=\"onDelete($event)\">delete</mat-icon>\r\n        <a matLine href=\"#\" alt=\"Delete this report\" (click)=\"onDelete($event)\">Delete this report</a>\r\n      </mat-list-item>\r\n\r\n      <mat-list-item *ngIf=\"report\" (click)=\"this.copyReport($event)\">\r\n        <mat-icon matListIcon>content_copy</mat-icon>\r\n        <a matLine href=\"/report_builder/report/{{report.id}}/create_copy/\">Copy this report</a>\r\n      </mat-list-item>\r\n    </form>\r\n  </mat-list>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IField } from '../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-field-component',\r\n  template: `<div>\r\n    <span (click)=\"selectField.emit(field)\">{{field.name}}</span><mat-icon (click)=\"addReportField.emit(field)\">add</mat-icon>\r\n  </div>`,\r\n})\r\nexport class FieldComponent {\r\n  constructor() {}\r\n\r\n  @Input() field: IField;\r\n  @Output() addReportField = new EventEmitter<IField>();\r\n  @Output() selectField = new EventEmitter<IField>();\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { IFilter } from '../models/api';\r\n\r\nexport enum FilterActionTypes {\r\n  LOAD_ALL = '[Filters] Load All',\r\n  UPDATE_ONE = '[Filters] Update One',\r\n  UPDATE_MANY = '[Filters] Update Many',\r\n  DELETE_ONE = '[Filters] Delete One',\r\n}\r\n\r\nexport class LoadAll implements Action {\r\n  readonly type = FilterActionTypes.LOAD_ALL;\r\n  constructor(public payload: IFilter[]) {}\r\n}\r\n\r\nexport class UpdateOne implements Action {\r\n  readonly type = FilterActionTypes.UPDATE_ONE;\r\n  constructor(public payload: Update<IFilter>) {}\r\n}\r\n\r\nexport class UpdateMany implements Action {\r\n  readonly type = FilterActionTypes.UPDATE_MANY;\r\n  constructor(public payload: Update<IFilter>[]) {}\r\n}\r\n\r\nexport class DeleteOne implements Action {\r\n  readonly type = FilterActionTypes.DELETE_ONE;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport type FilterActions = LoadAll | UpdateOne | UpdateMany | DeleteOne;\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { RouterNavigationAction, ROUTER_NAVIGATION } from '@ngrx/router-store';\r\nimport { tap, map, filter } from 'rxjs/operators';\r\n\r\nimport * as fromReports from '../actions/reports';\r\nimport { RouterActionTypes, Go } from '../actions/router';\r\nimport { RouterStateUrl } from '../reducers';\r\n\r\n@Injectable()\r\nexport class RouterEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private location: Location\r\n  ) {}\r\n\r\n  @Effect({ dispatch: false })\r\n  navigate$ = this.actions$.pipe(\r\n    ofType(RouterActionTypes.GO),\r\n    map((action: Go) => action.payload),\r\n    tap(({ path, query: queryParams, extras }) =>\r\n      this.router.navigate(path, { queryParams, ...extras })\r\n    )\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  navigateBack$ = this.actions$.pipe(\r\n    ofType(RouterActionTypes.BACK),\r\n    tap(() => this.location.back())\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  navigateForward$ = this.actions$.pipe(\r\n    ofType(RouterActionTypes.FORWARD),\r\n    tap(() => this.location.forward())\r\n  );\r\n\r\n  @Effect()\r\n  routeChange$ = this.actions$.pipe(\r\n    ofType(ROUTER_NAVIGATION),\r\n    map((action: RouterNavigationAction<RouterStateUrl>) => {\r\n      const route = action.payload.routerState;\r\n      if (route.url === '/') {\r\n        return new fromReports.GetReportList();\r\n      }\r\n      if (route.params.id) {\r\n        return new fromReports.GetReport(route.params.id);\r\n      }\r\n      return null;\r\n    }),\r\n    filter(Boolean)\r\n  );\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { ChangeTab, EditReport } from '../../actions/reports';\r\nimport * as DisplayFieldActions from '../../actions/display-field';\r\nimport * as FilterActions from '../../actions/filter';\r\nimport { State } from '../../reducers';\r\nimport {\r\n  getActiveTab,\r\n  getDisplayFields,\r\n  getFilters,\r\n  getFormatOptions,\r\n  getSelectedReport,\r\n  hasEditedSinceLastSave,\r\n  getErrors,\r\n} from '../../selectors';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\nimport { Update } from '@ngrx/entity';\r\nimport { IDisplayField, IFilter } from '../../models/api';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TabsComponent implements OnInit {\r\n  constructor(private store: Store<State>) {}\r\n  displayFields$ = this.store.select(getDisplayFields);\r\n  filters$ = this.store.select(getFilters);\r\n  activeTab$ = this.store.select(getActiveTab);\r\n  formatOptions$ = this.store.select(getFormatOptions);\r\n  report$ = this.store.select(getSelectedReport);\r\n  hasChanged$ = this.store.select(hasEditedSinceLastSave);\r\n  errors$ = this.store.select(getErrors);\r\n  @ViewChild('tabs', { static: true }) tabs: MatTabGroup;\r\n\r\n  ngOnInit() {\r\n    this.activeTab$.subscribe(number => (this.tabs.selectedIndex = number));\r\n  }\r\n\r\n  tabChange(index: number) {\r\n    this.store.dispatch(new ChangeTab(index));\r\n  }\r\n\r\n  updateDisplayField(update: Update<IDisplayField>) {\r\n    this.store.dispatch(new DisplayFieldActions.UpdateOne(update));\r\n  }\r\n\r\n  deleteDisplayField(id: number) {\r\n    this.store.dispatch(new DisplayFieldActions.DeleteOne(id));\r\n  }\r\n\r\n  updateFilter(update: Update<IFilter>) {\r\n    this.store.dispatch(new FilterActions.UpdateOne(update));\r\n  }\r\n\r\n  deleteFilter(id: number) {\r\n    this.store.dispatch(new FilterActions.DeleteOne(id));\r\n  }\r\n\r\n  saveReport() {\r\n    this.store.dispatch(new EditReport());\r\n  }\r\n}\r\n","<mat-tab-group #tabs class=\"tab-group\" (selectedTabChange)=\"tabChange($event.index)\">\r\n  <mat-tab label=\"Display\">\r\n    <app-display-tab *ngIf=\"displayFields$ | async\" [fields]=\"displayFields$ | async\" [formatOptions]=\"formatOptions$ | async\"\r\n      (updateField)=\"updateDisplayField($event)\" (deleteField)=\"deleteDisplayField($event)\" (saveReport)=\"saveReport()\" [hasChanged]=\"hasChanged$ | async\"\r\n      [errors]=\"errors$ | async\"></app-display-tab>\r\n  </mat-tab>\r\n  <mat-tab label=\"Filter\">\r\n    <app-filter-tab *ngIf=\"filters$ | async\" [filters]=\"filters$ | async\" (updateFilter)=\"updateFilter($event)\" (deleteFilter)=\"deleteFilter($event)\"\r\n      (saveReport)=\"saveReport()\" [hasChanged]=\"hasChanged$ | async\" [errors]=\"errors$ | async\"></app-filter-tab>\r\n  </mat-tab>\r\n  <mat-tab label=\"Report\">\r\n    <app-report-tab></app-report-tab>\r\n  </mat-tab>\r\n  <mat-tab label=\"Options\">\r\n    <app-options-tab [report]=\"report$ | async\"></app-options-tab>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, HostListener, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../reducers';\r\nimport {\r\n  getReports,\r\n  getRelatedFields,\r\n  getFields,\r\n  getTitle,\r\n  getRightNavIsOpen,\r\n  getActiveTab,\r\n  getSelectedReport,\r\n  getSelectedField,\r\n  hasEditedSinceLastSave,\r\n  getSelectedReportName,\r\n} from '../selectors';\r\nimport { INestedRelatedField, IField } from '../models/api';\r\nimport {\r\n  GetReport,\r\n  GetFields,\r\n  GetRelatedFields,\r\n  ToggleRightNav,\r\n  AddReportField,\r\n  SelectField,\r\n  ChangeReportTitle,\r\n} from '../actions/reports';\r\nimport { Go } from '../actions/router';\r\nimport { ComponentCanDeactivate } from '../generic.guard';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport {\r\n  ConfirmModalComponent,\r\n  IConfirmModalData,\r\n} from '../confirm/confirm-modal.component';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements ComponentCanDeactivate {\r\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\r\n  title$ = this.store.select(getTitle);\r\n  activeTab$ = this.store.select(getActiveTab);\r\n\r\n  listReports$ = this.store.select(getReports);\r\n\r\n  fields$ = this.store.select(getFields);\r\n\r\n  relatedFields$ = this.store.select(getRelatedFields);\r\n\r\n  selectedReport$ = this.store.select(getSelectedReport);\r\n  selectedReportName$ = this.store.select(getSelectedReportName);\r\n  rightNavIsOpen$ = this.store.select(getRightNavIsOpen);\r\n  getFields$ = this.store.select(getFields);\r\n  selectedField$ = this.store.select(getSelectedField);\r\n  edited = false;\r\n\r\n  mode: 'over' | 'side' = 'over';\r\n  lockOpen = false;\r\n\r\n  constructor(\r\n    private store: Store<State>,\r\n    public dialog: MatDialog,\r\n    breakpointObserver: BreakpointObserver\r\n  ) {\r\n    store\r\n      .select(hasEditedSinceLastSave)\r\n      .subscribe(edited => (this.edited = edited));\r\n\r\n    breakpointObserver\r\n      .observe([Breakpoints.Handset, Breakpoints.TabletPortrait])\r\n      .subscribe(result => {\r\n        this.mode = result.matches ? 'over' : 'side';\r\n      });\r\n\r\n    breakpointObserver.observe(['(min-width: 2000px)']).subscribe(result => {\r\n      this.lockOpen = result.matches;\r\n    });\r\n  }\r\n\r\n  canDeactivate() {\r\n    if (this.edited) {\r\n      const dialogRef = this.dialog.open(ConfirmModalComponent, {\r\n        data: {\r\n          title: 'Are you sure you want to navigate away from this report?',\r\n          subtitle: 'All of your changes will be lost.',\r\n        } as IConfirmModalData,\r\n      });\r\n      return dialogRef.afterClosed();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  @HostListener('window:beforeunload')\r\n  beforeUnload() {\r\n    if (this.edited) {\r\n      return confirm();\r\n    }\r\n  }\r\n\r\n  openNav(bool?: boolean) {\r\n    if (!this.lockOpen) {\r\n      if (bool === undefined) {\r\n        this.sidenav.toggle();\r\n      } else if (bool) {\r\n        this.sidenav.open();\r\n      } else {\r\n        this.sidenav.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  onClickReport(reportId: number) {\r\n    this.store.dispatch(new GetReport(reportId));\r\n  }\r\n\r\n  selectRelatedField(relatedField: INestedRelatedField) {\r\n    this.store.dispatch(new GetFields(relatedField));\r\n  }\r\n\r\n  expandRelatedField(relatedField: INestedRelatedField) {\r\n    this.store.dispatch(new GetRelatedFields(relatedField));\r\n  }\r\n\r\n  toggleRightNav(open: boolean) {\r\n    this.store.dispatch(new ToggleRightNav(open));\r\n  }\r\n\r\n  addReportField(field: IField) {\r\n    this.store.dispatch(new AddReportField(field));\r\n  }\r\n\r\n  selectField(field: IField) {\r\n    this.store.dispatch(new SelectField(field));\r\n  }\r\n\r\n  editTitle(title: string) {\r\n    this.store.dispatch(new ChangeReportTitle(title));\r\n  }\r\n\r\n  goHome() {\r\n    this.store.dispatch(new Go({ path: ['/'] }));\r\n  }\r\n}\r\n","<app-header (onToggleRightNav)=\"openNav()\" (changeTitleInput)=\"editTitle($event)\" [title]=\"title$ | async\" [showRightNavButton]=\"(activeTab$ | async) <= 1\"\r\n  [reportName]=\"(selectedReportName$ | async)\" (goHome)=\"goHome()\">\r\n</app-header>\r\n<mat-sidenav-container class=\"left-sidenav-container\">\r\n  <mat-sidenav-content>\r\n    <app-tabs>\r\n    </app-tabs>\r\n  </mat-sidenav-content>\r\n  <mat-sidenav #sidenav [mode]=\"(mode)\" [opened]=\"lockOpen\" [disableClose]=\"lockOpen\" position=\"end\" (openedChange)=\"toggleRightNav($event)\">\r\n    <app-right-sidebar #rightMenu [modelName]=\"(selectedReportName$ | async)\" [relatedFields]=\"relatedFields$ | async\" [fields]=\"fields$ | async\"\r\n      [selectedField]=\"selectedField$ | async\" (selectRelatedField)=\"selectRelatedField($event)\" (close)=\"openNav(false)\" (addReportField)=\"addReportField($event)\"\r\n      (expandRelatedField)=\"expandRelatedField($event)\" (selectField)=\"selectField($event)\" [lockOpen]=\"lockOpen\"></app-right-sidebar>\r\n  </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\nimport {\r\n  ReportsResponse,\r\n  IReportDetailed,\r\n  ContentTypeResponse,\r\n  IGetRelatedFieldRequest,\r\n  IRelatedField,\r\n  IField,\r\n  IReportPreview,\r\n  IConfig,\r\n  INewReport,\r\n  IAsyncTaskId,\r\n  ITaskStatus,\r\n  IExportType,\r\n} from './models/api';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  apiUrl = 'api/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getConfig() {\r\n    return this.http.get<IConfig>(this.apiUrl + 'config/');\r\n  }\r\n\r\n  getRootModels() {\r\n    return this.http.get<ContentTypeResponse>(this.apiUrl + 'contenttypes/');\r\n  }\r\n\r\n  submitNewReport(form: INewReport) {\r\n    return this.http.post<IReportDetailed>(this.apiUrl + 'report/', form);\r\n  }\r\n\r\n  getReports() {\r\n    return this.http.get<ReportsResponse>(this.apiUrl + 'reports/');\r\n  }\r\n\r\n  getReport(reportId: number) {\r\n    return this.http.get<IReportDetailed>(this.apiUrl + `report/${reportId}/`);\r\n  }\r\n\r\n  getRelatedFields(request: IGetRelatedFieldRequest) {\r\n    return this.http.post<IRelatedField[]>(\r\n      this.apiUrl + 'related_fields/',\r\n      request\r\n    );\r\n  }\r\n\r\n  getFields(request: IGetRelatedFieldRequest) {\r\n    return this.http.post<IField[]>(this.apiUrl + 'fields/', request);\r\n  }\r\n\r\n  deleteReport(reportId: number) {\r\n    return this.http.delete(this.apiUrl + `report/${reportId}/`);\r\n  }\r\n\r\n  editReport(form: IReportDetailed) {\r\n    return this.http.put<IReportDetailed>(\r\n      this.apiUrl + `report/${form.id}/`,\r\n      form\r\n    );\r\n  }\r\n\r\n  generatePreview(reportId: number) {\r\n    return this.http.get<IReportPreview>(\r\n      this.apiUrl + `report/${reportId}/generate/`\r\n    );\r\n  }\r\n\r\n  exportReport({ reportId, type }: { reportId: number; type: IExportType }) {\r\n    return this.http.get<IAsyncTaskId>(\r\n      `api/report/${reportId}/download_file/${type}/`\r\n    );\r\n  }\r\n\r\n  checkStatus({\r\n    reportId,\r\n    taskId,\r\n  }: {\r\n    reportId: number | string;\r\n    taskId: string;\r\n  }) {\r\n    return this.http.get<ITaskStatus>(\r\n      `api/report/${reportId}/check_status/${taskId}/`\r\n    );\r\n  }\r\n\r\n  copyReport(reportId: number) {\r\n    return this.http.post<IReportDetailed>(\r\n      this.apiUrl + `report/${reportId}/copy_report/`,\r\n      null\r\n    );\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport {\r\n  IReport,\r\n  IReportDetailed,\r\n  IRelatedField,\r\n  IField,\r\n  IReportPreview,\r\n  INewReport,\r\n  IBase,\r\n  INestedRelatedField,\r\n  IExportType,\r\n  IReportErrors,\r\n} from '../models/api';\r\n\r\nexport enum ReportActionTypes {\r\n  GET_REPORT_LIST = 'Get Report List',\r\n  SET_REPORT_LIST = 'Set Report List',\r\n  GET_REPORT = 'Get Report',\r\n  GET_TITLE = 'Get Title',\r\n  GET_REPORT_SUCCESS = 'Get Report Success',\r\n  GET_REPORT_FIELDS_SUCCESS = 'Get Report Fields Success',\r\n  GET_FIELDS = 'Get Fields',\r\n  GET_FIELDS_SUCCESS = 'Get Fields Success',\r\n  GET_RELATED_FIELDS = 'Get Related Fields',\r\n  GET_RELATED_FIELDS_SUCCESS = 'Get Related Fields Success',\r\n  CHANGE_REPORT_DESCRIPTION = 'Change Report Description',\r\n  CHANGE_REPORT_TITLE = 'Change Report Title',\r\n  TOGGLE_REPORT_DISTINCT = 'Toggle Report Distinct',\r\n  DELETE_REPORT = 'Delete Report',\r\n  DELETE_REPORT_SUCCESS = 'Delete Report Success',\r\n  EDIT_REPORT = 'Edit Report',\r\n  EDIT_REPORT_SUCCESS = 'Edit Report Success',\r\n  EDIT_REPORT_FAILURE = 'Edit Report Failure',\r\n  GENERATE_PREVIEW = 'Generate Preview',\r\n  GENERATE_PREVIEW_SUCCESS = 'Generate Preview Success',\r\n  EXPORT_REPORT = 'Export Report',\r\n  CREATE_REPORT = 'Create Report',\r\n  CREATE_REPORT_SUCCESS = 'Create Report Success',\r\n  CREATE_REPORT_ERROR = 'Create Report Error',\r\n  CANCEL_GENERATE_PREVIEW = 'Cancel Generate Preview',\r\n  COPY_REPORT = 'Copy Report',\r\n  DOWNLOAD_EXPORTED_REPORT = 'Download Exported Report',\r\n  CHECK_EXPORT_STATUS = 'Check Export Status',\r\n  CANCEL_EXPORT_REPORT = 'Cancel Export Report',\r\n  TOGGLE_LEFT_NAV = 'Toggle Left Nav',\r\n  SORT_REPORTS = 'Sort Reports',\r\n  TOGGLE_RIGHT_NAV = 'Toggle Right Nav',\r\n  CHANGE_TAB = 'Change Tab',\r\n  ADD_REPORT_FIELD = 'Add Report Field',\r\n  SELECT_FIELD = 'Select Field',\r\n  CHANGE_DISPLAY_FIELD_POSITION = 'Change Display Field Position',\r\n  CHANGE_FILTER_POSITION = 'Change Filter Position',\r\n}\r\n\r\n/** Request an updated list of all reports from the api */\r\nexport class GetReportList implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT_LIST;\r\n}\r\n\r\nexport class SetReportList implements Action {\r\n  readonly type = ReportActionTypes.SET_REPORT_LIST;\r\n  constructor(public payload: IReport[]) {}\r\n}\r\n\r\n/** Get the report details for one report for active editing */\r\nexport class GetReport implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class GetTitle implements Action {\r\n  readonly type = ReportActionTypes.GET_TITLE;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class GetReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT_SUCCESS;\r\n  constructor(public payload: IReportDetailed) {}\r\n}\r\n\r\nexport class GetReportFieldsSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_REPORT_FIELDS_SUCCESS;\r\n  constructor(\r\n    public payload: { relatedFields: IRelatedField[]; fields: IField[] }\r\n  ) {}\r\n}\r\n\r\nexport class GetFields implements Action {\r\n  readonly type = ReportActionTypes.GET_FIELDS;\r\n  constructor(public payload: IRelatedField) {}\r\n}\r\n\r\nexport class GetFieldsSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_FIELDS_SUCCESS;\r\n  constructor(public payload: IField[]) {}\r\n}\r\n\r\nexport class GetRelatedFields implements Action {\r\n  readonly type = ReportActionTypes.GET_RELATED_FIELDS;\r\n  constructor(public payload: INestedRelatedField) {}\r\n}\r\n\r\nexport class GetRelatedFieldsSuccess implements Action {\r\n  readonly type = ReportActionTypes.GET_RELATED_FIELDS_SUCCESS;\r\n  constructor(\r\n    public payload: {\r\n      parentId: number;\r\n      relatedFields: IRelatedField[];\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class ChangeReportDescription implements Action {\r\n  readonly type = ReportActionTypes.CHANGE_REPORT_DESCRIPTION;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ChangeReportTitle implements Action {\r\n  readonly type = ReportActionTypes.CHANGE_REPORT_TITLE;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ToggleReportDistinct implements Action {\r\n  readonly type = ReportActionTypes.TOGGLE_REPORT_DISTINCT;\r\n  constructor(public payload?: boolean) {}\r\n}\r\n\r\nexport class DeleteReport implements Action {\r\n  readonly type = ReportActionTypes.DELETE_REPORT;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class DeleteReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.DELETE_REPORT_SUCCESS;\r\n  constructor(public reportId: number) {}\r\n}\r\n\r\nexport class EditReport implements Action {\r\n  readonly type = ReportActionTypes.EDIT_REPORT;\r\n  constructor() {}\r\n}\r\n\r\nexport class EditReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.EDIT_REPORT_SUCCESS;\r\n  constructor(public payload: IReportDetailed) {}\r\n}\r\n\r\nexport class EditReportFailure implements Action {\r\n  readonly type = ReportActionTypes.EDIT_REPORT_FAILURE;\r\n  constructor(public payload: IReportErrors) {}\r\n}\r\n\r\nexport class GeneratePreview implements Action {\r\n  readonly type = ReportActionTypes.GENERATE_PREVIEW;\r\n  constructor() {}\r\n}\r\n\r\nexport class GeneratePreviewSuccess implements Action {\r\n  readonly type = ReportActionTypes.GENERATE_PREVIEW_SUCCESS;\r\n  constructor(public payload: IReportPreview) {}\r\n}\r\n\r\nexport class CancelGeneratePreview implements Action {\r\n  readonly type = ReportActionTypes.CANCEL_GENERATE_PREVIEW;\r\n}\r\n\r\nexport class ExportReport implements Action {\r\n  readonly type = ReportActionTypes.EXPORT_REPORT;\r\n  constructor(public payload: IExportType) {}\r\n}\r\n\r\nexport class DownloadExportedReport implements Action {\r\n  readonly type = ReportActionTypes.DOWNLOAD_EXPORTED_REPORT;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CheckExportStatus implements Action {\r\n  readonly type = ReportActionTypes.CHECK_EXPORT_STATUS;\r\n  constructor(public payload: { reportId: string | number; taskId: string }) {}\r\n}\r\n\r\nexport class CancelExportReport implements Action {\r\n  readonly type = ReportActionTypes.CANCEL_EXPORT_REPORT;\r\n}\r\n\r\nexport class CreateReport implements Action {\r\n  readonly type = ReportActionTypes.CREATE_REPORT;\r\n  constructor(public payload: INewReport) {}\r\n}\r\n\r\nexport class CreateReportSuccess implements Action {\r\n  readonly type = ReportActionTypes.CREATE_REPORT_SUCCESS;\r\n  constructor(public payload: IReportDetailed) {}\r\n}\r\n\r\nexport class CreateReportError implements Action {\r\n  readonly type = ReportActionTypes.CREATE_REPORT_ERROR\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class CopyReport implements Action {\r\n  readonly type = ReportActionTypes.COPY_REPORT;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class ToggleRightNav implements Action {\r\n  readonly type = ReportActionTypes.TOGGLE_RIGHT_NAV;\r\n  constructor(public payload?: boolean) {}\r\n}\r\n\r\nexport class SortReports implements Action {\r\n  readonly type = ReportActionTypes.SORT_REPORTS;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class ChangeTab implements Action {\r\n  readonly type = ReportActionTypes.CHANGE_TAB;\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class AddReportField implements Action {\r\n  readonly type = ReportActionTypes.ADD_REPORT_FIELD;\r\n  constructor(public payload: IBase) {}\r\n}\r\n\r\nexport class SelectField implements Action {\r\n  readonly type = ReportActionTypes.SELECT_FIELD;\r\n  constructor(public payload: IField) {}\r\n}\r\n\r\nexport type ReportActions =\r\n  | GetReportList\r\n  | GetReportFieldsSuccess\r\n  | SetReportList\r\n  | GetReport\r\n  | GetTitle\r\n  | GetReportSuccess\r\n  | GetFields\r\n  | GetFieldsSuccess\r\n  | GetRelatedFields\r\n  | GetRelatedFieldsSuccess\r\n  | ChangeReportDescription\r\n  | ChangeReportTitle\r\n  | ToggleReportDistinct\r\n  | DeleteReport\r\n  | DeleteReportSuccess\r\n  | EditReport\r\n  | EditReportSuccess\r\n  | EditReportFailure\r\n  | GeneratePreview\r\n  | GeneratePreviewSuccess\r\n  | ExportReport\r\n  | CancelExportReport\r\n  | CancelGeneratePreview\r\n  | CreateReport\r\n  | CreateReportSuccess\r\n  | CreateReportError\r\n  | CopyReport\r\n  | DownloadExportedReport\r\n  | CheckExportStatus\r\n  | SortReports\r\n  | ToggleRightNav\r\n  | SortReports\r\n  | ChangeTab\r\n  | AddReportField\r\n  | SelectField;\r\n","import { ConfigActions, ConfigActionTypes } from '../actions/config';\r\nimport { State } from '../models/config';\r\n\r\nexport function reducer(state = {}, action: ConfigActions): State {\r\n  switch (action.type) {\r\n    case ConfigActionTypes.GET_CONFIG_SUCCESS: {\r\n      return action.payload;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"]}